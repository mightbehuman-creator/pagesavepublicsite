{"version":3,"sources":["features/submissionbar/SubmissionBar.module.css","constants.js","features/archive/archiveAPI.js","features/archive/archiveSlice.js","resources/disk.svg","features/archive/Archive.js","features/submissionbar/submissionbarAPI.js","features/submissionbar/submissionbarSlice.js","features/submissionbar/SubmissionBar.js","services/firebase.js","component/Hero.js","component/Footer.js","features/progressdialog/progressdialogSlice.js","helper/util.js","features/progressdialog/ProgressDialog.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","sagas.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","productionURL","fetchArchives","endpoint","Promise","resolve","reject","axios","get","then","response","console","log","catch","error","fetchArchivesAsync","createAsyncThunk","a","fetchArchivesAPI","data","archiveSlice","createSlice","name","initialState","archives","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","selectArchives","archive","selectStatus","useStyles","makeStyles","theme","centering","display","justifyContent","alignItems","marginTop","spacing","archivecontainer","firstArchive","gridcontainer","backgroundColor","palette","background","paper","gridTemplateColumns","maxWidth","imgofpage","width","overflowY","height","maxHeight","verticalAlign","objectFit","objectPosition","archiveTitle","fontFamily","fillheight","SingleArchive","props","classes","className","idx","Typography","variant","gutterBottom","title","Container","Paper","elevation","href","img0B","target","rel","src","img0","img1B","img1","img2B","img2","style","paddingTop","Link","url","Archive","dispatch","useDispatch","useSelector","reverseArchives","reverse","useState","page","setPage","useEffect","useSpring","loop","to","opacity","color","from","config","duration","position","filter","x","map","id","Pagination","onChange","e","v","count","Math","ceil","length","submitURL","post","submitURLAsync","selectSBOpen","submissionbar","snackbarOpen","selectSBMsg","snackbarMsg","selectSBType","snackbarType","submissionbarSlice","closeSB","showInvalidURLMsg","actions","container","savebutton","minWidth","alignSelf","breakpoints","up","flexDirection","minwidth","marginLeft","input","root","margin","SubmissionBar","textRef","React","createRef","preventDefault","current","value","validUrl","isUri","onSubmit","noValidate","autoComplete","TextField","inputRef","label","Button","startIcon","onClick","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","Transition","forwardRef","ref","Slide","direction","heroBackground","textAlign","boxSizing","greenIndicator","borderRadius","animation","redIndicator","transform","Hero","setStatus","diskanimation","on","snapshot","val","errorObject","div","diskimg","right","Dialog","open","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","CircularProgress","footercontainer","minHeight","primary","dark","borderTop","footertext","contrastText","footerMarginTop","progressdialogSlice","urlsInProgress","showProgressDialog","closeDialog","updateUrls","newState","Object","entries","link","selectURLInProgress","progressdialog","selectProgressDialogIsShowing","ellipsis","str","limit","substr","bottom","paddingBottom","header","headericon","acsummary","padding","acsummarycontent","lastchild","checkmark","urlcontainer","urlcontainercompleted","overrideaccordionshadowandmargin","boxShadow","border","expanded","urls","wordBreak","whiteSpace","textOverflow","processingQueue","down","fontSize","typography","body1","ProgressDialog","existingURLs","isProgressDialogVisible","anchorEl","type","setExpanded","useTheme","window","exu","loopingStyle","rotateZ","in","values","mountOnEnter","unmountOnExit","Box","m","paddingRight","paddingLeft","bgcolor","Accordion","AccordionSummary","expandIcon","aria-controls","p","content","IconButton","top","aria-label","AccordionDetails","body","LinearProgress","size","main","Alert","App","isSBOpen","SBMsg","SBMsgType","handleClose","event","reason","CssBaseline","Snackbar","autoHideDuration","onClose","severity","Footer","fetchCount","amount","setTimeout","incrementAsync","counterSlice","increment","decrement","incrementByAmount","queueChangesAsync","watchQueueChangesAsync","rootSaga","select","put","takeLatest","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","counter","counterReducer","submissionBarReducer","archiveReducer","progressdialogReducer","middleware","getDefaultMiddleware","run","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0905abf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SubmissionBar_container__20zvx\",\"inputbar\":\"SubmissionBar_inputbar__eWceA\"};","export const productionURL = \"https://pagesave.herokuapp.com\";\nexport const localURL = 'http://localhost:5000';","import axios from 'axios';\nimport { localURL, productionURL } from '../../constants.js'\nexport function fetchArchives() {\n    let endpoint = '';\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n        endpoint = localURL + '/pagesave';\n        // dev code\n    } else {\n        // production code\n        endpoint = productionURL + '/pagesave';\n    }\n    return new Promise((resolve, reject) => {\n        axios.get(endpoint, {\n        })\n            .then(function (response) {\n                console.log(response);\n                resolve(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n                reject(error);\n            });\n\n    });\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchArchives as fetchArchivesAPI } from './archiveAPI';\n\nconst initialState = {\n    archives: [],\n    status: 'loading',\n};\n\nexport const fetchArchivesAsync = createAsyncThunk(\n    'archive/fetchArchives',\n    async () => {\n        const response = await fetchArchivesAPI();\n        return response.data;\n    }\n);\n\nexport const archiveSlice = createSlice({\n    name: 'archive',\n    initialState,\n    reducers: {\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchArchivesAsync.pending, (state) => {\n                // state.status = 'loading';\n            })\n            .addCase(fetchArchivesAsync.fulfilled, (state, action) => {\n                state.status = 'idle';\n                state.archives = action.payload;\n            })\n    }\n});\n\n\nexport const selectArchives = (state) => state.archive.archives;\nexport const selectStatus = (state) => state.archive.status;\nexport default archiveSlice.reducer;","export default __webpack_public_path__ + \"static/media/disk.4e864010.svg\";","import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchArchivesAsync, selectArchives, selectStatus } from './archiveSlice';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Link from '@material-ui/core/Link';\nimport { useSpring, animated } from 'react-spring';\nimport diskimg from '../../resources/disk.svg';\n\n\nconst EACH_PAGE_COUNT = 5;\n\nconst useStyles = makeStyles((theme) => ({\n    centering: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: theme.spacing(4),\n    },\n    archivecontainer: {\n        marginTop: theme.spacing(8),\n    },\n    firstArchive: {\n        marginTop: theme.spacing(4),\n    },\n    gridcontainer: {\n        backgroundColor: theme.palette.background.paper,\n        display: \"grid\",\n        gridTemplateColumns: \"2fr 3fr 4fr\",\n        maxWidth: \"100%\",\n        marginTop: theme.spacing(3),\n    },\n    imgofpage: {\n        width: \"max-content\",\n        overflowY: \"hidden\",\n        height: \"100%\",\n        maxHeight: \"100%\",\n        maxWidth: \"100%\",\n        verticalAlign: \"top\",\n        objectFit: \"cover\",\n        // objectFit: \"contain\",\n        // objectFit: \"scale-down\",\n        // https://www.w3schools.com/css/css3_object-fit.asp\n        objectPosition: \"0% 0%\",\n    },\n    archiveTitle: {\n        fontFamily: \"'Train One', cursive\",\n    },\n    paper: {\n        height: \"100%\",\n    },\n    fillheight: {\n        // height: \"100%\",\n        height: \"200px\",\n    }\n}));\n\nfunction SingleArchive(props) {\n    console.log('props withing single archive');\n    console.log(props);\n    const classes = useStyles();\n\n    return (\n        <div className={props.idx == 0 ? classes.firstArchive : classes.archivecontainer} >\n            <Typography variant=\"h5\" gutterBottom>\n                {props.title}\n            </Typography>\n            <div className={classes.gridcontainer}>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img0B} target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n                            <img className={classes.imgofpage} src={props.img0} />\n                        </a>\n                    </Paper>\n                </Container>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img1B} target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n                            <img className={classes.imgofpage} src={props.img1} />\n                        </a>\n                    </Paper>\n                </Container>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img2B} target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n                            <img className={classes.imgofpage} src={props.img2} />\n                        </a>\n                    </Paper>\n                </Container>\n            </div>\n            <Container style={{ paddingTop: \"16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                <Link href={props.url} target=\"_blank\" rel=\"noopener noreferrer nofollow\" >\n                    Visit Link\n              </Link>\n                <Link href=\"#\" >\n                    Set revision alert\n              </Link>\n            </Container>\n        </div >\n    );\n}\n\nexport default function Archive() {\n    const dispatch = useDispatch();\n    // select the archives\n    let archives = useSelector(selectArchives);\n    let status = useSelector(selectStatus);\n    console.log('reverse');\n    // window.aaa = archives;\n    let reverseArchives = [...archives].reverse();\n    let [page, setPage] = useState(1);\n\n    const classes = useStyles();\n    useEffect(() => {\n        console.log('running archive mounting stuff');\n        //dispatch\n        dispatch(fetchArchivesAsync());\n    }, []);\n\n    function handlePageChange(e, v) {\n        console.log(v);\n        setPage(v);\n    }\n\n    const diskanimation = useSpring({\n        loop: true,\n        to: [\n            { opacity: 1, color: '#ffaaee' },\n            { opacity: 0, color: 'rgb(14,26,19)' },\n        ],\n        from: {\n            opacity: 0, color: 'red',\n        },\n        config: {\n            duration: 3000,\n        }\n\n    })\n\n    return status !== \"loading\" && (\n        <Container maxWidth=\"md\">\n\n            <div style={{ position: \"relative\" }}>\n                {/* <animated.div\n                    style={diskanimation}\n                >\n                    <img src={diskimg} style={{\n                        position: \"absolute\",\n                        right: \"80vw\",\n                        width: \"32px\",\n                        height: \"32px\",\n                        transform: \"rotate(45deg)\",\n\n                    }} />\n                </animated.div> */}\n                <Typography variant=\"h3\" className={classes.archiveTitle} gutterBottom>\n                    ARCHIVES\n            </Typography>\n            </div>\n            {reverseArchives.filter(\n                (x, idx) => idx >= (page - 1) * EACH_PAGE_COUNT\n                    && idx < page * EACH_PAGE_COUNT).map(\n                        (a, idx) => (<SingleArchive idx={idx} key={a.id} {...a} />)\n                    )}\n            <div className={classes.centering}>\n                <Pagination page={page} onChange={handlePageChange} count={Math.ceil(reverseArchives.length / 5)} color=\"secondary\" />\n            </div>\n        </Container>\n    );\n}","import axios from 'axios';\nimport { localURL, productionURL } from '../../constants.js'\nexport function submitURL(url) {\n    let endpoint = '';\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n        endpoint = localURL + '/pagesave';\n        // dev code\n    } else {\n        // production code\n        endpoint = productionURL + '/pagesave';\n    }\n    return new Promise((resolve, reject) => {\n        axios.post(endpoint, {\n            url: url,\n        })\n            .then(function (response) {\n                console.log(response);\n                resolve(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n                reject(error);\n            });\n\n    });\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { submitURL } from './submissionbarAPI.js';\n\nconst initialState = {\n    status: 'idle',\n    snackbarOpen: false,\n    snackbarMsg: '',\n    snackbarType: 'error',\n}\n\nexport const submitURLAsync = createAsyncThunk(\n    'submissionbar/submitURL',\n    async (url) => {\n        console.log(`trying to submit async ${url}`);\n        const response = await submitURL(url);\n        return response.data;\n    }\n)\n\n\nexport const selectSBOpen = (state) => state.submissionbar.snackbarOpen;\nexport const selectSBMsg = (state) => state.submissionbar.snackbarMsg;\nexport const selectSBType = (state) => state.submissionbar.snackbarType;\n\nexport const submissionbarSlice = createSlice({\n    name: 'submissionbar',\n    initialState,\n    reducers: {\n        closeSB: (state) => {\n            state.snackbarOpen = false;\n        },\n        showInvalidURLMsg: (state) => {\n            state.snackbarOpen = true;\n            state.snackbarMsg = 'Url is invalid';\n            state.snackbarType = 'error';\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(submitURLAsync.pending, (state) => {\n                state.status = 'submitting';\n            })\n            .addCase(submitURLAsync.fulfilled, (state, action) => {\n                state.status = 'idle';\n                // state.value += action.payload;\n                state.snackbarOpen = true;\n                // clear the \n                state.snackbarMsg = 'Url submitted';\n                state.snackbarType = 'success';\n            });\n\n    },\n});\n\nexport const { closeSB, showInvalidURLMsg } = submissionbarSlice.actions;\n\nexport default submissionbarSlice.reducer;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './SubmissionBar.module.css';\nimport { showInvalidURLMsg, submitURLAsync } from './submissionbarSlice';\nimport validUrl from 'valid-url';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: theme.spacing(8),\n    },\n    savebutton: {\n        minWidth: \"150px\",\n        alignSelf: \"flex-end\",\n        height: \"56px\",\n        [theme.breakpoints.up('md')]: {\n            flexDirection: \"row\",\n            minwidth: \"0px\",\n            marginLeft: \"32px\",\n        },\n    },\n    input: {\n        width: \"80%\",\n    },\n    root: {\n        margin: \"auto\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        '& > *': {\n            margin: theme.spacing(2),\n        },\n        flexDirection: \"column\",\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: \"row\",\n            maxWidth: \"500px\",\n        },\n    },\n}));\n\n\nexport default function SubmissionBar() {\n    // const [submissiontext, setSubmissionText] = useState('');\n    // we use uncontrolled ref\n    // need media query later for the submission button below if size is too small\n    const dispatch = useDispatch();;\n\n    let textRef = React.createRef();\n    let submitURL = (e) => {\n        e.preventDefault();\n        let url = textRef.current.value;\n        console.log(url);\n        if (validUrl.isUri(url)) {\n            console.log('Looks like an URI');\n            dispatch(submitURLAsync(url));\n            textRef.current.value = '';\n        } else {\n            console.log('Not a URI');\n            dispatch(showInvalidURLMsg());\n        }\n\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.container}>\n            <form className={classes.root} onSubmit={submitURL} noValidate autoComplete=\"off\">\n                <TextField\n                    inputRef={textRef}\n                    className={classes.input}\n                    label=\"Enter url of page to save\"\n                />\n                <Button\n                    className={classes.savebutton}\n                    startIcon={<SaveIcon />}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={submitURL}\n                >Save</Button>\n            </form>\n        </div>\n    )\n}","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCTKDCCVasMozc94FO9WexvvBkvHaXrn-w\",\n    authDomain: \"page-save.firebaseapp.com\",\n    databaseURL: \"https://page-save-default-rtdb.asia-southeast1.firebasedatabase.app\",\n    projectId: \"page-save\",\n    storageBucket: \"page-save.appspot.com\",\n    messagingSenderId: \"191537973535\",\n    appId: \"1:191537973535:web:e9521da8ba973166a8082a\",\n    measurementId: \"G-HX28BXHXWD\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.database();","import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SubmissionBar from '../features/submissionbar/SubmissionBar';\nimport { db } from '../services/firebase';\nimport diskimg from '../resources/disk.svg';\nimport { useSpring, animated } from 'react-spring';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles({\n    title: {\n        fontFamily: \"'Train One', cursive\",\n        // color: \"white\",\n    },\n    heroBackground: {\n        width: \"100%\",\n        margin: 0,\n        textAlign: \"center\",\n        height: \"500px\",\n        paddingTop: \"120px\",\n        boxSizing: \"border-box\",\n        height: \"100vh\",\n        // background: \"gray url(https://www.toptal.com/designers/subtlepatterns/patterns/moroccan-flower-dark.png) repeat 0 0\",\n        // animation: \"slide 20s linear infinite\",\n    },\n    greenIndicator: {\n        background: \"#28B62C\",\n        display: \"inline-block\",\n        width: \"1em\",\n        height: \"1em\",\n        borderRadius: \"50%\",\n        // -webkit-animation: pulse-animation 2s infinite linear;\n        animation: `$pulse 2s infinite linear`,\n    },\n    redIndicator: {\n        background: \"red\",\n        display: \"inline-block\",\n        width: \"1em\",\n        height: \"1em\",\n        borderRadius: \"50%\",\n\n    },\n    \"@keyframes pulse\": {\n        \"0%\": { transform: \"scale(1)\" },\n        \"25%\": { transform: \"scale(1)\" },\n        \"50%\": { transform: \"scale(1.2)\" },\n        \"75%\": { transform: \"scale(1)\" },\n        \"100%\": { transform: \"scale(1)\" },\n    }\n});\n\nexport default function Hero() {\n    const classes = useStyles();\n    // need to dispatch status and selector for status \n    const [status, setStatus] = useState(\"online\");\n\n    const diskanimation = useSpring({\n        loop: true,\n        to: [\n            { opacity: 1, color: '#ffaaee' },\n            { opacity: 0, color: 'rgb(14,26,19)' },\n        ],\n        from: {\n            opacity: 0, color: 'blue',\n        },\n        config: {\n            duration: 3000,\n        }\n\n    })\n\n    useEffect(() => {\n        var ref = db.ref(\"status\");\n        ref.on('value', (snapshot) => {\n            console.log('status: ' + snapshot.val());\n            setStatus(snapshot.val());\n        }, (errorObject) => {\n            console.log('The read failed: ' + errorObject.name);\n        });\n    }, []);\n\n\n    return (\n        <>\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\", margin: \"16px\" }}>\n                {status === \"online\"\n                    ? (<span className={classes.greenIndicator}></span>)\n                    : (<span className={classes.redIndicator}></span>)}\n                <Typography className={classes.title} style={{ marginLeft: \"8px\" }} variant=\"subtitle2\" gutterBottom>\n                    {status}\n                </Typography>\n            </div>\n            <div className={classes.heroBackground}>\n                <div style={{ position: \"relative\" }}>\n                    <animated.div\n                        style={diskanimation}\n                    >\n                        <img src={diskimg} style={{\n                            position: \"absolute\",\n                            right: \"50vw\",\n                            width: \"32px\",\n                            height: \"32px\",\n                            transform: \"rotate(45deg)\",\n\n                        }} />\n                    </animated.div>\n                    <Typography\n                        className={classes.title}\n                        // component=\"span\"\n                        variant=\"h2\"\n                        gutterBottom>\n                        Page Saver\n                    </Typography>\n                </div>\n                <SubmissionBar />\n            </div >\n            <Dialog\n                open={status === \"offline\"}\n                TransitionComponent={Transition}\n                keepMounted\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Server is currently offline\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        The server is currently offline.<br />\n                        Please wait for server to boot...\n                        <div style={{\n                            display: \"flex\",\n                            justifyContent: \"center\"\n                        }}>\n                            <CircularProgress color=\"secondary\" />\n                        </div>\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}","import Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    footercontainer: {\n        minHeight: \"100px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        background: theme.palette.primary.dark,\n        borderTop: \"1px solid black\",\n    },\n    footertext: {\n        margin: \"auto\",\n        textAlign: \"center\",\n        color: theme.palette.primary.contrastText,\n    },\n    footerMarginTop: {\n        marginTop: theme.spacing(4),\n    }\n}));\nexport default function () {\n    const classes = useStyles();\n    return (\n        <footer className={classes.footerMarginTop}>\n            <div className={classes.footercontainer}>\n                <Typography className={classes.footertext} variant=\"subtitle\" >\n                    mightbehuman@protonmail.com\n            </Typography>\n            </div>\n        </footer >\n    );\n}","\nimport { createSlice } from '@reduxjs/toolkit';\nimport { fetchArchivesAsync } from '../archive/archiveSlice';\nimport { useDispatch } from 'react-redux';\n\nconst initialState = {\n    urlsInProgress: {\n    },\n    showProgressDialog: true,\n    // need to monitor downloading,completed\n    // removing completed and refresh page?, need use some animation\n    // research on the animation in react\n    // basicallly just need to detect 2 things\n    // 1) adding of new url\n    // 2) deleting of url(aka completion) and play the animation as required\n}\n\nexport const progressdialogSlice = createSlice({\n    name: 'progressdialog',\n    initialState,\n    reducers: {\n        closeDialog: (state, action) => {\n            state.showProgressDialog = false;\n        },\n        updateUrls: (state, action) => {\n            // action.payload = action.payload || {};\n\n            console.log('received update url actions');\n            console.log(action.payload);\n            // compare state with action payloadd for old and new\n            // i have to keep track/statee of the progress too\n            // dispatch new action for certain?\n            let newState = { ...state }; //copy old state, is this immutable, or shallow copy only?\n            newState.showProgressDialog = true;\n            for (const [id, link] of Object.entries(action.payload || {})) {\n                console.log(\"Checking from action payload: \" + link);\n                if (typeof state.urlsInProgress[id] === 'undefined') {// use property define or something?\n                    // new\n                    //dispatch added action?\n                    //need to play some animation?\n                    console.log('added new:' + link);\n                    newState.urlsInProgress = {\n                        ...newState.urlsInProgress,\n                        [id]: {\n                            link: link,\n                            status: \"downloading\",\n                        }\n                    }\n                }\n            }\n            //chaining it like this is a problem since the action performed above affects the bottom too\n            for (const [id, { status, link }] of Object.entries(state.urlsInProgress)) {\n                console.log(\"Checking from state: \" + status + \" \" + link);\n                if (!action.payload || typeof action.payload[id] === 'undefined') {\n                    // completed items \n                    console.log('completed:' + link);\n                    newState.urlsInProgress = {\n                        ...newState.urlsInProgress,\n                        [id]: {\n                            ...newState.urlsInProgress[id],\n                            status: \"completed\",\n                        },\n                        // Object.prototype.hasOwnProperty.call\n                    }\n                }\n            }\n            return newState;\n        }\n    }\n})\nexport const { updateUrls, closeDialog } = progressdialogSlice.actions;\nexport const selectURLInProgress = (state) => state.progressdialog.urlsInProgress;\nexport const selectProgressDialogIsShowing = (state) => state.progressdialog.showProgressDialog;\nexport default progressdialogSlice.reducer;","export function ellipsis(str, limit) {\n    if (str.length < limit) return str;\n    else return str.substr(0, limit) + \"…\";\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { db } from '../../services/firebase.js';\nimport { selectURLInProgress, selectProgressDialogIsShowing, updateUrls, closeDialog } from './progressdialogSlice';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport { Typography } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { shadows } from '@material-ui/system';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ellipsis } from '../../helper/util';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Hidden from '@material-ui/core/Hidden';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Checkmark } from 'react-checkmark';\nimport { useTheme } from '@material-ui/core/styles';\nimport { borders } from '@material-ui/system';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useSpring, animated } from 'react-spring';\nimport Slide from '@material-ui/core/Slide';\n\nconst ELLIPSIS_LIMIT = 30;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: \"90vw\",\n        position: \"fixed\",\n        bottom: \"0px\",\n        right: \"0px\",\n        margin: \"16px\",\n        paddingBottom: '0px',\n        // background: \"pink\",\n        // borderRadius: \"50px\",\n    },\n    header: {\n        display: \"flex\",\n        background: \"white\",\n        borderRadius: \"10px 10px 0px 0px\",\n        alignItems: \"center\",\n        // border: \"2px solid red\",\n    },\n    headericon: {\n\n    },\n    acsummary: {\n        padding: \"0px\",\n    },\n    acsummarycontent: {\n        padding: \"0px\",\n        margin: \"0px\",\n        '&$expanded': {\n            margin: \"0px\",\n            padding: \"0px\",\n        },\n    },\n    lastchild: {\n        '&:last-child': {\n            paddingBottom: '8px',\n        },\n    },\n    checkmark: {\n        // display: \"flex\",\n        // justifyContent: \"flex-end\",\n        marginLeft: \"auto\",\n    },\n    urlcontainer: {\n        display: \"flex\",\n        padding: theme.spacing(1) + \"px \" + theme.spacing(1) + \"px\",\n        width: 'inherit',\n\n        alignItems: \"center\",\n    },\n    urlcontainercompleted: {\n        display: \"flex\",\n        padding: theme.spacing(1) + \"px \" + theme.spacing(3) + \"px\",\n        color: theme.palette.primary.dark,\n        // background: theme.palette.primary.light,\n        alignItems: \"center\",\n\n    },\n    overrideaccordionshadowandmargin: {\n        boxShadow: \"none\",\n        border: \"none\",\n        margin: '0',\n        '&$expanded': {\n            margin: \"0\",\n        },\n    },\n    expanded: {\n        // this is required to be blank\n    },\n    urls: {\n        marginLeft: theme.spacing(2),\n        wordBreak: \"break-word\",\n        whiteSpace: \"normal\",\n        textOverflow: \"ellipsis\",\n\n    },\n    processingQueue: {\n        [theme.breakpoints.down('sm')]: {\n            fontSize: theme.typography.body1.fontSize,\n        },\n    }\n\n}));\nexport default function ProgressDialog(props) {\n    const existingURLs = useSelector(selectURLInProgress);\n    const isProgressDialogVisible = useSelector(selectProgressDialogIsShowing);\n\n    const dispatch = useDispatch();\n\n    const classes = useStyles();\n    const { anchorEl } = props;\n    useEffect(() => {\n        // Initialize Firebase\n        var queueRef = db.ref('queue/');\n        queueRef.on('value', (snapshot) => {\n            const data = snapshot.val();\n            console.log(\"queue changes\");\n            console.log(data);\n\n            // updateStarCount(postElement, data);\n            // dispatch(updateUrls(data));\n            dispatch({\n                type: 'QUEUE_CHANGE',\n                payload: data,\n            });\n        });\n\n    }, []);\n\n    const [expanded, setExpanded] = React.useState(false);\n\n    const theme = useTheme();\n\n    const handleChange = () => {\n        setExpanded(!expanded);\n    };\n    console.log('existingurls');\n    window.exu = existingURLs;\n    console.log(existingURLs);\n\n    const loopingStyle = useSpring({\n        loop: true,\n        from: { rotateZ: 0 },\n        to: { rotateZ: 360 },\n    })\n    return (\n        <Slide direction=\"up\" in={Object.values(existingURLs).length > 0 && isProgressDialogVisible} mountOnEnter unmountOnExit>\n            <Box\n                borderRadius=\"20px\"\n                boxShadow={3}\n                // width=\"300px\"\n                // height=\"300px\"\n                m={0}\n                style={{ paddingRight: \"8px\", paddingLeft: \"8px\", paddingTop: \"8px\", paddingBottom: \"8px\", }}\n                // m and p values are important\n                bgcolor=\"background.paper\" className={classes.root}>\n                <Accordion\n                    expanded={!expanded}\n                    onChange={handleChange}\n                    classes={{\n                        root: classes.overrideaccordionshadowandmargin,\n                        expanded: classes.expanded,\n                    }}\n                >\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                        p={0}\n                        m={0}\n                        style={{\n                            paddingRight: \"40px\",\n                            // borderBottom: \"solid rgba(0, 0, 0, 0.27) 1px\",\n                            // boxShadow: \"rgb(0 0 0 / 20%) 0px 3px 1px -2px, rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px\",\n                        }}\n                        classes={{\n                            root: classes.acsummary,\n                            content: classes.acsummarycontent,\n                            expanded: classes.expanded,\n                        }}\n                    >\n                        <div className={classes.header}>\n                            <animated.div style={loopingStyle}>\n                                <AutorenewIcon style={{ margin: \"8px\" }} color=\"primary\" fontSize=\"large\" />\n                            </animated.div>\n                            <div>\n                                <Typography variant=\"h6\" gutterBottom={false} className={classes.processingQueue}>\n                                    Processing\n                            </Typography>\n                                {!expanded && (\n                                    <Typography variant=\"caption\">\n                                        {Object.values(existingURLs).filter(a => a.status === 'downloading').length} page saving in progress...\n                                    </Typography>\n                                )}\n                            </div>\n                        </div>\n                        <IconButton\n                            style={{ position: \"absolute\", right: \"0px\", top: \"8px\" }}\n                            aria-label=\"close\"\n                            onClick={() => dispatch(closeDialog())}\n                        // color=\"primary\"\n                        >\n                            <CloseIcon fontSize=\"small\"></CloseIcon>\n                        </IconButton>\n                    </AccordionSummary>\n                    <AccordionDetails style={{ margin: 0, padding: 0 }}>\n                        <div className={classes.body}>\n                            {Object.entries(existingURLs).map(([id, url]) => {\n                                if (url.status === 'downloading') {\n                                    return (\n                                        <div key={id} className={classes.lastchild}>\n                                            <div className={classes.urlcontainer}>\n                                                <DescriptionOutlinedIcon fontSize=\"small\" color=\"disabled\" />\n                                                <Typography variant=\"body2\" className={classes.urls}>\n                                                    Saving {ellipsis(url.link, ELLIPSIS_LIMIT)}\n                                                </Typography>\n                                            </div>\n                                            <Container>\n                                                <LinearProgress color=\"primary\" />\n                                            </Container>\n\n                                        </div>);\n\n                                } else {\n                                    return (\n                                        <div key={id} className={classes.urlcontainercompleted}>\n                                            <DescriptionRoundedIcon fontSize=\"small\" />\n                                            <Typography className={classes.urls} >\n                                                {ellipsis(url.link, ELLIPSIS_LIMIT)}\n                                                {/* {url.link} */}\n                                            </Typography>\n                                            <div className={classes.checkmark}>\n                                                <Checkmark size='medium' color={theme.palette.primary.main} />\n                                            </div>\n                                        </div>);\n                                };\n                            })\n                            }\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </Box >\n        </Slide>\n    )\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './App.css';\nimport Archive from './features/archive/Archive';\nimport Hero from './component/Hero.js';\nimport Footer from './component/Footer.js';\nimport ProgressDialog from './features/progressdialog/ProgressDialog.js';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { selectSBOpen, closeSB, selectSBMsg, selectSBType } from './features/submissionbar/submissionbarSlice';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\nfunction App() {\n  const isSBOpen = useSelector(selectSBOpen);\n  const SBMsg = useSelector(selectSBMsg);\n  const SBMsgType = useSelector(selectSBType);\n  const dispatch = useDispatch();\n\n  const handleClose = (event, reason) => {\n\n    if (reason === 'clickaway') {\n      return;\n    }\n    console.log('trying to close');\n    // setOpen(false);\n    // console.log('type of dispatch: ' + typeof dispatch);\n    // console.log('type of closeSB: ' + typeof closeSB);\n    // console.log('closeSB: ' + closeSB);\n    dispatch(closeSB());\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <Hero />\n      <Archive />\n      <Snackbar open={isSBOpen} autoHideDuration={1200} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={SBMsgType}>\n          {SBMsg}\n        </Alert>\n      </Snackbar>\n      <ProgressDialog />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { put, takeEvery, takeLatest, all, select, take } from 'redux-saga/effects';\nimport { updateUrls } from './features/progressdialog/progressdialogSlice';\nimport { fetchArchivesAsync } from './features/archive/archiveSlice';\n\nfunction* queueChangesAsync(action) {\n    let state = yield select();\n    console.log('queue changes async curState');\n    console.log(state);\n    console.log('action:');\n    console.log(action);\n    yield put(updateUrls(action.payload));\n    yield put(fetchArchivesAsync());\n}\nfunction* watchQueueChangesAsync() {\n    yield takeLatest('QUEUE_CHANGE', queueChangesAsync);\n}\nexport default function* rootSaga() {\n    yield all([\n        watchQueueChangesAsync(),\n    ]);\n}","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport submissionBarReducer from '../features/submissionbar/submissionbarSlice';\nimport archiveReducer from '../features/archive/archiveSlice';\nimport progressdialogReducer from '../features/progressdialog/progressdialogSlice';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    submissionbar: submissionBarReducer,\n    archive: archiveReducer,\n    progressdialog: progressdialogReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    [...getDefaultMiddleware(), sagaMiddleware],\n\n\n});\n\nsagaMiddleware.run(rootSaga)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}