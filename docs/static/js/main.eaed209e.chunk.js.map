{"version":3,"sources":["resources/Group 2.svg","component/oldLogin.jsx","constants.js","helper/util.js","features/login/LoginAPI.js","features/signup/SignupAPI.js","features/signup/SignupSlice.js","features/login/LoginSlice.js","features/navbar/NavBar.jsx","resources/Open Doodles.svg","resources/Group 5.svg","resources/Vector.svg","resources/camera_alt.svg","component/HomePage.jsx","component/Footer.js","resources/undraw_quick_chat_re_bit5 1.svg","features/signup/Signup.jsx","resources/iconoir_emoji-sad.svg","features/login/Login.jsx","resources/Whoops.svg","component/NoMatch.jsx","services/firebase.js","features/progressdialog/progressdialogSlice.js","features/progressdialog/ProgressDialog.js","resources/Mail-rafiki 1.svg","component/VerifyEmail.js","features/archive/archiveAPI.js","features/archive/archiveSlice.js","resources/undraw_empty_street_sfxm 1.svg","features/submissionbar/submissionbarAPI.js","features/submissionbar/submissionbarSlice.js","features/archive/Archive.js","features/submissionbar/SubmissionBar.js","features/dashboard/Dashboard.jsx","App.js","sagas.js","app/store.js","index.js"],"names":["makeStyles","theme","changeLoginDialogAlign","justifyContent","alignItems","borderRadius","inputInternalFieldSetHover","borderColor","fieldsetBorder","border","roundedBorder","forgetpasswordbtn","color","marginTop","fontSize","typography","subtitle1","white","yup","email","required","password","min","Login","productionURL","ellipsis","str","limit","length","substr","sleep","time","a","Promise","resolve","reject","setTimeout","getBaseEndPoint","login","pw","console","log","axios","post","withCredentials","result","status","success","response","err","logout","submitSignup","signupAsync","createAsyncThunk","rejectWithValue","resp","signupSlice","createSlice","name","initialState","signupstatus","serverDown","reducers","resetExistingAlert","state","action","resetServerDownAlert","extraReducers","pending","rejected","payload","fulfilled","selectSignupStatus","signup","actions","loginAsync","logoutAsync","loginSlice","isShown","isLoggedIn","username","screen","justLoggedIn","show","hide","relogin","forgetpw","resetJustLoggedIn","loadUserFromCookie","builder","addCase","Cookies","set","remove","selectLoginScreen","selectIsLoginShown","selectIsLoggedIn","selectUsername","selectJustLoggedIn","useStyles","header","paddingLeft","paddingRight","background","zIndex","top","display","paddingTop","width","breakpoints","up","logo","height","makeItSquare","alignSelf","withWidth","isLoggedOn","userEmail","handleClickOpen","classes","useTheme","window","aa","location","useLocation","isAtSignUpPage","pathname","dispatch","useDispatch","React","useState","anchorEl","setAnchorEl","handleClose","useEffect","get","handleLogout","event","className","style","src","to","marginLeft","Hidden","xsDown","Typography","variant","Button","onClick","smUp","IconButton","aria-label","currentTarget","size","root","Menu","id","open","onClose","MenuItem","home","flexDirection","containerFirstPage","gridTemplateColumns","firstPage","gridColumn","maxWidth","padding","bodytext","readableWidth","readableWidthSmall","secondPageTitle","textTransform","position","content","borderTop","featureIcon","featureContainer","featureTitle","featureTitleContainer","margin","featureBigContainer","paddingBottom","gap","justifyItems","marginRight","HomePage","flexGrow","flexShrink","flexBasis","cn","flex","doodle","minHeight","icon1","align","icon2","icon3","footercontainer","bottom","footertext","textAlign","palette","primary","contrastText","rightTextWrapper","Footer","Alert","props","elevation","page","entry","entrywrapper","inputBox","signuppicWrapper","signuppic","btn","validationSchema","confirmpassword","oneOf","Signup","openAlreadySignup","useSelector","signupPending","signupError","signupDone","formik","useFormik","initialValues","onSubmit","values","e","preventDefault","handleSubmit","TextField","fullWidth","label","value","disabled","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Snackbar","autoHideDuration","severity","logoutwrapper","forgetPWValidationSchema","Transition","forwardRef","ref","Slide","direction","selectedValue","loginScreen","isJustLoggedIn","forgetPWFormik","alert","JSON","stringify","Dialog","TransitionComponent","aria-labelledby","scrollPaper","FormHelperTextProps","InputLabelProps","InputProps","startAdornment","InputAdornment","notchedOutline","tophalf","bottomhalf","left","pointerEvents","Box","boxShadow","bgcolor","m","p","inputProps","animationData","loadingAnimation","sadface","NoMatch","Cactus","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","messaging","progressdialogSlice","urlsInProgress","showProgressDialog","closeDialog","updateUrls","newState","Object","entries","link","selectURLInProgress","progressdialog","selectProgressDialogIsShowing","right","headericon","acsummary","acsummarycontent","lastchild","checkmark","urlcontainer","spacing","urlcontainercompleted","dark","overrideaccordionshadowandmargin","expanded","urls","wordBreak","whiteSpace","textOverflow","processingQueue","down","body1","transform","downloadProgressIcon","animation","ProgressDialog","existingURLs","isProgressDialogVisible","setExpanded","exu","in","mountOnEnter","unmountOnExit","Accordion","AccordionSummary","expandIcon","aria-controls","gutterBottom","filter","AccordionDetails","body","map","url","Container","LinearProgress","main","VerifyEmail","verifyimg","fetchArchives","data","turnOnAlert","turnOffAlert","registerMessageToken","token","registerMessageTokenAsync","fetchArchivesAsync","fetchArchivesAPI","turnOnAlertAsync","meta","requestId","setPending","turnOffAlertAsync","archiveSlice","archives","alertsetat","newAlertString","Date","Number","toString","rest","newArchives","item","idx","alerton","nextalertdate","selectArchives","archive","selectStatus","selectPendingAlertId","submitURL","submitURLAsync","selectSBOpen","submissionbar","snackbarOpen","selectSBMsg","snackbarMsg","selectSBType","snackbarType","submissionbarSlice","closeSB","showInvalidURLMsg","showCustomMsg","centering","archivecontainer","firstArchive","gridcontainer","backgroundColor","paper","imgofpage","overflowY","maxHeight","verticalAlign","objectFit","objectPosition","archiveTitle","fillheight","imgwrapper","SingleArchive","isAlertOn","isAlertPending","hasOwnProperty","labelText","d","date","Intl","DateTimeFormat","dateStyle","timeStyle","format","getFriendlyTime","registration","Notification","requestPermission","then","getToken","serviceWorkerRegistration","vapidKey","currentToken","catch","Link","href","target","rel","title","Paper","img0B","alt","img0","img1B","img1","img2B","img2","FormControlLabel","control","Switch","checked","labelPlacement","Archive","reverseArchives","setPage","replace","replaceFirebaseInvalidCharInKey","on","snapshot","val","x","emptyimg","Pagination","v","count","Math","ceil","container","borderRadiusOverwrite","savebutton","input","SubmissionBar","textRef","createRef","current","validUrl","isUri","noValidate","autoComplete","inputRef","dashboardPadding","topSection","Dashboard","handleClick","info","isSBOpen","SBMsg","SBMsgType","reason","Breadcrumbs","PrivateRoute","children","render","from","App","isLoginShown","createMuiTheme","fontFamily","h1","lineHeight","fontWeight","h2","h3","h4","h5","caption","ThemeProvider","CssBaseline","path","exact","queueChangesAsync","watchQueueChangesAsync","rootSaga","select","put","takeLatest","all","sagaMiddleware","createSagaMiddleware","combinedReducer","combineReducers","submissionBarReducer","archiveReducer","progressdialogReducer","loginReducer","signupReducer","store","configureStore","reducer","undefined","middleware","getDefaultMiddleware","run","navigator","serviceWorker","register","scope","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eaed209e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Group 2.d01def24.svg\";","import React from 'react';\nimport { Slide } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport { Typography } from '@material-ui/core';\nimport { Dialog } from '@material-ui/core';\nimport * as yup from 'yup';\nimport TextField from '@material-ui/core/TextField';\nimport { InputAdornment } from '@material-ui/core';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { Button } from '@material-ui/core';\nimport { Box } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { IconButton } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    changeLoginDialogAlign: {\n        justifyContent: ' flex-end',\n        alignItems: 'flex-start',\n        // borderRadius: '40px',\n        '& .MuiPaper-rounded': {\n            borderRadius: '20px',\n        },\n    },\n    inputInternalFieldSetHover: {\n        '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'white',\n\n        },\n        '&.MuiOutlinedInput-notchedOutline': {\n            borderColor: 'white',\n\n        },\n        '&.Mui-error .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'orange',\n        }\n    },\n    fieldsetBorder: {\n        border: 'solid 1px white',\n    },\n    roundedBorder: {\n        borderRadius: '50px',\n\n    },\n    forgetpasswordbtn: {\n        color: '#fff',\n        marginTop: '16px',\n        fontSize: theme.typography.subtitle1.fontSize,\n    },\n    white: {\n        color: '#fff',\n    }\n\n}));\nconst validationSchema = yup.object({\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .required('Password is required'),\n});\nconst forgetPWValidationSchema = yup.object({\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n});\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nfunction Login(props) {\n    const classes = useStyles();\n    const { onClose, selectedValue, open } = props;\n\n    const handleClose = () => {\n        onClose(selectedValue);\n    };\n\n    const handleListItemClick = (value) => {\n        onClose(value);\n    };\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n\n    const forgetPWFormik = useFormik({\n        initialValues: {\n            email: 'foobar@example.com',\n        },\n        validationSchema: forgetPWValidationSchema,\n        onSubmit: (values) => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n\n    let isAtLogin = false;\n    return (\n        <Dialog\n            TransitionComponent={Transition}\n            onClose={handleClose}\n            aria-labelledby=\"simple-dialog-title\"\n            classes={{\n                scrollPaper: classes.changeLoginDialogAlign,\n                root: classes.roundedBorder\n            }}\n            // open={open}\n            open={true}\n        >\n            {/* start of login first screen */}\n            {isAtLogin &&\n                < div\n                    style={{\n                        background: \"#4B6A5E\",\n                        display: \"flex\",\n                        flexDirection: 'column',\n                        padding: '48px 24px',\n                    }}\n                >\n                    <Typography variant='h4' align='center' style={{ color: '#fff' }}>Welcome</Typography>\n                    <Typography variant='h4' align='center' style={{ color: '#fff' }} >to</Typography>\n                    <Typography variant='h4' align='center' style={{ color: '#fff' }} >Pagesaver</Typography>\n\n                    <form onSubmit={formik.handleSubmit} style={{ display: 'flex', marginTop: '24px', flexDirection: 'column', }}>\n                        <TextField\n                            // fullWidth\n                            id=\"email\"\n                            name=\"email\"\n                            label=\"Email\"\n                            value={formik.values.email}\n                            onChange={formik.handleChange}\n                            error={formik.touched.email && Boolean(formik.errors.email)}\n                            helperText={formik.touched.email && formik.errors.email}\n                            variant='outlined'\n                            FormHelperTextProps={{\n                                style: { color: 'orange', }\n                            }}\n                            InputLabelProps={{\n                                style: { color: '#fff', }\n                            }}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <MailOutlineIcon />\n                                    </InputAdornment>\n                                ),\n                                style: {\n                                    color: '#fff',\n                                },\n                                classes: {\n                                    root: classes.inputInternalFieldSetHover,\n                                    notchedOutline: classes.fieldsetBorder,\n                                }\n                            }}\n                        />\n                        <TextField\n                            // fullWidth\n                            id=\"password\"\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n                            // color='#ffffff'\n                            style={{ marginTop: \"16px\" }}\n                            variant='outlined'\n                            InputLabelProps={{\n                                style: { color: '#fff', }\n                            }}\n                            FormHelperTextProps={{\n                                style: { color: 'orange', }\n                            }}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <VpnKeyIcon />\n                                    </InputAdornment>\n                                ),\n                                style: {\n                                    color: '#fff',\n                                },\n                                classes: {\n                                    root: classes.inputInternalFieldSetHover,\n                                    notchedOutline: classes.fieldsetBorder\n                                }\n                            }}\n                        />\n\n                        <Button type=\"submit\" variant='outlined' style={{ marginTop: \"24px\", color: '#fff', borderRadius: '60px', border: '1px solid #fff' }} >Sign in</Button>\n                    </form>\n\n                    <Button\n                        className={classes.forgetpasswordbtn}\n                    >Forget password</Button>\n                </div>\n            }\n            {/* end of login first screen */}\n            <div style={{ position: 'relative' }}>\n                <div\n                    style={{\n                        padding: '24px',\n                        background: '#4B6A5E',\n                        paddingBottom: '128px',\n                        maxWidth: '350px',\n                    }}\n                    className={classes.tophalf}\n                >\n                    <IconButton\n                        color=\"secondary\"\n                        aria-label=\"back to login\"\n                        classes={{\n                            root: classes.white,\n                        }}\n                    >\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <Typography\n                        align='center'\n                        variant='h4'\n                        style={{\n                            color: '#fff'\n                        }}\n                    >Forget Your Password?</Typography>\n                    <Typography\n                        align='center'\n                        variant='h5'\n                        style={{\n                            color: '#fff'\n                        }}\n                    >Enter your email to reset your password</Typography>\n                </div>\n                <div\n                    style={{\n                        padding: '24px',\n                        background: '#fff',\n                        paddingTop: '128px',\n                        paddingBottom: '24px',\n\n                    }}\n                    className={classes.bottomhalf}\n                >\n                    <Typography\n                        align='center'\n                    >Didn’t receive a mail?</Typography>\n                    <Typography\n                        align='center'\n                    >Resend email</Typography>\n                </div>\n                <div\n                    style={{\n                        width: '100%',\n                        height: '100%',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        position: 'absolute',\n                        top: '0px',\n                        left: '0px',\n                        pointerEvents: 'none',\n                    }}\n\n                >\n                    <Box\n                        boxShadow={3}\n                        bgcolor=\"background.paper\"\n                        m={1}\n                        p={3}\n                        style={{\n                            width: '80%',\n                            borderRadius: '20px',\n                        }}>\n                        <form onSubmit={forgetPWFormik.handleSubmit}>\n                            <TextField\n                                fullWidth\n                                id=\"email\"\n                                name=\"email\"\n                                label=\"Email\"\n                                value={forgetPWFormik.values.email}\n                                onChange={forgetPWFormik.handleChange}\n                                inputProps={{\n                                    style: {\n                                        pointerEvents: 'initial',\n                                    }\n                                }}\n                                error={forgetPWFormik.touched.email && Boolean(forgetPWFormik.errors.email)}\n                                helperText={forgetPWFormik.touched.email && forgetPWFormik.errors.email}\n                            />\n                            <Button\n                                color=\"primary\"\n                                variant=\"contained\"\n                                style={{ marginTop: '16px', pointerEvents: 'initial', }}\n                                fullWidth\n                                type=\"submit\">\n                                reset\n                            </Button>\n                        </form>\n                    </Box>\n                </div>\n            </div >\n        </Dialog >\n    );\n}\nexport default Login;","export const productionURL = \"https://pagesave.herokuapp.com\";\nexport const localURL = 'http://localhost:5000';","import { localURL, productionURL } from '../constants.js'\nexport function ellipsis(str, limit) {\n    if (str.length < limit) return str;\n    else return str.substr(0, limit) + \"…\";\n}\n\nexport async function sleep(time) {\n    return new Promise((resolve, reject) => {\n        setTimeout(resolve, time);\n    });\n}\n\nexport function getPageSaveBaseEndPoint() {\n    let endpoint = '';\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n        endpoint = localURL + '/pagesave';\n        // dev code\n    } else {\n        // production code\n        endpoint = productionURL + '/pagesave';\n    }\n    return endpoint;\n}\nexport function getFriendlyTime(d) {\n    console.log('before get friendlyTime' + d);\n    if (!d) return 'undefined date';\n    const date = new Date(d);\n    // const month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    // return `${date.getDate()} ${month[date.getMonth()]}, ${date.getHours()}:${date.getMinutes()} `;\n    let result = (new Intl.DateTimeFormat('en-US', { dateStyle: 'medium', timeStyle: 'short' }).format(date));\n    console.log('after get friendlyTime' + result);\n    //     before get friendlyTimenull util.js:25\n    // after get friendlyTimeDec 31, 1969, 4:00 PM\n    // this shows if its null it will return that odd date\n    return result;\n}\nexport function getBaseEndPoint() {\n    let endpoint = '';\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n        endpoint = localURL;\n        // dev code\n    } else {\n        // production code\n        endpoint = productionURL;\n    }\n    return endpoint;\n}\nexport function replaceFirebaseInvalidCharInKey(email) {\n    // https://stackoverflow.com/questions/31904123/good-way-to-replace-invalid-characters-in-firebase-keys\n    return email.replace(/\\./g, ','); // replaces all dots\n}","import axios from 'axios';\nimport { getBaseEndPoint } from '../../helper/util';\nexport async function login(email, pw) {\n    console.log('axios submitting:' + email + ' ,' + pw);\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/users/login',\n            {\n                email: email,\n                pw: pw,\n            },\n            {\n                withCredentials: true,\n            }\n        );\n        console.log('logging in axios');\n        console.log(result.status);\n        return {\n            success: true,\n            email: email,\n        };\n    } catch (e) {\n        console.log('some stuff detected');\n\n        console.log(e.response.status);\n        if (e.response.status == 403) {\n            console.log('incorrect credentials');\n            return {\n                success: false,\n                err: 'incorrect credentials',\n\n            };\n        } else { // other code means error\n            console.log('login faileddue to some other');\n            return {\n                success: false,\n                err: 'Try again later',\n\n            };\n        }\n    }\n}\n\nexport async function logout(email, pw) {\n    console.log('axios logout submitting:' + email + ' ,' + pw);\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/users/logout',\n            {\n                // email: email, // dont need to submit anything i think\n                // pw: pw,\n            }, { withCredentials: true });\n        console.log('logging out axios');\n        console.log(result.status);\n        return {\n            success: true,\n        };\n    } catch (e) {\n        console.log('some stuff detected');\n\n        console.log(e.response.status);\n        if (e.response.status == 403) {\n            console.log('incorrect credentials');\n            return {\n                success: false,\n                err: 'incorrect credentials',\n\n            };\n        } else { // other code means error\n            console.log('logout failed due to some other');\n            return {\n                success: false,\n                err: 'Try again later',\n\n            };\n        }\n    }\n\n\n}","import axios from 'axios';\nimport { getBaseEndPoint } from '../../helper/util';\nexport async function submitSignup(email, pw) {\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/users/signup',\n            {\n                email: email,\n                pw: pw,\n            }, { withCredentials: true });\n        console.log('normal');\n        console.log(result.status);\n        // get the new user cookie\n        // // console.log('success cookie');\n        // // console.log(JSON.stringify(result.headers));\n        // // console.log('docum');\n        // console.log(JSON.stringify(document.cookie));\n        //cookie already auto set\n        return {\n            success: true,\n            email: email,\n        };\n    } catch (e) {\n        console.log('some stuff detected');\n\n        console.log(e.response.status);\n        if (e.response.status == 409) {\n            console.log('user already exist');\n            return {\n                success: false,\n                err: 'user already exist',\n\n            };\n        } else { // other code means error\n            console.log('some server error, try again alter');\n            return {\n                success: false,\n                err: 'Try again later',\n\n            };\n        }\n        // if it is 409 means user exist\n        //otherwise try again later\n    }\n\n\n}","import { createAsyncThunk, createSlice, current } from '@reduxjs/toolkit';\nimport { submitSignup } from './SignupAPI';\n\nconst initialState = {\n    signupstatus: 'idle',\n    serverDown: false,\n};\n\nexport const signupAsync = createAsyncThunk(\n    'signup/signup',\n    async ({ email, pw }, { rejectWithValue }) => {\n        // async ({ email, pw }, thunkAPI) => {\n        const resp = await submitSignup(email, pw);\n        console.log('check here');\n        console.log(resp);\n        if (!resp.success) {\n            console.log('rejecting');\n            return rejectWithValue(resp.err);\n        }\n\n        console.log('success somehow');\n        return resp;\n\n    }\n);\n\n\nexport const signupSlice = createSlice({\n    name: 'signup',\n    initialState,\n    reducers: {\n        // console.log(current(state));\n        // https://redux-toolkit.js.org/api/createReducer#logging-draft-state-values\n        resetExistingAlert: (state, action) => {\n            state.signupstatus = 'idle'\n        },\n        resetServerDownAlert: (state, action) => {\n            state.serverDown = false;\n        },\n\n    },\n    extraReducers: {\n        [signupAsync.pending]: (state, action) => {\n            state.signupstatus = 'pending';\n        },\n        [signupAsync.rejected]: (state, action) => {\n            if (action.payload === 'user already exist')\n                state.signupstatus = 'existing';\n            else\n                state.signupstatus = 'error';\n        },\n        [signupAsync.fulfilled]: (state, action) => {\n            state.signupstatus = 'done';\n            // i think i need the other place to listen to this action so that it would redirect to home screen\n        }\n    }\n\n});\n\nexport const selectSignupStatus = (state) => (state.signup.signupstatus);\nexport const { resetExistingAlert, resetServerDownAlert } = signupSlice.actions;\nexport default signupSlice.reducer;","\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { login, logout } from './LoginAPI';\nimport { signupAsync } from '../signup/SignupSlice';\nimport { sleep } from '../../helper/util';\nimport Cookies from 'js-cookie';\n\n\nconst initialState = {\n    isShown: false,\n    isLoggedIn: false,\n    username: '',\n    screen: 'home',\n    justLoggedIn: false,\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const loginAsync = createAsyncThunk(\n    'login/login',\n    async ({ email, pw }, { rejectWithValue }) => {\n        await sleep(500); // add for animatin purposes\n        const resp = await login(email, pw);\n        // The value we return becomes the `fulfilled` action payload\n        console.log(resp);\n        if (!resp.success) {\n            console.log('reject');\n            return rejectWithValue(resp.err);\n        }\n\n        console.log('success logging');\n        return resp;\n    }\n);\n\n\nexport const logoutAsync = createAsyncThunk(\n    'login/logout',\n    async (email, pw) => {\n        await sleep(500); // add for animation purposes\n        const response = await logout(email, pw);\n        // The value we return becomes the `fulfilled` action payload\n        return response;\n    }\n);\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\n//   const currentValue = selectCount(getState());\n// dispatch(incrementByAmount(amount));\n// };\n\nexport const loginSlice = createSlice({\n    name: 'login',\n    initialState,\n    reducers: {\n        show: (state, action) => {\n            state.isShown = true;\n        },\n        hide: (state, action) => {\n            state.isShown = false;\n        },\n        // logout: (state) => {\n        //     state.isLoggedIn = false;\n        //     state.screen = 'home';\n        //     // maybe need to change this to be async since we need to remove cookies\n        //     //add the same animation as logging in\n        // },\n        relogin: (state, action) => {\n            state.screen = 'home';\n        },\n        forgetpw: (state) => {\n            state.screen = 'forget';\n        },\n        resetJustLoggedIn: (state, action) => {\n            state.justLoggedIn = false;\n        },\n        loadUserFromCookie: (state, action) => {\n            let email = action.payload.email;\n            if (typeof email !== 'undefined') {\n                state.isLoggedIn = true;\n                state.username = email;\n            }\n\n        },\n    },\n    // The `extraReducers` field lets the slice handle actions defined elsewhere,\n    // including actions generated by createAsyncThunk or in other slices.\n    extraReducers: (builder) => {\n        builder\n            .addCase(loginAsync.pending, (state, action) => {\n                state.screen = 'logging in';\n            })\n            .addCase(loginAsync.fulfilled, (state, action) => {\n                state.screen = 'home';\n                let payload = action.payload;\n                state.isLoggedIn += payload.success;\n                state.username = payload.email;\n                // record in cookie\n                Cookies.set('email', action.payload.email);\n                // think maybe need dispatch another action thats why i need redux saga?\n                //dispatch another action to close the login bar\n                state.isShown = false;\n                //TODO: maybe save credential into cookie or something so that it can be easily filled?\n                //redirect to dashboard?\n                state.justLoggedIn = true;\n\n            })\n            .addCase(loginAsync.rejected, (state, action) => {\n                state.screen = 'invalid'; //\n                let payload = action.payload;\n                console.log('login fail due to');\n                console.log(action.payload);\n                if (action.payload && (action.payload.err === 'incorrect credentials')) {\n\n                } else {\n                    // server error\n                    //TODO:\n                }\n\n            })\n            .addCase(logoutAsync.pending, (state, action) => {\n                state.screen = 'logging out';\n            })\n            .addCase(logoutAsync.fulfilled, (state, action) => {\n                state.screen = 'home';\n                state.isLoggedIn = false;\n                state.username = '';\n                //TODO: redirect to home page? but rendering a Redirect component seems weird\n                // i think have to reset the state too\n                // figure out maybe move the redirect to top level or something\n                //TODO: i think may have to manually clear the session cookie since the destroy on the server side does not do it\n                //clear the cookie\n                Cookies.remove('email');\n                Cookies.remove('heav');// sesion id \n            })\n            .addCase(logoutAsync.rejected, (state, action) => {\n                // need indicate some error\n                // state.screen = 'home';\n                // let payload = action.payload;\n                // figure out this part\n\n            })\n            .addCase(signupAsync.fulfilled, (state, action) => {\n                state.isLoggedIn = true;\n                state.username = action.payload.email;\n            })\n            ;\n        // think need add rejected\n    },\n});\n\nexport const selectLoginScreen = (state) => state.login.screen;\nexport const selectIsLoginShown = (state) => state.login.isShown;\nexport const selectIsLoggedIn = (state) => state.login.isLoggedIn;\nexport const selectUsername = (state) => state.login.username;\nexport const selectJustLoggedIn = (state) => state.login.justLoggedIn;\n\nexport const { resetJustLoggedIn, loadUserFromCookie, relogin, forgetpw, show, hide } = loginSlice.actions;\n\nexport default loginSlice.reducer;\n","\nimport logo from '../../resources/Group 2.svg';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport withWidth from '@material-ui/core/withWidth';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport { blue } from '@material-ui/core/colors';\nimport Slide from '@material-ui/core/Slide';\nimport ReactDOM from 'react-dom';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport TextField from '@material-ui/core/TextField';\nimport { InputAdornment } from '@material-ui/core';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport Login from '../../component/oldLogin';\nimport { logoutAsync, hide, loadUserFromCookie } from '../login/LoginSlice';\nimport { useDispatch } from 'react-redux';\nimport {\n    Link,\n    useLocation\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n        background: \"white\",\n        // position: \"fixed\",\n        zIndex: 1,\n        top: \"0px\",\n        display: \"flex\",\n        paddingTop: \"16px\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        [theme.breakpoints.up('sm')]: {\n            paddingLeft: \"32px\",\n            paddingRight: \"32px\",\n            paddingTop: \"16px\",\n        },\n        [theme.breakpoints.up('lg')]: {\n            paddingLeft: \"128px\",\n            paddingRight: \"128px\",\n            paddingTop: \"32px\",\n        },\n    },\n    logo: {\n        width: \"40px\",\n        height: \"40px\",\n        [theme.breakpoints.up('lg')]: {\n            width: \"48px\",\n            height: \"48px\",\n\n        },\n    },\n    makeItSquare: {\n        alignSelf: 'center',\n    }\n}));\n\nfunction NavBar({ isLoggedOn, userEmail, width, handleClickOpen }) {\n    // depending on the login state\n    const classes = useStyles();\n    const theme = useTheme();\n    window.aa = theme; //type aa to see the theme\n\n    let location = useLocation();\n    let isAtSignUpPage = location.pathname === \"/pagesavepublicsite/signup\";\n    console.log('location');\n    console.log(location);\n    let dispatch = useDispatch();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    useEffect(() => {\n        dispatch(loadUserFromCookie({\n            email: Cookies.get('email'),\n        }));\n    }, []);\n\n    const handleLogout = async (event) => {\n        console.log('running logout');\n        handleClose(); // close the old logout bubble menu\n        handleClickOpen(event); //i think this for log out animatino\n        await dispatch(logoutAsync());\n        await dispatch(hide());\n    }\n\n\n    return (\n        <header className={classes.header} >\n            <div style={{\n                display: \"flex\",\n                alignItems: \"center\",\n            }}>\n                <img src={logo} className={classes.logo} />\n                <Link to=\"/pagesavepublicsite/\">\n                    <h5 style={{ marginLeft: \"8px\" }}>Page saver</h5>\n                </Link>\n            </div>\n\n            <Hidden xsDown>\n                {!isLoggedOn ? !isAtSignUpPage && (\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Button onClick={handleClickOpen} >Login</Button>\n                        <Button><Link to=\"/pagesavepublicsite/signup\">Signup</Link></Button>\n                    </div>)\n                    : (\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <Typography variant=\"h5\" >\n                                {userEmail}\n                            </Typography>\n                            <Button\n                                style={{ marginLeft: \"32px\" }}\n                                onClick={handleLogout}\n                            >Log Out</Button>\n                        </div>\n\n                    )\n                }\n            </Hidden>\n\n            <Hidden smUp>\n                {isLoggedOn && (\n                    <>\n                        <IconButton\n                            aria-label=\"expand-more\"\n                            onClick={handleClick}\n                            size='medium'\n                            classes={{\n                                root: classes.makeItSquare,\n                            }}\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"simple-menu\"\n                            anchorEl={anchorEl}\n                            // keepMounted\n                            open={anchorEl !== null}\n                            onClose={handleClose}\n                        >\n                            <MenuItem\n                                onClick={handleLogout}\n                            >Logout</MenuItem>\n                        </Menu>\n                    </>\n                )}\n            </Hidden>\n            {/* Current width: {width} */}\n        </header>\n    )\n}\n\nexport default withWidth()(NavBar);","export default __webpack_public_path__ + \"static/media/Open Doodles.0a036ee3.svg\";","export default __webpack_public_path__ + \"static/media/Group 5.bea81fa9.svg\";","export default __webpack_public_path__ + \"static/media/Vector.f29b0f2f.svg\";","export default __webpack_public_path__ + \"static/media/camera_alt.db87bc3e.svg\";","import Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cn from 'classnames';\nimport doodle from '../resources/Open Doodles.svg';\nimport icon1 from '../resources/Group 5.svg';\nimport icon2 from '../resources/Vector.svg';\nimport icon3 from '../resources/camera_alt.svg';\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    home: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    containerFirstPage: {\n        display: \"grid\",\n        justifyContent: \"center\",\n        gridTemplateColumns: \"1fr auto 1fr\",\n    },\n    firstPage: {\n        gridColumn: \"2/3\",\n        height: \"100vh\",\n        maxWidth: \"1280px\",\n        // height: \"calc(100vh - 128px)\",\n        // marginTop: \"128px\",\n        padding: \"24px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n    bodytext: {\n        marginTop: \"40px\",\n    },\n    readableWidth: {\n        width: \"min(50ch,90%)\",\n    },\n    readableWidthSmall: {\n        width: \"min(40ch,90%)\",\n    },\n    secondPageTitle: {\n        marginTop: \"48px\",\n        color: \"#fff\",\n        textTransform: \"uppercase\",\n        position: \"relative\",\n        '&::before': {\n            content: '\"\"',\n            top: \"-4px\",\n            display: 'block',\n            width: \"4ch\",\n            borderTop: \"4px solid white\",\n            position: \"absolute\",\n        }\n    },\n    featureIcon: {\n        width: \"48px\",\n    },\n    featureContainer: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"32px 16px\",\n        background: \"#fff\",\n        borderRadius: \"20px\",\n        border: \"4px solid #4B6A5E\",\n    },\n    featureTitle: {\n        color: \"#4b6a5e\",\n    },\n    featureTitleContainer: {\n        margin: 'auto',\n        width: \"min(1280px,100%)\",\n    },\n    featureBigContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"min(1280px,100%)\",\n        paddingBottom: \"128px\",\n        marginTop: \"48px\",\n        '& > div + div': {\n            marginTop: \"16px\",\n        },\n        [theme.breakpoints.up('sm')]: {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(3, 1fr)\",\n            gap: \"40px\",\n            justifyItems: \"center\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    }\n\n}));\n\nfunction HomePage({ isLoggedOn, handleClickOpen }) {\n    const classes = useStyles();\n\n    return (\n        <main className={classes.home} >\n            <div className={classes.containerFirstPage}>\n                <div className={classes.firstPage}>\n                    <div style={{ flexGrow: \"1\", flexShrink: \"1\", flexBasis: \"50%\" }}>\n                        <Typography variant=\"h4\">\n                            Remember more of what you learn\n                        </Typography>\n                        <Typography variant=\"body1\" className={cn(classes.bodytext, classes.readableWidth)}>\n                            We send you reminders to revisit what you learn every now and then. Using a scientifically proven schedule, we help you imprint knowledge into your long term memory.\n                        </Typography>\n                        {/* <Hidden smUp> */}\n                        {!isLoggedOn &&\n                            <div style={{ flex: \"display\", marginTop: \"24px\" }}>\n                                <Button variant=\"contained\" color=\"primary\">\n                                    <Link to=\"/pagesavepublicsite/signup\">Sign up</Link>\n                                </Button>\n                                <Button variant=\"outlined\" style={{ marginLeft: \"16px\" }} onClick={handleClickOpen}>\n                                    Login\n                                </Button>\n                            </div>\n                        }\n                        {isLoggedOn &&\n                            <div style={{ flex: \"display\", marginTop: \"24px\" }}>\n                                <Button variant=\"contained\" color=\"primary\">\n                                    <Link to=\"/pagesavepublicsite/dashboard\">\n                                        View Dashboard\n                                    </Link>\n                                </Button>\n                            </div>\n                        }\n                        {/* </Hidden> */}\n                    </div>\n                    <Hidden xsDown>\n                        <div style={{ flexGrow: \"1\", flexShrink: \"1\", flexBasis: \"50%\" }}>\n                            <img src={doodle} style={{ width: \"min(100%, 500px)\" }} />\n                        </div>\n                    </Hidden>\n                </div>\n            </div>\n            {/* second page */}\n            <div style={{ background: \"#333\", paddingLeft: \"24px\", paddingRight: \"24px\", minHeight: \"100vh\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", }}>\n                <div className={classes.featureTitleContainer}>\n                    <Typography\n                        variant=\"h4\"\n                        className={classes.secondPageTitle}\n                    >\n                        what <span style={{ color: \"#add495\" }}>Pagesaver</span> does for you\n                    </Typography>\n                </div>\n                <div className={classes.featureBigContainer}\n                >\n\n                    <div className={classes.featureContainer}>\n                        <img src={icon1} className={classes.featureIcon} />\n                        <Typography variant=\"h5\" className={classes.featureTitle} align=\"center\">\n                            Exponential Reminder\n                        </Typography>\n                        <Typography variant=\"body1\" className={classes.readableWidthSmall} align=\"center\" style={{ marginTop: \"32px\" }}>\n                            You would be reminded at 1, 2, 4, 8, and so on days apart on a exponential increasing schedule to revisit the topic again.\n                        </Typography>\n                    </div>\n                    <div className={classes.featureContainer}>\n                        <img src={icon2} className={classes.featureIcon} />\n                        <Typography variant=\"h5\" className={classes.featureTitle} align=\"center\">\n                            Scientific way of retaining knowledge\n                        </Typography>\n                        <Typography variant=\"body1\" className={classes.readableWidthSmall} align=\"center\" style={{ marginTop: \"32px\" }}>\n                            Spaced repetition is a scientific way to move what you learn into your long term memory,\n                        </Typography>\n                    </div>\n\n                    <div className={classes.featureContainer}>\n                        <img src={icon3} className={classes.featureIcon} />\n                        <Typography variant=\"h5\" className={classes.featureTitle} align=\"center\" >\n                            Snapshot In Time\n                        </Typography>\n                        <Typography\n                            align=\"center\"\n                            variant=\"body1\"\n                            style={{ marginTop: \"32px\" }}\n                            className={classes.readableWidthSmall}>\n                            A snapshot of the website would be taken and stored so even if the website goes down or become defunct later, you still can view a copy of the website at the moment you save it.\n                        </Typography>\n                    </div>\n                </div>\n            </div >\n\n        </main >\n    )\n}\nexport default HomePage;","import Typography from '@material-ui/core/Typography';\n// import Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    footercontainer: {\n        position: \"absolute\",\n        bottom: \"0px\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-end\",\n        background: \"#4B6A5E\",\n        padding: \"16px 24px\",\n        [theme.breakpoints.up('sm')]: {\n            paddingLeft: \"64px\",\n            paddingRight: \"64px\",\n            paddingTop: '20px',\n            paddingBottom: '20px',\n            justifyContent: \"flex-end\",\n        },\n    },\n    footertext: {\n        margin: \"auto\",\n        textAlign: \"center\",\n        color: theme.palette.primary.contrastText,\n    },\n    rightTextWrapper: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.up(\"sm\")]: {\n            flexDirection: \"row\",\n            marginLeft: '16px',\n\n        }\n\n    }\n}));\nexport default function Footer() {\n    const classes = useStyles();\n    return (\n        <footer className={classes.footercontainer}>\n            <div>\n                <Typography className={classes.footertext} variant=\"subtitle1\">\n                    FAQ\n                </Typography>\n            </div>\n            <div className={classes.rightTextWrapper}>\n                <Typography className={classes.footertext} variant=\"subtitle1\">\n                    © Page Saver 2021.\n                </Typography>\n                <Typography className={classes.footertext} variant=\"subtitle1\">\n                    We love our users!\n                </Typography>\n            </div>\n        </footer >\n    );\n}","export default __webpack_public_path__ + \"static/media/undraw_quick_chat_re_bit5 1.8be29f04.svg\";","import { Hidden, Typography } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport signuppic from '../../resources/undraw_quick_chat_re_bit5 1.svg';\nimport * as yup from 'yup';\nimport { useFormik } from \"formik\";\nimport { TextField, Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectSignupStatus, signupAsync, resetExistingAlert, resetServerDownAlert } from \"./SignupSlice\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {\n    // BrowserRouter as Router,\n    // Switch,\n    // Route,\n    // Link,\n    Redirect,\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    page: {\n        paddingTop: \"128px\",\n        minHeight: \"100vh\",\n\n    },\n    entry: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        paddingLeft: \"24px\",\n        paddingRight: \"24px\",\n        maxWidth: \"512px\",\n        [theme.breakpoints.up('xs')]: {\n            flex: '1 1 50%',\n        },\n    },\n    entrywrapper: {\n        marginTop: \"64px\",\n        [theme.breakpoints.up('xs')]: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n    },\n    inputBox: {\n        borderRadius: \"10px\",\n        padding: \"2em 1em\",\n    },\n    signuppicWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flex: '1 1 20%',\n        [theme.breakpoints.up('sm')]: {\n            flex: '0 1 50%',\n        },\n        [theme.breakpoints.up('md')]: {\n            flex: '0 1 auto',\n        },\n    },\n    signuppic: {\n        // marginLeft: \"40px\",\n        width: \"min(512px,90%)\",\n    },\n    btn: {\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 'initial',\n        }\n    }\n\n}));\n\nconst validationSchema = yup.object({\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .required('Password is required'),\n    confirmpassword: yup\n        .string('Reenter your password')\n        .required('Reenter your password')\n        .oneOf([yup.ref('password')], 'Password did not match'),\n});\n\n\nfunction Signup() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    // i think something to do with props dependence maybe use useeffect?\n    // i need to pass it in or use effect or something\n    // i think i am using redux the wrong way since the state will not change, if i use selector\n    let openAlreadySignup = useSelector(selectSignupStatus) === 'existing';\n    let signupPending = useSelector(selectSignupStatus) === 'pending';\n    let signupError = useSelector(selectSignupStatus) === 'error';\n    let signupDone = useSelector(selectSignupStatus) === 'done';\n\n    // let history = useHistory();\n    // let location = useLocation();\n    //or do i use the redirect compoonent from router\n    // https://reactrouter.com/web/api/Redirect\n\n\n    const handleClose = () => {\n        dispatch(resetExistingAlert());\n        console.log('handle close is called');\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            // email: '',\n            // password: '',\n            // confirmpassword: '',\n            email: 'foobar@example.com',\n            password: 'foobarbar',\n            confirmpassword: 'foobarbar',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n\n            dispatch(signupAsync(\n                { email: values.email, pw: values.password }\n            ));\n        },\n    });\n\n\n    return (\n        <div\n            className={classes.page}\n        >\n            <div className={classes.entrywrapper}>\n\n                <div className={classes.entry}>\n                    <Typography variant=\"h5\">\n                        Sign up for page saver.<br />\n                        It’s free\n                    </Typography>\n                    <form onSubmit={(e) => { e.preventDefault(); formik.handleSubmit(e) }} style={{ marginTop: \"24px\" }}>\n                        <TextField\n                            fullWidth\n                            id=\"email\"\n                            name=\"email\"\n                            label=\"Email\"\n                            value={formik.values.email}\n                            disabled={signupPending}\n                            onChange={formik.handleChange}\n                            error={formik.touched.email && Boolean(formik.errors.email)}\n                            helperText={formik.touched.email && formik.errors.email}\n                        />\n                        <TextField\n                            fullWidth\n                            id=\"password\"\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            disabled={signupPending}\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n                        />\n                        <TextField\n                            fullWidth\n                            id=\"confirmpassword\"\n                            name=\"confirmpassword\"\n                            label=\"Confirm Password\"\n                            type=\"password\"\n                            disabled={signupPending}\n                            value={formik.values.confirmpassword}\n                            onChange={formik.handleChange}\n                            error={formik.touched.confirmpassword && Boolean(formik.errors.confirmpassword)}\n                            helperText={formik.touched.confirmpassword && formik.errors.confirmpassword}\n                        />\n                        <Button disabled={signupPending} color=\"primary\" className={classes.btn} style={{ marginTop: \"24px\" }} variant=\"contained\" type=\"submit\">\n                            {signupPending ? \"Please Wait...\" : \"Sign up\"}\n                        </Button>\n                    </form>\n\n                </div>\n                <Hidden xsDown>\n                    <div className={classes.signuppicWrapper}>\n                        <img src={signuppic} className={classes.signuppic}></img>\n                    </div>\n                </Hidden>\n            </div>\n\n            <Snackbar open={openAlreadySignup} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\">\n                    A user with this email has already signed up.\n                </Alert>\n            </Snackbar>\n            <Snackbar open={signupError} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"warning\">\n                    Please try again later. Server might be experiencing high load.\n                </Alert>\n            </Snackbar>\n            {signupDone ? <Redirect\n                to={{\n                    pathname: \"/pagesavepublicsite/dashboard\",\n                    // state: { from: location }\n                }}\n            /> : null}\n        </div>\n    );\n}\n\n\nexport default Signup;","export default __webpack_public_path__ + \"static/media/iconoir_emoji-sad.f99263db.svg\";","\nimport React from 'react';\nimport { Slide } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport { useFormik } from 'formik';\nimport { Typography } from '@material-ui/core';\nimport { Dialog } from '@material-ui/core';\nimport * as yup from 'yup';\nimport TextField from '@material-ui/core/TextField';\nimport { InputAdornment } from '@material-ui/core';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { Button } from '@material-ui/core';\nimport { Box } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { IconButton } from '@material-ui/core';\nimport { useState } from 'react';\nimport Lottie from 'lottie-react';\nimport loadingAnimation from \"../../resources/lf30_editor_uekpjvgl.json\";\nimport sadface from '../../resources/iconoir_emoji-sad.svg'\nimport { loginAsync, relogin, selectLoginScreen, forgetpw } from './LoginSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectJustLoggedIn } from './LoginSlice';\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    changeLoginDialogAlign: {\n        // justifyContent: 'flex-end',\n        // alignItems: 'flex-start',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n        // borderRadius: '40px',\n        '& .MuiPaper-rounded': {\n            borderRadius: '20px',\n        },\n\n        [theme.breakpoints.up('md')]: {\n            justifyContent: 'flex-end',\n            alignItems: 'flex-start',\n\n        }\n    },\n    inputInternalFieldSetHover: {\n        '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'white',\n\n        },\n        '&.MuiOutlinedInput-notchedOutline': {\n            borderColor: 'white',\n\n        },\n        '&.Mui-error .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'orange',\n        }\n    },\n    fieldsetBorder: {\n        border: 'solid 1px white',\n    },\n    roundedBorder: {\n        borderRadius: '50px',\n\n    },\n    forgetpasswordbtn: {\n        color: '#fff',\n        marginTop: '16px',\n        fontSize: theme.typography.subtitle1.fontSize,\n    },\n    white: {\n        color: '#fff',\n    },\n    logoutwrapper: {\n        padding: '48px',\n        background: '#4B6A5E',\n        margin: 'auto',\n    },\n\n}));\nconst validationSchema = yup.object({\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .required('Password is required'),\n});\nconst forgetPWValidationSchema = yup.object({\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n});\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nfunction Login(props) {\n    const classes = useStyles();\n    const { onClose, selectedValue, open } = props;\n    // let [loginScreen, setLoginScreen] = useState('home');\n    // home, forget, invalid, logging in, \n    let loginScreen = useSelector(selectLoginScreen);\n    let isJustLoggedIn = useSelector(selectJustLoggedIn);\n\n    let dispatch = useDispatch();\n\n    const handleClose = () => {\n        // setLoginScreen('home'); // reset to login screen when closing dialog\n        dispatch(relogin());\n        onClose(selectedValue);\n    };\n\n\n    const formik = useFormik({\n        initialValues: {\n            email: 'malay@gmail.com',\n            password: '11111111',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            // alert(JSON.stringify(values, null, 2));\n            //dispatch some action\n            dispatch(loginAsync({ email: values.email, pw: values.password }));\n        },\n    });\n\n    const forgetPWFormik = useFormik({\n        initialValues: {\n            email: 'foobar@example.com',\n        },\n        validationSchema: forgetPWValidationSchema,\n        onSubmit: (values) => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n\n\n    let isAtLogin = loginScreen === 'home';\n    return (\n        <Dialog\n            TransitionComponent={Transition}\n            onClose={handleClose}\n            aria-labelledby=\"simple-dialog-title\"\n            classes={{\n                scrollPaper: classes.changeLoginDialogAlign,\n                root: classes.roundedBorder\n            }}\n            open={open}\n        // open={true}\n        >\n            {/* start of login first screen */}\n            {loginScreen === 'home' &&\n                < div\n                    style={{\n                        background: \"#4B6A5E\",\n                        display: \"flex\",\n                        flexDirection: 'column',\n                        padding: '48px 24px',\n                    }}\n                >\n                    <Typography variant='h4' align='center' style={{ color: '#fff' }}>Welcome</Typography>\n                    <Typography variant='h4' align='center' style={{ color: '#fff' }} >to</Typography>\n                    <Typography variant='h4' align='center' style={{ color: '#fff' }} >Pagesaver</Typography>\n\n                    <form onSubmit={formik.handleSubmit} style={{ display: 'flex', marginTop: '24px', flexDirection: 'column', }}>\n                        <TextField\n                            // fullWidth\n                            id=\"email\"\n                            name=\"email\"\n                            label=\"Email\"\n                            value={formik.values.email}\n                            onChange={formik.handleChange}\n                            error={formik.touched.email && Boolean(formik.errors.email)}\n                            helperText={formik.touched.email && formik.errors.email}\n                            variant='outlined'\n                            FormHelperTextProps={{\n                                style: { color: 'orange', }\n                            }}\n                            InputLabelProps={{\n                                style: { color: '#fff', }\n                            }}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <MailOutlineIcon />\n                                    </InputAdornment>\n                                ),\n                                style: {\n                                    color: '#fff',\n                                },\n                                classes: {\n                                    root: classes.inputInternalFieldSetHover,\n                                    notchedOutline: classes.fieldsetBorder,\n                                }\n                            }}\n                        />\n                        <TextField\n                            // fullWidth\n                            id=\"password\"\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n                            // color='#ffffff'\n                            style={{ marginTop: \"16px\" }}\n                            variant='outlined'\n                            InputLabelProps={{\n                                style: { color: '#fff', }\n                            }}\n                            FormHelperTextProps={{\n                                style: { color: 'orange', }\n                            }}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <VpnKeyIcon />\n                                    </InputAdornment>\n                                ),\n                                style: {\n                                    color: '#fff',\n                                },\n                                classes: {\n                                    root: classes.inputInternalFieldSetHover,\n                                    notchedOutline: classes.fieldsetBorder\n                                }\n                            }}\n                        />\n\n                        <Button type=\"submit\" variant='outlined' style={{ marginTop: \"24px\", color: '#fff', borderRadius: '60px', border: '1px solid #fff' }} >Sign in</Button>\n                    </form>\n\n                    <Button\n                        className={classes.forgetpasswordbtn}\n                        onClick={() => dispatch(forgetpw())}\n                    >Forget password</Button>\n                </div>\n            }\n            {/* end of login first screen */}\n            {loginScreen === 'forget' &&\n                (<div style={{ position: 'relative' }}>\n                    <div\n                        style={{\n                            padding: '24px',\n                            background: '#4B6A5E',\n                            paddingBottom: '128px',\n                            maxWidth: '350px',\n                        }}\n                        className={classes.tophalf}\n                    >\n                        <IconButton\n                            color=\"secondary\"\n                            aria-label=\"back to login\"\n                            classes={{\n                                root: classes.white,\n                            }}\n                            onClick={() => dispatch(relogin())}\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <Typography\n                            align='center'\n                            variant='h4'\n                            style={{\n                                color: '#fff'\n                            }}\n                        >Forget Your Password?</Typography>\n                        <Typography\n                            align='center'\n                            variant='h5'\n                            style={{\n                                color: '#fff'\n                            }}\n                        >Enter your email to reset your password</Typography>\n                    </div>\n                    <div\n                        style={{\n                            padding: '24px',\n                            background: '#fff',\n                            paddingTop: '128px',\n                            paddingBottom: '24px',\n\n                        }}\n                        className={classes.bottomhalf}\n                    >\n                        <Typography\n                            align='center'\n                        >Didn’t receive a mail?</Typography>\n                        <Typography\n                            align='center'\n                        >Resend email</Typography>\n                    </div>\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            position: 'absolute',\n                            top: '0px',\n                            left: '0px',\n                            pointerEvents: 'none',\n                        }}\n\n                    >\n                        <Box\n                            boxShadow={3}\n                            bgcolor=\"background.paper\"\n                            m={1}\n                            p={3}\n                            style={{\n                                width: '80%',\n                                borderRadius: '20px',\n                            }}>\n                            <form onSubmit={forgetPWFormik.handleSubmit}>\n                                <TextField\n                                    fullWidth\n                                    id=\"email\"\n                                    name=\"email\"\n                                    label=\"Email\"\n                                    value={forgetPWFormik.values.email}\n                                    onChange={forgetPWFormik.handleChange}\n                                    inputProps={{\n                                        style: {\n                                            pointerEvents: 'initial',\n                                        }\n                                    }}\n                                    error={forgetPWFormik.touched.email && Boolean(forgetPWFormik.errors.email)}\n                                    helperText={forgetPWFormik.touched.email && forgetPWFormik.errors.email}\n                                />\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    style={{ marginTop: '16px', pointerEvents: 'initial', }}\n                                    fullWidth\n                                    type=\"submit\">\n                                    reset\n                                </Button>\n                            </form>\n                        </Box>\n                    </div>\n                </div >)}\n            {/* end of forget screen */}\n            {loginScreen === 'logging in' && (\n                <div style={{\n                    padding: '48px',\n                    background: '#4B6A5E',\n                }}>\n                    <Typography\n                        variant='h4'\n                        style={{\n                            color: '#fff'\n                        }}\n                    >Logging in …</Typography>\n                    <div style={{ marginTop: '24px' }}>\n                        <Lottie animationData={loadingAnimation} />;\n                    </div>\n                </div>\n            )}\n            {loginScreen === 'logging out' && (\n                <div className={classes.logoutwrapper} >\n                    <Typography\n                        variant='h4'\n                        style={{\n                            color: '#fff'\n                        }}\n                    >Logging out …</Typography>\n                    <div style={{ marginTop: '24px' }}>\n                        <Lottie animationData={loadingAnimation} />;\n                    </div>\n                </div>\n            )}\n            {loginScreen === 'invalid' && (\n                <div style={{\n                    padding: '48px',\n                    background: '#4B6A5E',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}>\n                    <Typography\n                        variant='h4'\n                        align='center'\n                        style={{\n                            color: '#fff'\n                        }}\n                    >Invalid Credentials</Typography>\n                    <Typography\n                        variant='h5'\n                        align='center'\n                        style={{\n                            color: '#fff',\n                            maxWidth: '20ch',\n                            marginTop: '16px',\n                        }}\n                    >Please check your credentials and try again</Typography>\n                    <img src={sadface} />\n                    <Button\n                        variant='outlined'\n                        style={{\n                            borderColor: 'rgba(255,255,255,0.2)',\n                            color: '#fff',\n                            borderRadius: '20px',\n                            marginTop: '16px',\n                        }}\n                        onClick={\n                            () => dispatch(relogin())\n                        }\n                    >Try again</Button>\n                </div>\n            )}\n            {isJustLoggedIn ?\n                <Redirect\n                    to={{\n                        pathname: \"/pagesavepublicsite/dashboard\",\n                        // state: { from: location }\n                    }}\n                /> : null}\n        </Dialog >\n    );\n}\nexport default Login;","export default __webpack_public_path__ + \"static/media/Whoops.3f3baf32.svg\";","import { Typography } from \"@material-ui/core\";\nimport Cactus from '../resources/Whoops.svg';\n\nfunction NoMatch() {\n    return (\n        <div style={{\n            padding: '48px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        }}>\n            <Typography variant='h3' align='center'>\n                Error 404\n            </Typography>\n            <Typography variant='body1' align='center'>\n                You reached somewhere inaccessible!\n            </Typography>\n            <img src={Cactus} style={{\n                marginTop: '16px',\n                height: '240px',\n            }} />\n        </div>\n\n    );\n}\n\nexport default NoMatch;","// import firebase from \"firebase\";\nimport firebase from 'firebase/app';\nimport 'firebase/database'; // If using Firebase database\nimport 'firebase/messaging';  // If using Firebase storage\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCTKDCCVasMozc94FO9WexvvBkvHaXrn-w\",\n    authDomain: \"page-save.firebaseapp.com\",\n    databaseURL: \"https://page-save-default-rtdb.asia-southeast1.firebasedatabase.app\",\n    projectId: \"page-save\",\n    storageBucket: \"page-save.appspot.com\",\n    messagingSenderId: \"191537973535\",\n    appId: \"1:191537973535:web:e9521da8ba973166a8082a\",\n    measurementId: \"G-HX28BXHXWD\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.database();\nexport const messaging = firebase.messaging();","\nimport { createSlice } from '@reduxjs/toolkit';\n// import { fetchArchivesAsync } from '../archive/archiveSlice';\n// import { useDispatch } from 'react-redux';\n\nconst initialState = {\n    urlsInProgress: {\n    },\n    showProgressDialog: true,\n    // need to monitor downloading,completed\n    // removing completed and refresh page?, need use some animation\n    // research on the animation in react\n    // basicallly just need to detect 2 things\n    // 1) adding of new url\n    // 2) deleting of url(aka completion) and play the animation as required\n}\n\nexport const progressdialogSlice = createSlice({\n    name: 'progressdialog',\n    initialState,\n    reducers: {\n        closeDialog: (state, action) => {\n            state.showProgressDialog = false;\n        },\n        updateUrls: (state, action) => {\n            // action.payload = action.payload || {};\n\n            console.log('received update url actions');\n            console.log(action.payload);\n            // compare state with action payloadd for old and new\n            // i have to keep track/statee of the progress too\n            // dispatch new action for certain?\n            let newState = { ...state }; //copy old state, is this immutable, or shallow copy only?\n            newState.showProgressDialog = true;\n            for (const [id, link] of Object.entries(action.payload || {})) {\n                console.log(\"Checking from action payload: \" + link);\n                if (typeof state.urlsInProgress[id] === 'undefined') {// use property define or something?\n                    // new\n                    //dispatch added action?\n                    //need to play some animation?\n                    console.log('added new:' + link);\n                    newState.urlsInProgress = {\n                        ...newState.urlsInProgress,\n                        [id]: {\n                            link: link,\n                            status: \"downloading\",\n                        }\n                    }\n                }\n            }\n            //chaining it like this is a problem since the action performed above affects the bottom too\n            for (const [id, { status, link }] of Object.entries(state.urlsInProgress)) {\n                console.log(\"Checking from state: \" + status + \" \" + link);\n                if (!action.payload || typeof action.payload[id] === 'undefined') {\n                    // completed items \n                    console.log('completed:' + link);\n                    newState.urlsInProgress = {\n                        ...newState.urlsInProgress,\n                        [id]: {\n                            ...newState.urlsInProgress[id],\n                            status: \"completed\",\n                        },\n                        // Object.prototype.hasOwnProperty.call\n                    }\n                }\n            }\n            return newState;\n        }\n    }\n})\nexport const { updateUrls, closeDialog } = progressdialogSlice.actions;\nexport const selectURLInProgress = (state) => state.progressdialog.urlsInProgress;\nexport const selectProgressDialogIsShowing = (state) => state.progressdialog.showProgressDialog;\nexport default progressdialogSlice.reducer;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { db } from '../../services/firebase.js';\nimport { selectURLInProgress, selectProgressDialogIsShowing, closeDialog } from './progressdialogSlice';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport { Typography } from '@material-ui/core';\n// import Paper from '@material-ui/core/Paper';\n// import { shadows } from '@material-ui/system';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ellipsis } from '../../helper/util';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n// import Hidden from '@material-ui/core/Hidden';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Checkmark } from 'react-checkmark';\nimport { useTheme } from '@material-ui/core/styles';\n// import { borders } from '@material-ui/system';\nimport IconButton from '@material-ui/core/IconButton';\n// import { useSpring, animated } from 'react-spring';\nimport Slide from '@material-ui/core/Slide';\n\nconst ELLIPSIS_LIMIT = 30;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: \"90vw\",\n        position: \"fixed\",\n        bottom: \"0px\",\n        right: \"0px\",\n        margin: \"16px\",\n        paddingBottom: '0px',\n        // background: \"pink\",\n        // borderRadius: \"50px\",\n    },\n    header: {\n        display: \"flex\",\n        background: \"white\",\n        borderRadius: \"10px 10px 0px 0px\",\n        alignItems: \"center\",\n        // border: \"2px solid red\",\n    },\n    headericon: {\n\n    },\n    acsummary: {\n        padding: \"0px\",\n    },\n    acsummarycontent: {\n        padding: \"0px\",\n        margin: \"0px\",\n        '&$expanded': {\n            margin: \"0px\",\n            padding: \"0px\",\n        },\n    },\n    lastchild: {\n        '&:last-child': {\n            paddingBottom: '8px',\n        },\n    },\n    checkmark: {\n        // display: \"flex\",\n        // justifyContent: \"flex-end\",\n        marginLeft: \"auto\",\n    },\n    urlcontainer: {\n        display: \"flex\",\n        padding: theme.spacing(1) + \"px \" + theme.spacing(1) + \"px\",\n        width: 'inherit',\n\n        alignItems: \"center\",\n    },\n    urlcontainercompleted: {\n        display: \"flex\",\n        padding: theme.spacing(1) + \"px \" + theme.spacing(3) + \"px\",\n        color: theme.palette.primary.dark,\n        // background: theme.palette.primary.light,\n        alignItems: \"center\",\n\n    },\n    overrideaccordionshadowandmargin: {\n        boxShadow: \"none\",\n        border: \"none\",\n        margin: '0',\n        '&$expanded': {\n            margin: \"0\",\n        },\n    },\n    expanded: {\n        // this is required to be blank\n    },\n    urls: {\n        marginLeft: theme.spacing(2),\n        wordBreak: \"break-word\",\n        whiteSpace: \"normal\",\n        textOverflow: \"ellipsis\",\n\n    },\n    processingQueue: {\n        [theme.breakpoints.down('sm')]: {\n            fontSize: theme.typography.body1.fontSize,\n        },\n    },\n    '@keyframes rotation': {\n        'from': {\n            transform: \"rotate(0deg)\",\n        },\n        'to': {\n            transform: \"rotate(359deg)\",\n        }\n    },\n    // downloadprogressicon: {\n    //     margin: \"8px\",\n    //     // animation: \"$rotation 2s linear infinite\",\n    // },\n    downloadProgressIcon: {\n        margin: \"8px\",\n        animation: '$rotation 2s linear infinite',\n    },\n\n}));\nexport default function ProgressDialog(props) {\n    const existingURLs = useSelector(selectURLInProgress);\n    const isProgressDialogVisible = useSelector(selectProgressDialogIsShowing);\n\n    const dispatch = useDispatch();\n\n    const classes = useStyles();\n    // const { anchorEl } = props;\n    useEffect(() => {\n        console.log('progressdialog mounted stuff');\n    }, [dispatch]);\n\n    const [expanded, setExpanded] = React.useState(false);\n\n    const theme = useTheme();\n\n    const handleChange = () => {\n        setExpanded(!expanded);\n    };\n    console.log('existingurls');\n    window.exu = existingURLs;\n    console.log(existingURLs);\n\n    // const loopingStyle = useSpring({\n    //     loop: true,\n    //     from: { rotateZ: 0 },\n    //     to: { rotateZ: 360 },\n    // })\n    return (\n        <Slide direction=\"up\" in={Object.values(existingURLs).length > 0 && isProgressDialogVisible} mountOnEnter unmountOnExit>\n            <Box\n                borderRadius=\"20px\"\n                boxShadow={3}\n                // width=\"300px\"\n                // height=\"300px\"\n                m={0}\n                style={{ paddingRight: \"8px\", paddingLeft: \"8px\", paddingTop: \"8px\", paddingBottom: \"8px\", }}\n                // m and p values are important\n                bgcolor=\"background.paper\" className={classes.root}>\n                <Accordion\n                    expanded={!expanded}\n                    onChange={handleChange}\n                    classes={{\n                        root: classes.overrideaccordionshadowandmargin,\n                        expanded: classes.expanded,\n                    }}\n                >\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                        p={0}\n                        m={0}\n                        style={{\n                            paddingRight: \"40px\",\n                            // borderBottom: \"solid rgba(0, 0, 0, 0.27) 1px\",\n                            // boxShadow: \"rgb(0 0 0 / 20%) 0px 3px 1px -2px, rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px\",\n                        }}\n                        classes={{\n                            root: classes.acsummary,\n                            content: classes.acsummarycontent,\n                            expanded: classes.expanded,\n                        }}\n                    >\n                        <div className={classes.header}>\n                            <div className={classes.downloadProgressIcon} >\n                                <AutorenewIcon color=\"primary\" fontSize=\"large\" />\n                            </div>\n                            <div>\n                                <Typography variant=\"h6\" gutterBottom={false} className={classes.processingQueue}>\n                                    Processing\n                                </Typography>\n                                {!expanded && (\n                                    <Typography variant=\"caption\">\n                                        {Object.values(existingURLs).filter(a => a.status === 'downloading').length} page saving in progress...\n                                    </Typography>\n                                )}\n                            </div>\n                        </div>\n                        <IconButton\n                            style={{ position: \"absolute\", right: \"0px\", top: \"8px\" }}\n                            aria-label=\"close\"\n                            onClick={() => dispatch(closeDialog())}\n                        // color=\"primary\"\n                        >\n                            <CloseIcon fontSize=\"small\"></CloseIcon>\n                        </IconButton>\n                    </AccordionSummary>\n                    <AccordionDetails style={{ margin: 0, padding: 0 }}>\n                        <div className={classes.body}>\n                            {Object.entries(existingURLs).map(([id, url]) => {\n                                if (url.status === 'downloading') {\n                                    return (\n                                        <div key={id} className={classes.lastchild}>\n                                            <div className={classes.urlcontainer}>\n                                                <DescriptionOutlinedIcon fontSize=\"small\" color=\"disabled\" />\n                                                <Typography variant=\"body2\" className={classes.urls}>\n                                                    Saving {ellipsis(url.link, ELLIPSIS_LIMIT)}\n                                                </Typography>\n                                            </div>\n                                            <Container>\n                                                <LinearProgress color=\"primary\" />\n                                            </Container>\n\n                                        </div>);\n\n                                } else {\n                                    return (\n                                        <div key={id} className={classes.urlcontainercompleted}>\n                                            <DescriptionRoundedIcon fontSize=\"small\" />\n                                            <Typography className={classes.urls} >\n                                                {ellipsis(url.link, ELLIPSIS_LIMIT)}\n                                                {/* {url.link} */}\n                                            </Typography>\n                                            <div className={classes.checkmark}>\n                                                <Checkmark size='medium' color={theme.palette.primary.main} />\n                                            </div>\n                                        </div>);\n                                };\n                            })\n                            }\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </Box >\n        </Slide>\n    )\n}","export default __webpack_public_path__ + \"static/media/Mail-rafiki 1.98d1a41d.svg\";","import { Button, Typography } from \"@material-ui/core\";\nimport verifyimg from '../resources/Mail-rafiki 1.svg';\n\nfunction VerifyEmail() {\n    return (\n        <div style={{\n            paddingTop: \"128px\",\n            display: \"flex\",\n            flexDirection: 'column',\n            alignItems: 'center',\n            paddingLeft: \"24px\",\n            paddingRight: \"24px\",\n            paddingBottom: \"128px\",\n            minHeight: \"100vh\",\n        }}>\n            <Typography variant=\"h5\" style={{ marginTop: \"48px\", }} align=\"center\">\n                Verify Your Email\n            </Typography>\n            <Typography variant=\"caption\" align=\"center\" style={{ marginTop: \"4px\" }}>\n                You will need to verify your email to complete registration.\n            </Typography>\n            <img src={verifyimg} style={{ width: \"256px\", marginTop: \"8px\" }} />\n            <Typography variant=\"caption\" align=\"center\" style={{ color: \"#828282\", maxWidth: \"50ch\", }} >\n                An email has been sent to yourmail@gmail.com with a link to verify your account. If you have not received the email after a few minutes, please check your spam folder\n            </Typography>\n            <Button variant=\"contained\" color=\"primary\" style={{ marginTop: \"16px\" }}>Resend email</Button>\n        </div>\n    );\n}\nexport default VerifyEmail;","import axios from 'axios';\nimport { getBaseEndPoint } from '../../helper/util';\nimport { localURL, productionURL } from '../../constants.js'\nexport async function fetchArchives() {\n    let result;\n    try {\n        result = await axios.get(getBaseEndPoint() + '/pagesave',\n            {\n                withCredentials: true,\n            });\n        console.log('fetching archive in axios');\n        console.log(result.data); // this is an array\n        console.log(result.status);\n        //TODO: refactor this to unpack it here instead of bubbling it thorugh so many steps\n        return result;\n    } catch (e) {\n        console.log('fetchin archive some error');\n\n        console.log(e.response.status);\n        if (e.response.status == 403) {\n\n\n        }\n    }\n}\n\nexport async function turnOnAlert(id) {\n    let result;\n    console.log('id to be used for turning on: ' + id);\n    try {\n        result = await axios.post(getBaseEndPoint() + '/pagesave/turnonalert',\n            {\n                id: id\n            },\n            {\n                withCredentials: true,\n            });\n        console.log('Turning on alert');\n        console.log(result.data);\n        console.log(result.status);\n        console.log('whats here');\n        //proper status is 200 TODO: edit these later\n        return {\n            // success: true,\n            // alertsetat, ...result.data,\n            ...result.data,\n            id\n        }\n        //TODO: refactor this to unpack it here instead of bubbling it thorugh so many steps\n    } catch (e) {\n        console.log('turn on alert fail');\n        console.log(e);\n        console.log(e.response.status);\n        if (e.response.status == 403) {\n\n\n        }\n    }\n\n}\n\nexport async function turnOffAlert(id) {\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/pagesave/turnoffalert',\n            {\n                id: id\n            },\n            {\n                withCredentials: true,\n            });\n        console.log('Turning off alert');\n        console.log(result.data);\n        console.log(result.status);\n        //TODO: refactor this to unpack it here instead of bubbling it thorugh so many steps\n        return id;\n    } catch (e) {\n        console.log('turn off alert fail');\n\n        console.log(e);\n        console.log(e.response.status);\n        if (e.response.status == 403) {\n\n\n        }\n    }\n}\n\n\nexport async function registerMessageToken(token) {\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/pagesave/registertoken',\n            {\n                token,\n            },\n            {\n                withCredentials: true,\n            });\n        console.log('Registering token');\n        console.log(result.data);\n        console.log(result.status);\n        //TODO: refactor this to unpack it here instead of bubbling it thorugh so many steps\n        return true;\n    } catch (e) {\n        console.log('Registering token failed');\n\n        console.log(e);\n        console.log(e.response.status);\n        if (e.response.status == 403) {\n\n\n        }\n        return false;\n    }\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchArchives as fetchArchivesAPI, turnOnAlert, turnOffAlert, registerMessageToken } from './archiveAPI';\n\nconst initialState = {\n    archives: [],\n    status: 'loading',\n    pending: {\n\n    },\n};\n\n\nexport const registerMessageTokenAsync = createAsyncThunk(\n    'archive/registerMessageToken',\n    async (token) => {\n        const response = await registerMessageToken(token);\n        return response;\n    }\n);\n\nexport const fetchArchivesAsync = createAsyncThunk(\n    'archive/fetchArchives',\n    async () => {\n        const response = await fetchArchivesAPI();\n        return response.data;\n    }\n);\n\nexport const turnOnAlertAsync = createAsyncThunk(\n    'archive/turnOnAlert',\n    async (id, meta) => {\n        console.log(`id received: ${id}`)\n        console.log(`request id ${meta.requestId}`);\n        // meta.dispatch() and meta.getState() , we can do something\n        console.log(meta);\n        meta.dispatch(setPending(id));\n        const response = await turnOnAlert(id);\n        console.log('response here:');\n        console.log(response);\n        return response;\n    }\n);\nexport const turnOffAlertAsync = createAsyncThunk(\n    'archive/turnOffAlert',\n    async (id, meta) => {\n        console.log(`id received: ${id}`)\n        meta.dispatch(setPending(id));\n        const response = await turnOffAlert(id);\n        return response;\n    }\n);\nexport const archiveSlice = createSlice({\n    name: 'archive',\n    initialState,\n    reducers: {\n        setPending: (state, action) => {\n            console.log(action.payload);\n            return {\n                ...state,\n                pending: {\n                    ...state.pending,\n                    [action.payload]: true,\n                },\n            }\n\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchArchivesAsync.pending, (state) => {\n                // state.status = 'loading';\n            })\n            .addCase(fetchArchivesAsync.fulfilled, (state, action) => {\n                state.status = 'idle';\n                state.archives = action.payload || [];\n            })\n            .addCase(turnOnAlertAsync.pending, (state, action) => {\n                console.log('turning on alertpending');\n            })\n            .addCase(turnOnAlertAsync.fulfilled, (state, action) => {\n                // TODO: maybe i should receive the next date to display instead of calculating locally\n                console.log('turning on alert complete');\n                console.log(action);\n                console.log(`payload: ${action.payload}`);\n                // in success case  pyaload contains \n                // {\n                //     success:true,\n                //     alertsetat: somenumber,\n                //     id: id\n                // }\n                const { id, success, alertsetat, } = action.payload;\n                console.log(`alertsetat: ${alertsetat}`);\n                let newAlertString = (new Date(Number(alertsetat))).toString();\n                console.log('new alert string');\n                console.log(newAlertString);\n\n                // reading the current state\n                const { archives: __, pending: _a } = state;\n                const { [id]: _, ...rest } = state.pending;\n                const newArchives = state.archives.map((item, idx) => {\n                    if (item.id === id) {\n                        console.log('found match at index:' + idx);\n                        return {\n                            ...item,\n                            alerton: true,\n                            nextalertdate: newAlertString,\n                        }\n                    }\n                    return item;\n                });\n                return {\n                    ...state,\n                    pending: {\n                        ...rest,\n                    },\n                    archives: newArchives,\n                };\n            })\n            .addCase(turnOffAlertAsync.pending, (state, action) => {\n                console.log('turning off alertpending');\n                console.log(action.payload);\n                return {\n                    ...state,\n                    [state.pending]: {\n                        ...state.pending,\n                        [action.payload]: true,\n                    },\n                }\n            })\n            .addCase(turnOffAlertAsync.fulfilled, (state, action) => {\n                console.log('turning off alert complete');\n                console.log(action);\n                console.log(`payload: ${action.payload}`);\n\n                let id = action.payload;\n                const { [id]: _x, ...rest } = state.pending;\n                const newArchives = state.archives.map((item, idx) => {\n                    if (item.id === id) {\n                        console.log('match at idx:' + idx);\n                        return {\n                            ...item,\n                            alerton: false,\n                        }\n                    }\n                    return item;\n                });\n                return {\n                    ...state,\n                    pending: {\n                        ...rest,\n                    },\n                    archives: newArchives,\n                };\n            })\n            .addCase(registerMessageTokenAsync.pending, (state, action) => {\n                //TODO: i should add some management if registering token failed so dont allow alerts\n            })\n            .addCase(registerMessageTokenAsync.fulfilled, (state, action) => {\n                //TODO: i should add some management if registering token failed so dont allow alerts\n            })\n    }\n});\n\n\nexport const { setPending } = archiveSlice.actions;\nexport const selectArchives = (state) => state.archive.archives;\nexport const selectStatus = (state) => state.archive.status;\nexport const selectPendingAlertId = (state) => state.archive.pending;\nexport const selectAlertOnStatusById = (id) => (state) => {\n    let index;\n    for (let i in state.archive.archives) {\n        if (state.archive.archives[i].id === id) {\n            index = i\n            console.log('match at index:' + index);\n            break;\n        }\n    }\n    return state.archive.archives[index].selectAlertOnStatusById;\n}\nexport default archiveSlice.reducer;","export default __webpack_public_path__ + \"static/media/undraw_empty_street_sfxm 1.b6570731.svg\";","import axios from 'axios';\nimport { getBaseEndPoint } from '../../helper/util';\nexport async function submitURL(url) {\n    console.log('submitting new archive');\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/pagesave',\n            {\n                url: url,\n            },\n            {\n                withCredentials: true,\n            }\n        );\n        console.log(result.status);\n        return {\n            success: true,\n        };\n    } catch (e) {\n        console.log('submitting new archive fail')\n        console.log(e.response.status);\n        if (e.response.status == 403) {\n\n        }\n    }\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { submitURL } from './submissionbarAPI.js';\n\nconst initialState = {\n    status: 'idle',\n    snackbarOpen: false,\n    snackbarMsg: '',\n    snackbarType: 'error',\n}\n\nexport const submitURLAsync = createAsyncThunk(\n    'submissionbar/submitURL',\n    async (url) => {\n        console.log(`trying to submit async ${url}`);\n        const response = await submitURL(url);\n        return response.data;\n    }\n)\n\n\nexport const selectSBOpen = (state) => state.submissionbar.snackbarOpen;\nexport const selectSBMsg = (state) => state.submissionbar.snackbarMsg;\nexport const selectSBType = (state) => state.submissionbar.snackbarType;\n\nexport const submissionbarSlice = createSlice({\n    name: 'submissionbar',\n    initialState,\n    reducers: {\n        closeSB: (state) => {\n            state.snackbarOpen = false;\n        },\n        showInvalidURLMsg: (state) => {\n            state.snackbarOpen = true;\n            state.snackbarMsg = 'Url is invalid';\n            state.snackbarType = 'error';\n        },\n        showCustomMsg: (state, action) => {\n            state.snackbarOpen = true;\n            state.snackbarMsg = action.payload;\n            state.snackbarType = 'error';\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(submitURLAsync.pending, (state) => {\n                state.status = 'submitting';\n            })\n            .addCase(submitURLAsync.fulfilled, (state, action) => {\n                state.status = 'idle';\n                // state.value += action.payload;\n                state.snackbarOpen = true;\n                // clear the \n                state.snackbarMsg = 'Url submitted';\n                state.snackbarType = 'success';\n            });\n\n    },\n});\n\nexport const { closeSB, showInvalidURLMsg, showCustomMsg } = submissionbarSlice.actions;\n\nexport default submissionbarSlice.reducer;","import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchArchivesAsync, selectArchives, selectStatus, turnOnAlertAsync, turnOffAlertAsync, selectPendingAlertId, registerMessageTokenAsync, selectAlertOnStatusById } from './archiveSlice';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Link from '@material-ui/core/Link';\nimport Lottie from 'lottie-react';\nimport animationData from '../../resources/107-box-package-open-outline-edited.json';\n// import { useSpring } from 'react-spring';\n// import diskimg from '../../resources/disk.svg';\nimport emptyimg from '../../resources/undraw_empty_street_sfxm 1.svg';\nimport { db } from '../../services/firebase.js';\nimport Cookies from 'js-cookie';\nimport { replaceFirebaseInvalidCharInKey } from '../../helper/util';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getFriendlyTime } from '../../helper/util';\nimport { messaging } from '../../services/firebase';\nimport { showCustomMsg } from '../submissionbar/submissionbarSlice';\n\nconst EACH_PAGE_COUNT = 5;\n\nconst useStyles = makeStyles((theme) => ({\n    centering: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: theme.spacing(4),\n    },\n    archivecontainer: {\n        marginTop: theme.spacing(8),\n    },\n    firstArchive: {\n        marginTop: theme.spacing(4),\n    },\n    gridcontainer: {\n        backgroundColor: theme.palette.background.paper,\n        display: \"grid\",\n        gridTemplateColumns: \"2fr 3fr 4fr\",\n        maxWidth: \"100%\",\n        marginTop: theme.spacing(3),\n    },\n    imgofpage: {\n        width: \"max-content\",\n        overflowY: \"hidden\",\n        height: \"100%\",\n        maxHeight: \"100%\",\n        maxWidth: \"100%\",\n        verticalAlign: \"top\",\n        objectFit: \"cover\",\n        // objectFit: \"contain\",\n        // objectFit: \"scale-down\",\n        // https://www.w3schools.com/css/css3_object-fit.asp\n        objectPosition: \"0% 0%\",\n    },\n    archiveTitle: {\n        // fontFamily: \"'Train One', cursive\",\n    },\n    paper: {\n        height: \"100%\",\n    },\n    fillheight: {\n        // height: \"100%\",\n        height: \"200px\",\n    },\n    imgwrapper: {\n        marginTop: '64px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: '80%',\n    },\n}));\n\nfunction SingleArchive(props) {\n    console.log('props withing single archive');\n    console.log(props);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    // const [isAlertOn, setAlert] = React.useState(props.alerton);\n    // const isAlertOn = useSelector(selectAlertOnStatusById(props.id));\n    const isAlertOn = props.alerton;\n\n    // i use selector in each archive, may not be efficient\n    const pendingObject = useSelector(selectPendingAlertId);\n    const isAlertPending = pendingObject.hasOwnProperty(props.id);\n    // const humanizedNextAlertDate = \n\n    // check whether it is pending\n    let labelText = isAlertOn ? (\n        isAlertPending ? \"Turning off alert...\"\n            // : \"Next alert at \" + humanizedNextAlertDate\n            : \"Next alert at \" + getFriendlyTime(props.nextalertdate)\n    )\n        : (isAlertPending ? \"Turning on alert...\"\n            : \"Turn on alert\");\n\n    const handleChange = async () => {\n        // check notificaiton permission\n        let registration = window.registration;\n        // Request permission and get token.....\n        Notification.requestPermission().then(function () {\n            console.log('Have permission ');\n            return messaging.getToken({\n                serviceWorkerRegistration: registration,\n                vapidKey: \"BJy2tod0IHuw43QulYTMh8fkz6MXsrst_avO9feOrpZVdnStqiK4oVYWZ0cCueVf_OqWUcmuIxi-a8TZN6O21hU\"\n            });\n        }).then((currentToken) => {\n            if (currentToken) {\n                // setMsgToken(currentToken);\n                console.log(\"token\");\n                console.log(`currentToken: ${currentToken}`);\n                // const cookies = new Cookies();\n                // cookies.set('msgtoken', currentToken, { path: '/', maxAge: 2 * 365 * 24 * 60 * 60 });\n                // console.log(cookies.get('token'));\n                // localStorage.setItem('msgtoken', currentToken);\n                // setOpen(true);\n                // setPermissionLoading(false);\n\n                // maybe have to store it locally or something, if during different session it differs, check this later\n                dispatch(registerMessageTokenAsync(currentToken));\n                if (!isAlertOn) {\n                    // turning off submit a request\n                    dispatch(turnOnAlertAsync(props.id));\n                } else {\n                    //turn on\n\n                    dispatch(turnOffAlertAsync(props.id));\n                }\n\n\n            } else {\n                console.log('No registration token available. Request permission to generate one.');\n                dispatch(showCustomMsg('Have you enabled notification?'));\n                // setSnackbarMsg('Please enable push notification and try again');\n                // setSnackbarOpen(true);\n                // setPermissionLoading(false);\n            }\n        }).catch((err) => {\n            console.log('An error occurred while retrieving token. ', err);\n            // send a notificaiton\n            dispatch(showCustomMsg('You need to  enable notification for the alerts to work'));\n\n            // setSnackbarMsg('Please enable push notification and try again');\n            // setSnackbarOpen(true);\n            // setPermissionLoading(false);\n        });\n\n        // setAlert(!isAlertOn);\n    };\n\n    return (\n        <div className={props.idx === 0 ? classes.firstArchive : classes.archivecontainer} >\n\n\n            <Typography variant=\"h5\" gutterBottom>\n                <Link href={props.url} target=\"_blank\" rel=\"noopener noreferrer nofollow\" >\n                    <span>{props.title}</span>\n                </Link>\n            </Typography>\n            <div className={classes.gridcontainer}>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img0B} target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n                            <img alt=\"\" className={classes.imgofpage} src={props.img0} />\n                        </a>\n                    </Paper>\n                </Container>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img1B} target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n                            <img alt=\"\" className={classes.imgofpage} src={props.img1} />\n                        </a>\n                    </Paper>\n                </Container>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img2B} target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n                            <img alt=\"\" className={classes.imgofpage} src={props.img2} />\n                        </a>\n                    </Paper>\n                </Container>\n            </div>\n            <Container style={{ paddingTop: \"16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                <Link>\n\n                </Link>\n                <FormControlLabel\n                    control={<Switch checked={isAlertOn} disabled={isAlertPending} onChange={handleChange} name=\"alert\" />}\n                    // labelPlacement=\"bottom\"\n                    labelPlacement=\"start\"\n                    label={labelText}\n                />\n            </Container>\n        </div >\n    );\n}\n\nexport default function Archive() {\n    const dispatch = useDispatch();\n    // select the archives\n    let archives = useSelector(selectArchives);\n    let status = useSelector(selectStatus);\n    console.log('reverse');\n    // window.aaa = archives;\n    // let reverseArchives = [...archives].reverse(); // this does not update the statesomehow\n    // i move the sorting to server side\n    let reverseArchives = [...archives]// this does not update the statesomehow\n    // let reverseArchives = [];\n    let [page, setPage] = useState(1);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        console.log('running archive mounting stuff');\n        //dispatch\n\n        // dispatch(fetchArchivesAsync()); // why is it mounted even when it is not visible yet\n        // this would be dispatched by the queue_change saga\n        // Initialize Firebase\n        //TODO: error checking, and make this more secure in the future\n        let email = Cookies.get('email');\n        var queueRef = db.ref('queue/' + replaceFirebaseInvalidCharInKey(email)); // add the email hereTODO:\n        queueRef.on('value', (snapshot) => {\n            const data = snapshot.val();\n            console.log(\"queue changes\");\n            console.log(data);\n\n            // updateStarCount(postElement, data);\n            // dispatch(updateUrls(data));\n            dispatch({\n                type: 'QUEUE_CHANGE',\n                payload: data,\n            });\n        });\n\n    }, [dispatch]);\n\n    function handlePageChange(e, v) {\n        console.log(v);\n        setPage(v);\n    }\n\n    // const diskanimation = useSpring({\n    //     loop: true,\n    //     to: [\n    //         { opacity: 1, color: '#ffaaee' },\n    //         { opacity: 0, color: 'rgb(14,26,19)' },\n    //     ],\n    //     from: {\n    //         opacity: 0, color: 'red',\n    //     },\n    //     config: {\n    //         duration: 3000,\n    //     }\n\n    // })\n\n    return status !== \"loading\" && (\n        <div style={{\n        }}>\n\n            <div style={{\n                position: \"relative\",\n                marginTop: '72px',\n            }}>\n                {/* <animated.div\n                    style={diskanimation}\n                >\n                    <img src={diskimg} style={{\n                        position: \"absolute\",\n                        right: \"80vw\",\n                        width: \"32px\",\n                        height: \"32px\",\n                        transform: \"rotate(45deg)\",\n\n                    }} />\n                </animated.div> */}\n                <Typography variant=\"h4\" className={classes.archiveTitle} gutterBottom>\n                    Your Personal Archive\n                </Typography>\n            </div>\n            {reverseArchives.filter(\n                (x, idx) => idx >= (page - 1) * EACH_PAGE_COUNT\n                    && idx < page * EACH_PAGE_COUNT).map(\n                        (a, idx) => (<SingleArchive idx={idx} key={a.id} {...a} />)\n                    )}\n            {reverseArchives.length === 0 &&\n                <div>\n                    {/* <Lottie\n                        animationData={animationData}\n                        style={{\n                            height: \"200px\",\n                            width: \"200px\",\n                        }}\n                    /> */}\n                    <div className={classes.imgwrapper}>\n                        <img src={emptyimg} style={{\n                            width: '100%',\n                        }} />\n                        <Typography\n                            style={{\n                                marginTop: '32px',\n                                maxWidth: '50ch',\n                                marginLeft: 'auto',\n                                marginRight: 'auto',\n                            }}\n                            variant=\"body1\"\n                        >\n                            Wow. It looks empty here. Add a new page to your personal archive using the form above.\n                        </Typography>\n                    </div>\n                </div>}\n            <div className={classes.centering}>\n                <Pagination page={page} onChange={handlePageChange} count={Math.ceil(reverseArchives.length / 5)} color=\"secondary\" />\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\n// import styles from './SubmissionBar.module.css';\nimport { showInvalidURLMsg, submitURLAsync } from './submissionbarSlice';\nimport validUrl from 'valid-url';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: theme.spacing(2),\n        // height: \"500px\",\n    },\n    borderRadiusOverwrite: {\n        borderRadius: '10px',\n    },\n    savebutton: {\n        // minWidth: \"150px\",\n        marginTop: '16px',\n        padding: '1em 2em',\n    },\n    input: {\n        width: \"100%\",\n    },\n    root: {\n\n    },\n}));\n\n\nexport default function SubmissionBar() {\n    // const [submissiontext, setSubmissionText] = useState('');\n    // we use uncontrolled ref\n    // need media query later for the submission button below if size is too small\n    const dispatch = useDispatch();;\n\n    let textRef = React.createRef();\n    let submitURL = (e) => {\n        e.preventDefault();\n        let url = textRef.current.value;\n        console.log(url);\n        if (validUrl.isUri(url)) {\n            console.log('Looks like an URI');\n            dispatch(submitURLAsync(url));\n            textRef.current.value = '';\n        } else {\n            console.log('Not a URI');\n            dispatch(showInvalidURLMsg());\n        }\n\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.container}>\n            <form\n                // className={classes.root}\n                onSubmit={submitURL}\n                noValidate\n                autoComplete=\"off\"\n            // style={{ height: \"600px\" }}\n            >\n                <TextField\n                    inputRef={textRef}\n                    className={classes.input}\n                    variant=\"outlined\"\n                    label=\"Enter url of page to save\"\n                    classes={{\n                        root: classes.borderRadiusOverwrite,\n                    }}\n                    InputProps={{\n                        classes: {\n                            root: classes.borderRadiusOverwrite,\n                        }\n                    }}\n                />\n                <Button\n                    className={classes.savebutton}\n                    // startIcon={<SaveIcon />}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={submitURL}\n                >Save</Button>\n            </form>\n        </div>\n    )\n}","import { Typography } from \"@material-ui/core\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link'; // i think maybe use the link from router instead\nimport Archive from \"../archive/Archive\";\nimport SubmissionBar from \"../submissionbar/SubmissionBar\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ProgressDialog from '../progressdialog/ProgressDialog.js';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectSBOpen, closeSB, selectSBMsg, selectSBType } from '../submissionbar/submissionbarSlice';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { selectJustLoggedIn, resetJustLoggedIn } from '../login/LoginSlice';\nimport { useEffect } from 'react';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    dashboardPadding: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        padding: \"24px\",\n        maxWidth: \"1280px\",\n        paddingBottom: \"128px\",\n        [theme.breakpoints.up('sm')]: {\n            padding: '48px',\n            paddingBottom: '128px',\n        }\n    },\n    topSection: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        maxWidth: '340px',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: '0px',\n        }\n\n    },\n}));\nexport default function Dashboard() {\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n    const isSBOpen = useSelector(selectSBOpen);\n    const SBMsg = useSelector(selectSBMsg);\n    const SBMsgType = useSelector(selectSBType);\n    const dispatch = useDispatch();\n\n    let isJustLoggedIn = useSelector(selectJustLoggedIn);\n    useEffect(() => {\n        dispatch(resetJustLoggedIn());\n        console.log('dashboard login resetting');\n    }, isJustLoggedIn);\n    useEffect(() => {\n        console.log('dashboard login mounted');\n    }, []);\n\n    const classes = useStyles();\n\n    const handleClose = (event, reason) => {\n\n        if (reason === 'clickaway') {\n            return;\n        }\n        console.log('trying to close');\n        // setOpen(false);\n        // console.log('type of dispatch: ' + typeof dispatch);\n        // console.log('type of closeSB: ' + typeof closeSB);\n        // console.log('closeSB: ' + closeSB);\n        dispatch(closeSB());\n    };\n\n    return (\n        <div className={classes.dashboardPadding} >\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\n                    <RouterLink to=\"/pagesavepublicsite\">\n                        Home\n                    </RouterLink>\n                </Link>\n                <Link color=\"inherit\"\n                    href=\"/getting-started/installation/\"\n                    color=\"textPrimary\"\n                    aria-current=\"page\"\n                    onClick={handleClick}>\n                    Dashboard\n                </Link>\n            </Breadcrumbs>\n            <div className={classes.topSection} >\n                <Typography\n                    variant=\"body1\"\n                    style={{\n                        marginTop: '32px',\n                    }}\n                >You can have your own personal archive of websites by using the form below.\n                </Typography>\n                <Typography\n                    style={{\n                        marginTop: '48px',\n                    }}\n                    variant=\"body1\"\n                >Enter the url of any website and we will save a copy of it for you.\n                </Typography>\n                <SubmissionBar />\n            </div>\n            <Archive />\n            <Snackbar open={isSBOpen} autoHideDuration={1200} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={SBMsgType}>\n                    {SBMsg}\n                </Alert>\n            </Snackbar>\n            {/* <ProgressDialog /> */}\n\n        </div>\n    );\n}","import './App.css';\n// // import { useSelector, useDispatch } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// // import Archive from './features/archive/Archive';\n// // import Hero from './component/Hero.js';\n// // import Footer from './component/Footer.js';\n// // import ProgressDialog from './features/progressdialog/ProgressDialog.js';\n// // import Snackbar from '@material-ui/core/Snackbar';\n// // import MuiAlert from '@material-ui/lab/Alert';\n// // import video from './resources/Trianglify.webm';\n\n// import { selectSBOpen, closeSB, selectSBMsg, selectSBType } from './features/submissionbar/submissionbarSlice';\n\n// function Alert(props) {\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\n// import NavBar from './component/NavBar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport NavBar from './features/navbar/NavBar';\nimport HomePage from './component/HomePage';\nimport ColumnGrid from './component/ColumnGrid';\nimport Footer from './component/Footer';\nimport Signup from './features/signup/Signup';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Login from './features/login/Login';\nimport NoMatch from './component/NoMatch';\nimport ProgressDialog from './features/progressdialog/ProgressDialog';\n\nimport { Typography } from '@material-ui/core';\nimport Lottie from 'lottie-react';\nimport loadingAnimation from \"./resources/lf30_editor_uekpjvgl.json\";\n\nimport Baseliner from './baseline';\nimport GridBoxes from './component/GridBoxes';\nimport VerifyEmail from './component/VerifyEmail';\nimport { selectIsLoggedIn, selectUsername, selectIsJustLoggedIn } from './features/login/LoginSlice';\nimport { selectIsLoginShown, show, hide } from './features/login/LoginSlice';\nimport Dashboard from './features/dashboard/Dashboard';\nimport React, { useEffect, useContext, createContext, useState } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect,\n    useHistory,\n    useLocation\n} from \"react-router-dom\";\nimport Cookies from 'js-cookie';\n\n/** For more details on\n * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\n * refer to: https://usehooks.com/useAuth/\n */\nconst authContext = createContext();\n\nfunction ProvideAuth({ children }) {\n    const auth = useProvideAuth();\n    return (\n        <authContext.Provider value={auth}>\n            {children}\n        </authContext.Provider>\n    );\n}\n\nfunction useAuth() {\n    return useContext(authContext);\n}\n\nfunction useProvideAuth() {\n    const [user, setUser] = useState(null);\n    // read from selector later\n\n    const signin = cb => {\n        // return fakeAuth.signin(() => {\n        //     setUser(\"user\");\n        //     cb();\n        // });\n    };\n\n    const signout = cb => {\n        // return fakeAuth.signout(() => {\n        //   setUser(null);\n        //   cb();\n        // });\n    };\n\n    return {\n        user,\n        signin,\n        signout\n    };\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n    // let auth = useAuth();\n    // let isLoggedIn = useSelector(selectIsLoggedIn);\n    //this approach not okay because the state is removed on refresh. \n    //Important to keep this in mind when choosing whether to keep in state or localstorage and cookie\n    // should read from cookie instead\n    let isLoggedIn = !!(Cookies.get('email'));\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isLoggedIn ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            // pathname: \"/login\",\n                            // pathname: \"/pagesavepublicsite/signup\",\n                            pathname: \"/pagesavepublicsite\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\n\nfunction App() {\n    let dispatch = useDispatch();\n    let isLoginShown = useSelector(selectIsLoginShown);\n    let isLogoutShown = true;\n\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n                main: \"#333333\",\n            }\n        },\n        typography: {\n            // fontFamily: 'Raleway, Arial',\n            fontFamily: ['Lato', 'sans-serif'],\n            h1: {\n                fontSize: \"48.83px\",\n                lineHeight: \"53.96px\",\n                fontWeight: \"400\",\n            },\n\n            h2: {\n                fontSize: \"39.06px\",\n                lineHeight: \"38.67px\",\n                fontWeight: \"400\",\n            },\n\n            h3: {\n                fontSize: \"31.25px\",\n                lineHeight: \"34.53px\",\n                fontWeight: \"400\",\n            },\n\n            h4: {\n                fontSize: \"25px\",\n                lineHeight: \"31.37px\",\n                fontWeight: \"400\",\n            },\n\n            h5: {\n                fontSize: \"20px\",\n                lineHeight: \"32.9px\",\n                fontWeight: \"400\",\n            },\n\n            body1: {\n                fontSize: \"16px\",\n                lineHeight: \"23.2px\",\n                fontWeight: \"400\",\n            },\n\n            caption: {\n                fontSize: \"12.8px\",\n                lineHeight: \"17.54px\",\n                fontWeight: \"400\",\n            },\n\n            subtitle1: { // my equivalent of minicaption in my design\n                fontSize: \"10.24px\",\n                lineHeight: \"15.82px\",\n                fontWeight: \"400\",\n            },\n            // overrides: {\n            //     MuiCssBaseline: {\n            //         '@global': {\n            //             '@font-face': [raleway],\n            //         },\n            //     },\n            // },\n        },\n    });\n    // let baseliner = new Baseliner(8);\n    //user selector to fetch login status\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    const username = useSelector(selectUsername);\n\n    useEffect(() => {\n        // messaging.requestPermission() // deprecated\n        // https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\n\n\n        //         const registration = await navigator.serviceWorker.ready;\n\n        // const messaging = firebase.messaging();\n\n        // const token = await messaging.getToken({\n        //             serviceWorkerRegistration: registration,\n        //             vapidKey: \"\",\n        //         });\n        //         j\n\n\n    }, []);\n\n    const handleClickOpen = () => {\n        dispatch(show());\n    };\n\n    const handleClose = (value) => {\n        dispatch(hide());\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Router>\n                <CssBaseline />\n                {/* <ColumnGrid offset=\"320px\" columns={12} gutter=\"40px\" /> */}\n                {/* <GridBoxes size={8} /> */}\n                <div style={{\n                    position: \"relative\",\n                    minHeight: '100vh',\n                }}>\n                    <NavBar handleClickOpen={handleClickOpen} isLoggedOn={isLoggedIn} userEmail={username} />\n                    <Login open={isLoginShown} onClose={handleClose} />\n                    <Switch>\n                        <Route path=\"/pagesavepublicsite/signup\">\n                            <Signup />\n                        </Route>\n                        <Route path=\"/pagesavepublicsite/verify\">\n                            <VerifyEmail />\n                        </Route>\n                        <Route exact path=\"/pagesavepublicsite/\">\n                            <HomePage isLoggedOn={isLoggedIn} handleClickOpen={handleClickOpen} />\n                        </Route>\n                        <PrivateRoute exact path=\"/pagesavepublicsite/dashboard\">\n                            <Dashboard />\n                        </PrivateRoute>\n                        <Route path=\"*\">\n                            <NoMatch />\n                        </Route>\n                        {/* for future jump to specific pagesave https://reactrouter.com/web/guides/quick-start/2nd-example-nested-routing */}\n                    </Switch>\n                    <Footer />\n                </div>\n            </Router>\n            <ProgressDialog />\n        </ThemeProvider >\n    );\n}\n\n// function App() {\n//   const isSBOpen = useSelector(selectSBOpen);\n//   const SBMsg = useSelector(selectSBMsg);\n//   const SBMsgType = useSelector(selectSBType);\n//   const dispatch = useDispatch();\n\n//   const handleClose = (event, reason) => {\n\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     console.log('trying to close');\n//     // setOpen(false);\n//     // console.log('type of dispatch: ' + typeof dispatch);\n//     // console.log('type of closeSB: ' + typeof closeSB);\n//     // console.log('closeSB: ' + closeSB);\n//     dispatch(closeSB());\n//   };\n\n//   return (\n//     <>\n//       <CssBaseline />\n//       <Hero />\n//       <div style={{ paddingTop: \"100px\" }}></div>\n//       <Archive />\n//       <Snackbar open={isSBOpen} autoHideDuration={1200} onClose={handleClose}>\n//         <Alert onClose={handleClose} severity={SBMsgType}>\n//           {SBMsg}\n//         </Alert>\n//       </Snackbar>\n//       <ProgressDialog />\n//       <Footer />\n//     </>\n//   );\n// }\n\n\nexport default App;\n","import { put, takeLatest, all, select } from 'redux-saga/effects';\nimport { updateUrls } from './features/progressdialog/progressdialogSlice';\nimport { fetchArchivesAsync } from './features/archive/archiveSlice';\n\nfunction* queueChangesAsync(action) {\n    let state = yield select();\n    console.log('Progress dialog tracking queue changes');\n    console.log('queue changes async curState');\n    console.log(state);\n    console.log('action:');\n    console.log(action);\n    yield put(updateUrls(action.payload));\n    yield put(fetchArchivesAsync());\n}\nfunction* watchQueueChangesAsync() {\n    yield takeLatest('QUEUE_CHANGE', queueChangesAsync);\n}\nexport default function* rootSaga() {\n    yield all([\n        watchQueueChangesAsync(),\n    ]);\n}","import { configureStore } from '@reduxjs/toolkit';\nimport submissionBarReducer from '../features/submissionbar/submissionbarSlice';\nimport loginReducer from '../features/login/LoginSlice';\nimport archiveReducer from '../features/archive/archiveSlice';\nimport signupReducer from '../features/signup/SignupSlice';\nimport progressdialogReducer from '../features/progressdialog/progressdialogSlice';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport { logoutAsync } from '../features/login/LoginSlice';\nimport { combineReducers } from 'redux';\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst combinedReducer = combineReducers({\n  // counter: counterReducer,\n  submissionbar: submissionBarReducer,\n  archive: archiveReducer,\n  progressdialog: progressdialogReducer,\n  login: loginReducer,\n  signup: signupReducer,\n  // navbar: navbarReducer,\n});\n\nconst rootReducer = (state, action) => {\n  console.log(logoutAsync.fulfilled + \"\");\n  console.log(logoutAsync.fulfilled.toString());\n  console.log('compare to:' + action.type);\n  if (action.type === logoutAsync.fulfilled.type) { // check for action type\n    //reset the whole state when logout\n    state = undefined;\n  }\n  return combinedReducer(state, action);\n};\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    [...getDefaultMiddleware(), sagaMiddleware],\n\n\n});\n\nsagaMiddleware.run(rootSaga)\n","import React, { Profiler } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n// import * as serviceWorker from './serviceWorker';\n//no longer using this \n\n// function onRenderCallback(\n//   id, // the \"id\" prop of the Profiler tree that has just committed\n//   phase, // either \"mount\" (if the tree just mounted) or \"update\" (if it re-rendered)\n//   actualDuration, // time spent rendering the committed update\n//   baseDuration, // estimated time to render the entire subtree without memoization\n//   startTime, // when React began rendering this update\n//   commitTime, // when React committed this update\n//   interactions // the Set of interactions belonging to this update\n// ) {\n//   // Aggregate or log render timings...\n//   console.log(id, phase, actualDuration, baseDuration, startTime, commitTime, interactions);\n// }\n(async function () {\n  try {\n    // this will say it is insecure\n    // window.registration = await navigator.serviceWorker.register('./pagesavepublicsite/firebase-messaging-sw.js');\n    // so i had to use this\n    // window.registration = await navigator.serviceWorker.register('./firebase-messaging-sw.js');\n    // have to write full path it seems\n    //TODO: have to edit this later for production site\n\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      window.registration = await navigator.serviceWorker.register('http://localhost:3000/pagesavepublicsite/firebase-messaging-sw.js');\n      // dev code\n    } else {\n      // production code\n      window.registration = await navigator.serviceWorker.register('https://mightbehuman-creator.github.io/pagesavepublicsite/firebase-messaging-sw.js');\n    }\n    console.log('ServiceWorker registration successful with scope: ', window.registration.scope);\n  } catch (err) {\n    console.log('ServiceWorker registration failed: ', err);\n  }\n}());\n\nReactDOM.render(\n  // <React.StrictMode>\n  // <Profiler id=\"Navigation\" onRender={onRenderCallback}>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  // </Profiler>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n// i not using this \n"],"sourceRoot":""}