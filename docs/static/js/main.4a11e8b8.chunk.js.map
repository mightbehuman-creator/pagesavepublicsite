{"version":3,"sources":["component/FAQ.jsx","component/Footer.js","resources/camera_alt.svg","resources/Group 5.svg","resources/Open Doodles.svg","resources/Vector.svg","component/HomePage.jsx","resources/Whoops.svg","component/NoMatch.jsx","resources/Mail-rafiki 1.svg","constants.js","helper/util.js","features/signup/SignupAPI.js","features/signup/SignupSlice.js","features/login/LoginAPI.js","features/login/LoginSlice.js","component/VerifyEmail.js","resources/undraw_empty_street_sfxm 1.svg","services/firebase.js","features/submissionbar/submissionbarAPI.js","features/submissionbar/submissionbarSlice.js","features/archive/archiveAPI.js","features/archive/archiveSlice.js","features/archive/Archive.js","features/submissionbar/SubmissionBar.js","features/dashboard/Dashboard.jsx","features/globalsnackbar/GlobalSnackbarSlice.js","features/globalsnackbar/Globalsnackbar.jsx","resources/iconoir_emoji-sad.svg","features/login/Login.jsx","resources/Group 2.svg","features/navbar/NavBar.jsx","features/progressdialog/progressdialogSlice.js","features/progressdialog/ProgressDialog.js","resources/undraw_quick_chat_re_bit5 1.svg","features/signup/Signup.jsx","App.js","sagas.js","app/store.js","index.js"],"names":["useStyles","makeStyles","theme","topwrapper","padding","accordionswrapper","marginTop","maxWidth","marginLeft","marginRight","paddingBottom","heading","FAQ","classes","React","useState","expanded","setExpanded","className","Typography","variant","style","marginBottom","q","a","map","item","idx","Accordion","onChange","panel","event","isExpanded","AccordionSummary","expandIcon","AccordionDetails","footercontainer","position","bottom","width","display","justifyContent","alignItems","background","breakpoints","up","paddingLeft","paddingRight","paddingTop","footertext","margin","textAlign","color","palette","primary","contrastText","rightTextWrapper","flexDirection","Footer","to","home","containerFirstPage","gridTemplateColumns","firstPage","gridColumn","height","bodytext","readableWidth","readableWidthSmall","secondPageTitle","textTransform","content","top","borderTop","featureIcon","featureContainer","borderRadius","border","featureTitle","featureTitleContainer","featureBigContainer","gap","justifyItems","HomePage","isLoggedOn","handleClickOpen","flexGrow","flexShrink","flexBasis","cn","flex","Button","onClick","Hidden","xsDown","alt","src","doodle","minHeight","icon1","align","icon2","icon3","NoMatch","Cactus","productionURL","ellipsis","str","limit","length","substr","sleep","time","Promise","resolve","reject","setTimeout","cl","s","console","log","getBaseEndPoint","submitSignup","email","pw","axios","post","withCredentials","result","status","success","response","err","signupAsync","createAsyncThunk","rejectWithValue","resp","signupSlice","createSlice","name","initialState","signupstatus","serverDown","reducers","resetExistingAlert","state","action","resetServerDownAlert","setSignupEmail","payload","extraReducers","pending","rejected","fulfilled","selectSignupStatus","signup","selectSignupEmail","actions","login","verified","logout","resendVerifyEmail","loginAsync","logoutAsync","resendVerifyAsync","loginSlice","isShown","isLoggedIn","username","screen","justLoggedIn","resendPending","show","hide","relogin","forgetpw","resetJustLoggedIn","loadUserFromCookie","builder","addCase","Cookies","set","expires","remove","selectLoginScreen","selectIsLoginShown","selectIsLoggedIn","selectUsername","selectJustLoggedIn","selectResendPending","VerifyEmail","signupEmail","useSelector","dispatch","useDispatch","verifyimg","disabled","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","messaging","submitURL","url","submitURLAsync","data","selectSBOpen","submissionbar","snackbarOpen","selectSBMsg","snackbarMsg","selectSBType","snackbarType","submissionbarSlice","closeSB","showInvalidURLMsg","showCustomMsg","fetchArchives","get","turnOnAlert","id","turnOffAlert","registerMessageToken","token","registerMessageTokenAsync","fetchArchivesAsync","fetchArchivesAPI","turnOnAlertAsync","meta","requestId","setPending","turnOffAlertAsync","archiveSlice","archives","alertsetat","title","newAlertString","Date","Number","toString","Notification","body","icon","newPending","newArchives","alerton","nextalertdate","selectArchives","archive","selectStatus","selectPendingAlertId","centering","spacing","archivecontainer","firstArchive","hovertext","hovereffect","overflowY","transition","left","opacity","right","placeItems","gridcontainer","backgroundColor","paper","imgofpage","maxHeight","verticalAlign","objectFit","objectPosition","archiveTitle","fillheight","imgwrapper","SingleArchive","props","isAlertOn","isAlertPending","hasOwnProperty","labelText","d","date","Intl","DateTimeFormat","dateStyle","timeStyle","format","getFriendlyTime","handleChange","registration","window","requestPermission","then","getToken","serviceWorkerRegistration","vapidKey","currentToken","catch","gutterBottom","Link","href","target","rel","Container","Paper","elevation","img0B","img0","img1B","img1","img2B","img2","FormControlLabel","control","Switch","checked","labelPlacement","label","Archive","shallowEqual","reverseArchives","page","setPage","useEffect","ref","replace","replaceFirebaseInvalidCharInKey","on","snapshot","val","type","filter","x","emptyimg","Pagination","e","v","count","Math","ceil","container","borderRadiusOverwrite","savebutton","input","root","SubmissionBar","textRef","createRef","preventDefault","current","value","validUrl","isUri","onSubmit","noValidate","autoComplete","TextField","inputRef","InputProps","Alert","dashboardPadding","topSection","Dashboard","handleClick","info","isSBOpen","SBMsg","SBMsgType","isJustLoggedIn","handleClose","reason","Breadcrumbs","aria-label","aria-current","Snackbar","open","autoHideDuration","onClose","severity","snackbarSlice","alertType","msg","showInfoMsg","dismissMsg","selectSnackbarIsShown","snackbar","selectSnackbarAlertType","selectSnackbarMsg","GlobalSnackbar","changeLoginDialogAlign","inputInternalFieldSetHover","borderColor","fieldsetBorder","roundedBorder","forgetpasswordbtn","fontSize","typography","subtitle1","white","logoutwrapper","validationSchema","yup","required","password","min","forgetPWValidationSchema","Transition","forwardRef","Slide","direction","Login","selectedValue","loginScreen","formik","useFormik","initialValues","values","forgetPWFormik","Dialog","TransitionComponent","aria-labelledby","scrollPaper","handleSubmit","error","touched","Boolean","errors","helperText","FormHelperTextProps","InputLabelProps","startAdornment","InputAdornment","notchedOutline","tophalf","IconButton","bottomhalf","pointerEvents","Box","boxShadow","bgcolor","m","p","fullWidth","inputProps","animationData","loadingAnimation","sadface","pathname","header","zIndex","logo","makeItSquare","alignSelf","withWidth","userEmail","useTheme","aa","location","useLocation","isAtSignUpPage","anchorEl","setAnchorEl","handleLogout","smUp","currentTarget","size","Menu","MenuItem","progressdialogSlice","urlsInProgress","showProgressDialog","closeDialog","updateUrls","newState","Object","entries","link","selectURLInProgress","progressdialog","selectProgressDialogIsShowing","headericon","acsummary","acsummarycontent","lastchild","checkmark","urlcontainer","urlcontainercompleted","dark","overrideaccordionshadowandmargin","urls","wordBreak","whiteSpace","textOverflow","processingQueue","down","body1","transform","downloadProgressIcon","animation","downloadProgressIconStop","ProgressDialog","existingURLs","isProgressDialogVisible","exu","in","mountOnEnter","unmountOnExit","aria-controls","LinearProgress","main","entry","entrywrapper","inputBox","signuppicWrapper","signuppic","btn","confirmpassword","oneOf","Signup","openAlreadySignup","signupPending","signupError","signupDone","PrivateRoute","children","rest","render","from","SimpleDialog","DialogTitle","bootingAnimation","App","isLoginShown","createMuiTheme","fontFamily","h1","lineHeight","fontWeight","h2","h3","h4","h5","caption","setStatus","errorObject","ThemeProvider","basename","CssBaseline","path","exact","queueChangesAsync","watchQueueChangesAsync","rootSaga","select","put","takeLatest","all","sagaMiddleware","createSagaMiddleware","combinedReducer","combineReducers","submissionBarReducer","archiveReducer","progressdialogReducer","loginReducer","signupReducer","snackbarReducer","store","configureStore","reducer","undefined","middleware","getDefaultMiddleware","run","swUrl","process","navigator","serviceWorker","register","scope","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4a11e8b8.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n    topwrapper: {\n        padding: '24px',\n    },\n    accordionswrapper: {\n        marginTop: '24px',\n        maxWidth: \"min(60ch, 1024px)\",\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        paddingBottom: '128px',\n    },\n    heading: {\n\n    },\n\n}));\n\nexport default function FAQ() {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleChange = (panel) => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const faqArray = [\n        {\n            q: 'Why should i bother with this?',\n            a: 'By introducing time intervals between study sessions, you can remember more – even if you spend fewer actual hours studying.',\n        },\n        {\n            q: 'Why spaced repetition ?',\n            a: 'Work involving higher mental functions, such as analysis and synthesis, needs to be spaced out to allow new neural connections to solidify. New learning drives out old learning when insufficient time intervenes.',\n        },\n        {\n            q: 'Isn’t it troublesome?',\n            a: 'All memories fade automatically as a function of time. By revisiting what you read every now and then, you keep the knowledge free and imprint that knowledge into your long term memory. You will get faster and more familiar with the material over time.',\n        },\n        {\n            q: 'Why is my page incomplete?.',\n            a: 'These website uses something call  lazyloading, it will be supported in the future when i have time.',\n        },\n        {\n            q: 'Why save as images?',\n            a: 'There are many occasions when i revisit the old bookmarks that i have and the site is no longer available or the link has moved so i decided to save an image copy of it',\n        },\n        {\n            q: 'Why in different screen sizes?',\n            a: 'To keep the original site which should have  been designed for legibility on each screen sizes.',\n        },\n        {\n            q: 'I dont study no more so this is useless?',\n            a: 'Any kind of information benefits from this kind of spaced practice. There had to be there something you want to remember forever. You can master your topic of interest, be it cooking cleaning or whatsoever.',\n        },\n        {\n            q: 'Grandma story of why i created this app',\n            a: ' Sometimes i chance upon some really useful article or knowledge online, I often bookmark them. But i realise I never really go back to revisit them so i dont end up mastering them.  After some time when i do go back to read the article, the content will seem foreign to me again, and i have to spend time to figure out and understand them again. I was wondering if revisit the content again while the memory is still fresh, it will help cement it in my brain. The idea is that if i revisit the content frequently, it will get ingrained into my long term memory. Each time i read it , i would be more familiar with it and therefore also spending lesser time to understand it. Revision is always faster than when you try to figure out and understand something again. Refreshing my memory to keep the knowledge fresh in my mind.  This will probably help no matter what domain knowledge you are trying to master. I made it for personal use mainly.',\n        },\n    ]\n\n    // i should write a array of qn and answer and map over it\n    return (\n        <div className={classes.topwrapper}>\n            <div className={classes.accordionswrapper}>\n                <Typography variant='h4' style={{\n                    marginBottom: '48px',\n                }}>\n                    Frequently Asked Question\n                </Typography>\n                {faqArray.map((item, idx) => (\n                    <Accordion expanded={expanded === `panel${idx}`} onChange={handleChange(`panel${idx}`)}>\n                        <AccordionSummary\n                            expandIcon={<ExpandMoreIcon />}\n                        // aria-controls=\"panel1bh-content\"\n                        // id=\"panel1bh-header\"\n                        >\n                            <Typography variant='h5' className={classes.heading}>{item.q}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <Typography variant='body1'>{item.a}</Typography>\n                        </AccordionDetails>\n                    </Accordion>\n                ))}\n            </div>\n        </div>\n\n    );\n}","import Typography from '@material-ui/core/Typography';\n// import Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    footercontainer: {\n        position: \"absolute\",\n        bottom: \"0px\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"flex-end\",\n        background: \"#4B6A5E\",\n        padding: \"16px 24px\",\n        [theme.breakpoints.up('sm')]: {\n            paddingLeft: \"64px\",\n            paddingRight: \"64px\",\n            paddingTop: '20px',\n            paddingBottom: '20px',\n            justifyContent: \"flex-end\",\n        },\n    },\n    footertext: {\n        margin: \"auto\",\n        textAlign: \"center\",\n        color: theme.palette.primary.contrastText,\n    },\n    rightTextWrapper: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        [theme.breakpoints.up(\"sm\")]: {\n            flexDirection: \"row\",\n            marginLeft: '16px',\n\n        }\n\n    }\n}));\nexport default function Footer() {\n    const classes = useStyles();\n    return (\n        <footer className={classes.footercontainer}>\n            <div>\n                <Link to='/faq'>\n                    <Typography className={classes.footertext} variant=\"subtitle1\">\n                        FAQ\n                    </Typography>\n                </Link>\n            </div>\n            <div className={classes.rightTextWrapper}>\n                <Typography className={classes.footertext} variant=\"subtitle1\">\n                    © Page Saver 2021.\n                </Typography>\n                <Typography className={classes.footertext} variant=\"subtitle1\">\n                    We love our users!\n                </Typography>\n            </div>\n        </footer >\n    );\n}","export default __webpack_public_path__ + \"static/media/camera_alt.db87bc3e.svg\";","export default __webpack_public_path__ + \"static/media/Group 5.bea81fa9.svg\";","export default __webpack_public_path__ + \"static/media/Open Doodles.0a036ee3.svg\";","export default __webpack_public_path__ + \"static/media/Vector.f29b0f2f.svg\";","import Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport cn from 'classnames';\nimport { Link } from \"react-router-dom\";\nimport icon3 from '../resources/camera_alt.svg';\nimport icon1 from '../resources/Group 5.svg';\nimport doodle from '../resources/Open Doodles.svg';\nimport icon2 from '../resources/Vector.svg';\n\nconst useStyles = makeStyles((theme) => ({\n    home: {\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    containerFirstPage: {\n        display: \"grid\",\n        justifyContent: \"center\",\n        gridTemplateColumns: \"1fr auto 1fr\",\n    },\n    firstPage: {\n        gridColumn: \"2/3\",\n        height: \"100vh\",\n        maxWidth: \"1280px\",\n        // height: \"calc(100vh - 128px)\",\n        // marginTop: \"128px\",\n        padding: \"24px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n    bodytext: {\n        marginTop: \"40px\",\n    },\n    readableWidth: {\n        width: \"min(50ch,90%)\",\n    },\n    readableWidthSmall: {\n        width: \"min(40ch,90%)\",\n    },\n    secondPageTitle: {\n        marginTop: \"48px\",\n        color: \"#fff\",\n        textTransform: \"uppercase\",\n        position: \"relative\",\n        '&::before': {\n            content: '\"\"',\n            top: \"-4px\",\n            display: 'block',\n            width: \"4ch\",\n            borderTop: \"4px solid white\",\n            position: \"absolute\",\n        }\n    },\n    featureIcon: {\n        width: \"48px\",\n    },\n    featureContainer: {\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: \"32px 16px\",\n        background: \"#fff\",\n        borderRadius: \"20px\",\n        border: \"4px solid #4B6A5E\",\n    },\n    featureTitle: {\n        color: \"#4b6a5e\",\n    },\n    featureTitleContainer: {\n        margin: 'auto',\n        width: \"min(1280px,100%)\",\n    },\n    featureBigContainer: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"min(1280px,100%)\",\n        paddingBottom: \"128px\",\n        marginTop: \"48px\",\n        '& > div + div': {\n            marginTop: \"16px\",\n        },\n        [theme.breakpoints.up('sm')]: {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(3, 1fr)\",\n            gap: \"40px\",\n            justifyItems: \"center\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n        },\n    }\n\n}));\n\nfunction HomePage({ isLoggedOn, handleClickOpen }) {\n    const classes = useStyles();\n\n    return (\n        <main className={classes.home} >\n            <div className={classes.containerFirstPage}>\n                <div className={classes.firstPage}>\n                    <div style={{ flexGrow: \"1\", flexShrink: \"1\", flexBasis: \"50%\" }}>\n                        <Typography variant=\"h4\">\n                            Remember more of what you learn\n                        </Typography>\n                        <Typography variant=\"body1\" className={cn(classes.bodytext, classes.readableWidth)}>\n                            We send you reminders to revisit what you learn every now and then. Using a scientifically proven schedule, we help you imprint knowledge into your long term memory.\n                        </Typography>\n                        {/* <Hidden smUp> */}\n                        {!isLoggedOn &&\n                            <div style={{ flex: \"display\", marginTop: \"24px\" }}>\n                                <Button variant=\"contained\" color=\"primary\">\n                                    <Link to=\"/signup\">Sign up</Link>\n                                </Button>\n                                <Button variant=\"outlined\" style={{ marginLeft: \"16px\" }} onClick={handleClickOpen}>\n                                    Login\n                                </Button>\n                            </div>\n                        }\n                        {isLoggedOn &&\n                            <div style={{ flex: \"display\", marginTop: \"24px\" }}>\n                                <Button variant=\"contained\" color=\"primary\">\n                                    <Link to=\"/dashboard\">\n                                        View Dashboard\n                                    </Link>\n                                </Button>\n                            </div>\n                        }\n                        {/* </Hidden> */}\n                    </div>\n                    <Hidden xsDown>\n                        <div style={{ flexGrow: \"1\", flexShrink: \"1\", flexBasis: \"50%\" }}>\n                            <img alt='doodle' src={doodle} style={{ width: \"min(100%, 500px)\" }} />\n                        </div>\n                    </Hidden>\n                </div>\n            </div>\n            {/* second page */}\n            <div style={{ background: \"#333\", paddingLeft: \"24px\", paddingRight: \"24px\", minHeight: \"100vh\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", }}>\n                <div className={classes.featureTitleContainer}>\n                    <Typography\n                        variant=\"h4\"\n                        className={classes.secondPageTitle}\n                    >\n                        what <span style={{ color: \"#add495\" }}>Pagesaver</span> does for you\n                    </Typography>\n                </div>\n                <div className={classes.featureBigContainer}\n                >\n\n                    <div className={classes.featureContainer}>\n                        <img alt='' src={icon1} className={classes.featureIcon} />\n                        <Typography variant=\"h5\" className={classes.featureTitle} align=\"center\">\n                            Exponential Reminder\n                        </Typography>\n                        <Typography variant=\"body1\" className={classes.readableWidthSmall} align=\"center\" style={{ marginTop: \"32px\" }}>\n                            You would be reminded at 1, 2, 4, 8, and so on days apart on a exponential increasing schedule to revisit the topic again.\n                        </Typography>\n                    </div>\n                    <div className={classes.featureContainer}>\n                        <img alt='' src={icon2} className={classes.featureIcon} />\n                        <Typography variant=\"h5\" className={classes.featureTitle} align=\"center\">\n                            Scientific way of retaining knowledge\n                        </Typography>\n                        <Typography variant=\"body1\" className={classes.readableWidthSmall} align=\"center\" style={{ marginTop: \"32px\" }}>\n                            Spaced repetition is a scientific way to move what you learn into your long term memory,\n                        </Typography>\n                    </div>\n\n                    <div className={classes.featureContainer}>\n                        <img alt='' src={icon3} className={classes.featureIcon} />\n                        <Typography variant=\"h5\" className={classes.featureTitle} align=\"center\" >\n                            Snapshot In Time\n                        </Typography>\n                        <Typography\n                            align=\"center\"\n                            variant=\"body1\"\n                            style={{ marginTop: \"32px\" }}\n                            className={classes.readableWidthSmall}>\n                            A snapshot of the website would be taken and stored so even if the website goes down or become defunct later, you still can view a copy of the website at the moment you save it.\n                        </Typography>\n                    </div>\n                </div>\n            </div >\n\n        </main >\n    )\n}\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/Whoops.3f3baf32.svg\";","import { Typography } from \"@material-ui/core\";\nimport Cactus from '../resources/Whoops.svg';\n\nfunction NoMatch() {\n    return (\n        <div style={{\n            padding: '48px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n        }}>\n            <Typography variant='h3' align='center'>\n                Error 404\n            </Typography>\n            <Typography variant='body1' align='center'>\n                You reached somewhere inaccessible!\n            </Typography>\n            <img\n                src={Cactus}\n                alt=''\n                style={{\n                    marginTop: '16px',\n                    height: '240px',\n                }} />\n        </div>\n\n    );\n}\n\nexport default NoMatch;","export default __webpack_public_path__ + \"static/media/Mail-rafiki 1.98d1a41d.svg\";","export const productionURL = \"https://pagesave.herokuapp.com\";\n// export const localURL = 'http://localhost:5000';\nexport const localURL = 'https://localhost:5000';","import { localURL, productionURL } from '../constants.js'\nexport function ellipsis(str, limit) {\n    if (str.length < limit) return str;\n    else return str.substr(0, limit) + \"…\";\n}\n\nexport async function sleep(time) {\n    return new Promise((resolve, reject) => {\n        setTimeout(resolve, time);\n    });\n}\n\n// const DEBUG = false;\nconst DEBUG = true;\nexport function cl(s) {\n    if (DEBUG === true)\n        console.log(s);\n}\nexport function getPageSaveBaseEndPoint() {\n    let endpoint = '';\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n        endpoint = localURL + '/pagesave';\n        // dev code\n    } else {\n        // production code\n        endpoint = productionURL + '/pagesave';\n    }\n    return endpoint;\n}\nexport function getFriendlyTime(d) {\n    cl('before get friendlyTime' + d);\n    if (!d) return 'undefined date';\n    const date = new Date(d);\n    // const month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    // return `${date.getDate()} ${month[date.getMonth()]}, ${date.getHours()}:${date.getMinutes()} `;\n    let result = (new Intl.DateTimeFormat('en-US', { dateStyle: 'medium', timeStyle: 'short' }).format(date));\n    cl('after get friendlyTime' + result);\n    //     before get friendlyTimenull util.js:25\n    // after get friendlyTimeDec 31, 1969, 4:00 PM\n    // this shows if its null it will return that odd date\n    return result;\n}\nexport function getBaseEndPoint() {\n    let endpoint = '';\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n        endpoint = localURL;\n        // dev code\n    } else {\n        // production code\n        endpoint = productionURL;\n    }\n    return endpoint;\n}\nexport function replaceFirebaseInvalidCharInKey(email) {\n    // https://stackoverflow.com/questions/31904123/good-way-to-replace-invalid-characters-in-firebase-keys\n    return email.replace(/\\./g, ','); // replaces all dots\n}","import axios from 'axios';\nimport { getBaseEndPoint, cl } from '../../helper/util';\nexport async function submitSignup(email, pw) {\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/users/signup',\n            {\n                email: email,\n                pw: pw,\n            }, { withCredentials: true });\n        cl('normal');\n        cl(result.status);\n        // get the new user cookie\n        // // cl('success cookie');\n        // // cl(JSON.stringify(result.headers));\n        // // cl('docum');\n        // cl(JSON.stringify(document.cookie));\n        //cookie already auto set\n        return {\n            success: true,\n            email: email,\n        };\n    } catch (e) {\n        cl('some stuff detected');\n\n        cl(e.response.status);\n        if (e.response.status === 409) {\n            cl('user already exist');\n            return {\n                success: false,\n                err: 'user already exist',\n\n            };\n        } else { // other code means error\n            cl('some server error, try again alter');\n            return {\n                success: false,\n                err: 'Try again later',\n\n            };\n        }\n        // if it is 409 means user exist\n        //otherwise try again later\n    }\n\n\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { submitSignup } from './SignupAPI';\nimport { cl } from '../../helper/util';\n\nconst initialState = {\n    signupstatus: 'idle',\n    serverDown: false,\n    email: '',\n};\n\nexport const signupAsync = createAsyncThunk(\n    'signup/signup',\n    async ({ email, pw }, { rejectWithValue }) => {\n        // async ({ email, pw }, thunkAPI) => {\n        const resp = await submitSignup(email, pw);\n        cl('check here');\n        cl(resp);\n        if (!resp.success) {\n            cl('rejecting');\n            return rejectWithValue(resp.err);\n        }\n\n        cl('success somehow');\n        return resp;\n\n    }\n);\n\n\nexport const signupSlice = createSlice({\n    name: 'signup',\n    initialState,\n    reducers: {\n        // cl(current(state));\n        // https://redux-toolkit.js.org/api/createReducer#logging-draft-state-values\n        resetExistingAlert: (state, action) => {\n            state.signupstatus = 'idle'\n        },\n        resetServerDownAlert: (state, action) => {\n            state.serverDown = false;\n        },\n        setSignupEmail: (state, action) => {\n            state.email = action.payload;\n        },\n    },\n    extraReducers: {\n        [signupAsync.pending]: (state, action) => {\n            state.signupstatus = 'pending';\n        },\n        [signupAsync.rejected]: (state, action) => {\n            if (action.payload === 'user already exist')\n                state.signupstatus = 'existing';\n            else\n                state.signupstatus = 'error';\n        },\n        [signupAsync.fulfilled]: (state, action) => {\n            state.signupstatus = 'done';\n            state.email = action.payload.email; // this is required in the verification page to know which email\n            // Cookies.set('email', action.payload.email, { expires: 7000 });\n            // cl('setting the email cookie for subsequent auth');\n            // now we no longer logged the person in when signed up, need verify\n            // i think i need the other place to listen to this action so that it would redirect to home screen\n\n        }\n    }\n\n});\n\nexport const selectSignupStatus = (state) => (state.signup.signupstatus);\nexport const selectSignupEmail = (state) => (state.signup.email);\nexport const { resetExistingAlert, resetServerDownAlert, setSignupEmail } = signupSlice.actions;\nexport default signupSlice.reducer;","import axios from 'axios';\nimport { getBaseEndPoint, cl } from '../../helper/util';\n\nexport async function login(email, pw) {\n    cl('axios submitting:' + email + ' ,' + pw);\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/users/login',\n            {\n                email: email,\n                pw: pw,\n            },\n            {\n                withCredentials: true,\n            }\n        );\n        cl('logging in axios');\n        cl(result.status);\n        if (result.status === 200) {\n            return {\n                success: true,\n                email: email,\n                verified: true,\n            };\n        }\n\n        if (result.status === 202) {\n            return {\n                success: true,\n                email: email,\n                verified: false,\n            };\n        }\n    } catch (e) {\n        cl('some stuff detected');\n\n        cl(e.response.status);\n        if (e.response.status === 403) {\n            cl('incorrect credentials');\n            return {\n                success: false,\n                err: 'incorrect credentials',\n\n            };\n        } else { // other code means error\n            cl('login faileddue to some other');\n            return {\n                success: false,\n                err: 'Try again later',\n\n            };\n        }\n    }\n}\n\nexport async function logout(email, pw) {\n    cl('axios logout submitting:' + email + ' ,' + pw);\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/users/logout',\n            {\n                // email: email, // dont need to submit anything i think\n                // pw: pw,\n            }, { withCredentials: true });\n        cl('logging out axios');\n        cl(result.status);\n        return {\n            success: true,\n        };\n    } catch (e) {\n        cl('some stuff detected');\n\n        cl(e.response.status);\n        if (e.response.status === 403) {\n            cl('incorrect credentials');\n            return {\n                success: false,\n                err: 'incorrect credentials',\n            };\n        } else { // other code means error\n            cl('logout failed due to some other');\n            return {\n                success: false,\n                err: 'Try again later',\n            };\n        }\n    }\n}\nexport async function resendVerifyEmail(email) {\n    cl('axios resend verify emailsubmitting:' + email);\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/users/reverify',\n            {\n                email: email, // dont need to submit anything i think\n                // pw: pw,\n            }, { withCredentials: true });\n        cl('reverify email axios');\n        cl(result.status);\n        return {\n            success: true,\n        };\n    } catch (e) {\n        cl('some stuff detected');\n\n        cl(e.response.status);\n        if (e.response.status === 403) {\n            cl('incorrect credentials');\n            return {\n                success: false,\n                err: 'incorrect credentials',\n            };\n        } else { // other code means error\n            cl('logout failed due to some other');\n            return {\n                success: false,\n                err: 'Try again later',\n            };\n        }\n    }\n}","\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport Cookies from 'js-cookie';\nimport { sleep } from '../../helper/util';\nimport { signupAsync } from '../signup/SignupSlice';\nimport { login, logout, resendVerifyEmail } from './LoginAPI';\nimport { cl } from '../../helper/util';\n\n\nconst initialState = {\n    isShown: false,\n    isLoggedIn: false,\n    username: '',\n    screen: 'home',\n    // screen: 'verifyemailpls',\n    justLoggedIn: false,\n    resendPending: false,\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const loginAsync = createAsyncThunk(\n    'login/login',\n    async ({ email, pw }, { rejectWithValue }) => {\n        await sleep(500); // add for animatin purposes\n        const resp = await login(email, pw);\n        // The value we return becomes the `fulfilled` action payload\n        cl(resp);\n        if (!resp.success) {\n            cl('reject');\n            return rejectWithValue(resp.err);\n        }\n\n        cl('success logging');\n        return resp;\n    }\n);\n\n\nexport const logoutAsync = createAsyncThunk(\n    'login/logout',\n    async (email, pw) => {\n        await sleep(500); // add for animation purposes\n        const response = await logout(email, pw);\n        // The value we return becomes the `fulfilled` action payload\n        return response;\n    }\n);\n\nexport const resendVerifyAsync = createAsyncThunk(\n    'login/resendVerify',\n    async (email, pw) => {\n        const response = await resendVerifyEmail(email, pw);\n        // The value we return becomes the `fulfilled` action payload\n        return response;\n    }\n);\n// export const incrementIfOdd = (amount) => (dispatch, getState) => {\n//   const currentValue = selectCount(getState());\n// dispatch(incrementByAmount(amount));\n// };\n\nexport const loginSlice = createSlice({\n    name: 'login',\n    initialState,\n    reducers: {\n        show: (state, action) => {\n            state.isShown = true;\n        },\n        hide: (state, action) => {\n            state.isShown = false;\n        },\n        // logout: (state) => {\n        //     state.isLoggedIn = false;\n        //     state.screen = 'home';\n        //     // maybe need to change this to be async since we need to remove cookies\n        //     //add the same animation as logging in\n        // },\n        relogin: (state, action) => {\n            state.screen = 'home';\n        },\n        forgetpw: (state) => {\n            state.screen = 'forget';\n        },\n        resetJustLoggedIn: (state, action) => {\n            state.justLoggedIn = false;\n        },\n        loadUserFromCookie: (state, action) => {\n            let email = action.payload.email; // there is login.username and signup.email state they are different\n            if (typeof email !== 'undefined') {\n                state.isLoggedIn = true;\n                state.username = email;\n            }\n\n        },\n    },\n    // The `extraReducers` field lets the slice handle actions defined elsewhere,\n    // including actions generated by createAsyncThunk or in other slices.\n    extraReducers: (builder) => {\n        builder\n            .addCase(loginAsync.pending, (state, action) => {\n                state.screen = 'logging in';\n            })\n            .addCase(loginAsync.fulfilled, (state, action) => {\n                let payload = action.payload;\n                if (!payload.verified) {\n                    state.screen = 'verifyemailpls';\n                } else {\n                    state.screen = 'home';\n                    state.isLoggedIn += payload.success;\n                    state.username = payload.email;\n                    // this for temporrary login\n                    // record in cookie for persistent over session and reopening, and refreshes\n                    Cookies.set('email', action.payload.email, { expires: 7000 });\n                    // Cookies.set('test', action.payload.email, { expires: 7000 });\n                    // document.cookie = \"name=oeschger; jack=hello; \";\n                    //it is set for port 5000 for some reason\n                    // this cookie is set for :5000 but why\n                    // think maybe need dispatch another action thats why i need redux saga?\n                    //dispatch another action to close the login bar\n                    state.isShown = false;\n                    //TODO: maybe save credential into cookie or something so that it can be easily filled?\n                    //redirect to dashboard?\n                    state.justLoggedIn = true;\n\n                }\n            })\n            .addCase(loginAsync.rejected, (state, action) => {\n                state.screen = 'invalid'; //\n                // let payload = action.payload;\n                cl('login fail due to');\n                cl(action.payload);\n                if (action.payload && (action.payload.err === 'incorrect credentials')) {\n\n                } else {\n                    // server error\n                    //TODO:\n                }\n\n            })\n            .addCase(logoutAsync.pending, (state, action) => {\n                state.screen = 'logging out';\n            })\n            .addCase(logoutAsync.fulfilled, (state, action) => {\n                state.screen = 'home';\n                state.isLoggedIn = false;\n                state.username = '';\n                //TODO: redirect to home page? but rendering a Redirect component seems weird\n                // i think have to reset the state too\n                // figure out maybe move the redirect to top level or something\n                //TODO: i think may have to manually clear the session cookie since the destroy on the server side does not do it\n                //clear the cookie\n                Cookies.remove('email');\n                Cookies.remove('heav');// sesion id \n            })\n            .addCase(logoutAsync.rejected, (state, action) => {\n                // need indicate some error\n                // state.screen = 'home';\n                // let payload = action.payload;\n                // figure out this part\n\n            })\n            .addCase(signupAsync.fulfilled, (state, action) => {\n                // state.isLoggedIn = true;\n                // state.username = action.payload.email;\n            })\n            .addCase(resendVerifyAsync.pending, (state, action) => {\n                state.resendPending = true;\n            })\n            .addCase(resendVerifyAsync.rejected, (state, action) => {\n                state.resendPending = false;\n            })\n            .addCase(resendVerifyAsync.fulfilled, (state, action) => {\n                //display a toast?\n                //might needto add a timeout, to prevent spam\n                state.resendPending = false;\n            });\n        // think need add rejected\n    },\n});\n\nexport const selectLoginScreen = (state) => state.login.screen;\nexport const selectIsLoginShown = (state) => state.login.isShown;\nexport const selectIsLoggedIn = (state) => state.login.isLoggedIn;\nexport const selectUsername = (state) => state.login.username;\nexport const selectJustLoggedIn = (state) => state.login.justLoggedIn;\nexport const selectResendPending = (state) => state.login.resendPending;\n\nexport const { resetJustLoggedIn, loadUserFromCookie, relogin, forgetpw, show, hide } = loginSlice.actions;\n\nexport default loginSlice.reducer;\n","import { Button, Typography } from \"@material-ui/core\";\nimport verifyimg from '../resources/Mail-rafiki 1.svg';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectSignupEmail } from '../features/signup/SignupSlice';\nimport { resendVerifyAsync, selectResendPending } from '../features/login/LoginSlice';\n\nfunction VerifyEmail() {\n    const signupEmail = useSelector(selectSignupEmail);\n    const dispatch = useDispatch();\n    let resendPending = useSelector(selectResendPending);\n\n    return (\n        <div style={{\n            paddingTop: \"128px\",\n            display: \"flex\",\n            flexDirection: 'column',\n            alignItems: 'center',\n            paddingLeft: \"24px\",\n            paddingRight: \"24px\",\n            paddingBottom: \"128px\",\n            minHeight: \"100vh\",\n        }}>\n            <Typography variant=\"h5\" style={{ marginTop: \"48px\", }} align=\"center\">\n                Verify Your Email\n            </Typography>\n            <Typography variant=\"caption\" align=\"center\" style={{ marginTop: \"4px\" }}>\n                You will need to verify your email to complete registration.\n            </Typography>\n            <img alt='' src={verifyimg} style={{ width: \"256px\", marginTop: \"8px\" }} />\n            <Typography variant=\"caption\" align=\"center\" style={{ color: \"#828282\", maxWidth: \"50ch\", }} >\n                An email has been sent to {signupEmail} with a link to verify your account. If you have not received the email after a few minutes, please check your spam folder\n            </Typography>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ marginTop: \"16px\" }}\n                disabled={resendPending}\n                onClick={() => { dispatch(resendVerifyAsync(signupEmail)) }}\n            >\n                {resendPending ? \" Resending...\" : \"Resend email\"}\n            </Button>\n        </div>\n    );\n}\nexport default VerifyEmail;","export default __webpack_public_path__ + \"static/media/undraw_empty_street_sfxm 1.b6570731.svg\";","// import firebase from \"firebase\";\nimport firebase from 'firebase/app';\nimport 'firebase/database'; // If using Firebase database\nimport 'firebase/messaging';  // If using Firebase storage\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCTKDCCVasMozc94FO9WexvvBkvHaXrn-w\",\n    authDomain: \"page-save.firebaseapp.com\",\n    databaseURL: \"https://page-save-default-rtdb.asia-southeast1.firebasedatabase.app\",\n    projectId: \"page-save\",\n    storageBucket: \"page-save.appspot.com\",\n    messagingSenderId: \"191537973535\",\n    appId: \"1:191537973535:web:e9521da8ba973166a8082a\",\n    measurementId: \"G-HX28BXHXWD\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const db = firebase.database();\nexport const messaging = firebase.messaging();","import axios from 'axios';\nimport { getBaseEndPoint, cl } from '../../helper/util';\nexport async function submitURL(url) {\n    cl('submitting new archive');\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/pagesave',\n            {\n                url: url,\n            },\n            {\n                withCredentials: true,\n            }\n        );\n        cl(result.status);\n        return {\n            success: true,\n        };\n    } catch (e) {\n        cl('submitting new archive fail')\n        cl(e.response.status);\n        if (e.response.status === 403) {\n\n        }\n    }\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { submitURL } from './submissionbarAPI.js';\nimport { cl } from '../../helper/util';\n\nconst initialState = {\n    status: 'idle',\n    snackbarOpen: false,\n    snackbarMsg: '',\n    snackbarType: 'error',\n}\n\nexport const submitURLAsync = createAsyncThunk(\n    'submissionbar/submitURL',\n    async (url) => {\n        cl(`trying to submit async ${url}`);\n        const response = await submitURL(url);\n        return response.data;\n    }\n)\n\n\nexport const selectSBOpen = (state) => state.submissionbar.snackbarOpen;\nexport const selectSBMsg = (state) => state.submissionbar.snackbarMsg;\nexport const selectSBType = (state) => state.submissionbar.snackbarType;\n\nexport const submissionbarSlice = createSlice({\n    name: 'submissionbar',\n    initialState,\n    reducers: {\n        closeSB: (state) => {\n            state.snackbarOpen = false;\n        },\n        showInvalidURLMsg: (state) => {\n            state.snackbarOpen = true;\n            state.snackbarMsg = 'Url is invalid';\n            state.snackbarType = 'error';\n        },\n        showCustomMsg: (state, action) => {\n            state.snackbarOpen = true;\n            state.snackbarMsg = action.payload;\n            state.snackbarType = 'error';\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(submitURLAsync.pending, (state) => {\n                state.status = 'submitting';\n            })\n            .addCase(submitURLAsync.fulfilled, (state, action) => {\n                state.status = 'idle';\n                // state.value += action.payload;\n                state.snackbarOpen = true;\n                // clear the \n                state.snackbarMsg = 'Url submitted';\n                state.snackbarType = 'success';\n            });\n\n    },\n});\n\nexport const { closeSB, showInvalidURLMsg, showCustomMsg } = submissionbarSlice.actions;\n\nexport default submissionbarSlice.reducer;","import axios from 'axios';\nimport { getBaseEndPoint, cl } from '../../helper/util';\n\nexport async function fetchArchives() {\n    let result;\n    try {\n        result = await axios.get(getBaseEndPoint() + '/pagesave',\n            {\n                withCredentials: true,\n            });\n        cl('fetching archive in axios');\n        cl(result.data); // this is an array\n        cl(result.status);\n        //TODO: refactor this to unpack it here instead of bubbling it thorugh so many steps\n        return result;\n    } catch (e) {\n        cl('fetchin archive some error');\n\n        cl(e.response.status);\n        if (e.response.status === 403) {\n\n\n        }\n    }\n}\n\nexport async function turnOnAlert(id) {\n    let result;\n    cl('id to be used for turning on: ' + id);\n    try {\n        result = await axios.post(getBaseEndPoint() + '/pagesave/turnonalert',\n            {\n                id: id\n            },\n            {\n                withCredentials: true,\n            });\n        cl('Turning on alert');\n        cl(result.data);\n        cl(result.status);\n        cl('whats here');\n        //proper status is 200 TODO: edit these later\n        return {\n            // success: true,\n            // alertsetat, ...result.data,\n            ...result.data,\n            id\n        }\n        //TODO: refactor this to unpack it here instead of bubbling it thorugh so many steps\n    } catch (e) {\n        cl('turn on alert fail');\n        cl(e);\n        cl(e.response.status);\n        if (e.response.status === 403) {\n\n\n        }\n    }\n\n}\n\nexport async function turnOffAlert(id) {\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/pagesave/turnoffalert',\n            {\n                id: id\n            },\n            {\n                withCredentials: true,\n            });\n        cl('Turning off alert');\n        cl(result.data);\n        cl(result.status);\n        //TODO: refactor this to unpack it here instead of bubbling it thorugh so many steps\n        return id;\n    } catch (e) {\n        cl('turn off alert fail');\n\n        cl(e);\n        cl(e.response.status);\n        if (e.response.status === 403) {\n\n\n        }\n    }\n}\n\n\nexport async function registerMessageToken(token) {\n    let result;\n    try {\n        result = await axios.post(getBaseEndPoint() + '/pagesave/registertoken',\n            {\n                token,\n            },\n            {\n                withCredentials: true,\n            });\n        cl('Registering token');\n        cl(result.data);\n        cl(result.status);\n        //TODO: refactor this to unpack it here instead of bubbling it thorugh so many steps\n        return true;\n    } catch (e) {\n        cl('Registering token failed');\n\n        cl(e);\n        cl(e.response.status);\n        if (e.response.status === 403) {\n\n\n        }\n        return false;\n    }\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchArchives as fetchArchivesAPI, registerMessageToken, turnOffAlert, turnOnAlert } from './archiveAPI';\nimport { cl } from '../../helper/util';\n\nconst initialState = {\n    archives: [],\n    status: 'loading',\n    pending: {\n\n    },\n};\n\n\nexport const registerMessageTokenAsync = createAsyncThunk(\n    'archive/registerMessageToken',\n    async (token) => {\n        const response = await registerMessageToken(token);\n        return response;\n    }\n);\n\nexport const fetchArchivesAsync = createAsyncThunk(\n    'archive/fetchArchives',\n    async () => {\n        const response = await fetchArchivesAPI();\n        return response.data;\n    }\n);\n\nexport const turnOnAlertAsync = createAsyncThunk(\n    'archive/turnOnAlert',\n    async (id, meta) => {\n        cl(`id received: ${id}`)\n        cl(`request id ${meta.requestId}`);\n        // meta.dispatch() and meta.getState() , we can do something\n        cl(meta);\n        meta.dispatch(setPending(id));\n        const response = await turnOnAlert(id);\n        cl('response here:');\n        cl(response);\n        return response;\n    }\n);\nexport const turnOffAlertAsync = createAsyncThunk(\n    'archive/turnOffAlert',\n    async (id, meta) => {\n        cl(`id received: ${id}`)\n        meta.dispatch(setPending(id));\n        const response = await turnOffAlert(id);\n        return response;\n    }\n);\nexport const archiveSlice = createSlice({\n    name: 'archive',\n    initialState,\n    reducers: {\n        setPending: (state, action) => {\n            cl(action.payload);\n            return {\n                ...state,\n                pending: {\n                    ...state.pending,\n                    [action.payload]: true,\n                },\n            }\n\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchArchivesAsync.pending, (state) => {\n                // state.status = 'loading';\n            })\n            .addCase(fetchArchivesAsync.fulfilled, (state, action) => {\n                state.status = 'idle';\n                state.archives = action.payload || [];\n            })\n            .addCase(turnOnAlertAsync.pending, (state, action) => {\n                cl('turning on alertpending');\n            })\n            .addCase(turnOnAlertAsync.fulfilled, (state, action) => {\n                // TODO: maybe i should receive the next date to display instead of calculating locally\n                cl('turning on alert complete');\n                cl(action);\n                cl(`payload: ${action.payload}`);\n                // in success case  pyaload contains \n                // {\n                //     success:true,\n                //     alertsetat: somenumber,\n                //     id: id\n                // }\n                const { id, alertsetat, title } = action.payload;\n                cl(`alertsetat: ${alertsetat}`);\n                cl(`id to remove from pending from turning on: ${id}`);\n                let newAlertString = (new Date(Number(alertsetat))).toString();\n                cl('new alert string');\n                cl(newAlertString);\n                new Notification('The next notification will be 1 day later', {\n                    body: `Reminder for ${title}`,\n                    icon: 'https://mightbehuman-creator.github.io/pagesavepublicsite/android-chrome-192x192.png',\n\n                });\n\n                // messaging.onMessage((payload) => {\n                //     cl('Message received. ', payload);\n                //     // Update the UI to include the received message.\n                //     // var n = new Notification('My Great Song');\n                //     cl(payload);\n                //     // const title = payload.notification.title;\n                //     // const body = payload.notification.body;\n                //     // const notification = new Notification(title, {\n                //     //     body: body,\n                //     //     icon: 'https://mightbehuman-creator.github.io/pagesavepublicsite/android-chrome-192x192.png',\n                //     //     vibrate: true\n                //     // });\n                //     const n  = new Notification('The next notification will be 1 day later',{\n                //         body: body,\n                //         icon: 'https://mightbehuman-creator.github.io/pagesavepublicsite/android-chrome-192x192.png',\n\n                //     });\n                // });\n\n                // reading the current state\n                // const { archives: __, pending: _a } = state;\n                // const { [id]: _, ...rest } = state.pending;\n                const newPending = { ...state.pending };\n                delete newPending[id];\n                const newArchives = state.archives.map((item, idx) => {\n                    if (item.id === id) {\n                        cl('found match at index:' + idx);\n                        return {\n                            ...item,\n                            alerton: true,\n                            nextalertdate: newAlertString,\n                        }\n                    }\n                    return item;\n                });\n                return {\n                    ...state,\n                    // pending: {\n                    //     ...rest,\n                    // },\n                    pending: newPending,\n                    archives: newArchives,\n                };\n            })\n            .addCase(turnOffAlertAsync.pending, (state, action) => {\n                cl('turning off alertpending');\n                // cl(action.payload);\n                // return {\n                //     ...state,\n                //     [state.pending]: {\n                //         ...state.pending,\n                //         [action.payload]: true,\n                //     },\n                // }\n            })\n            .addCase(turnOffAlertAsync.fulfilled, (state, action) => {\n                cl('turning off alert complete');\n                cl(action);\n                cl(`payload: ${action.payload}`);\n\n                let id = action.payload;\n                // const { [id]: _x, ...rest } = state.pending;\n                cl(`id to remove from pending in turning off: ${id}`);\n                const newPending = { ...state.pending };\n                delete newPending[id];\n\n                const newArchives = state.archives.map((item, idx) => {\n                    if (item.id === id) {\n                        cl('match at idx:' + idx);\n                        return {\n                            ...item,\n                            alerton: false,\n                        }\n                    }\n                    return item;\n                });\n                return {\n                    ...state,\n                    // pending: {\n                    //     ...rest,\n                    // },\n                    pending: newPending,\n                    archives: newArchives,\n                };\n            })\n            .addCase(registerMessageTokenAsync.pending, (state, action) => {\n                //TODO: i should add some management if registering token failed so dont allow alerts\n            })\n            .addCase(registerMessageTokenAsync.fulfilled, (state, action) => {\n                //TODO: i should add some management if registering token failed so dont allow alerts\n            })\n    }\n});\n\n\nexport const { setPending } = archiveSlice.actions;\nexport const selectArchives = (state) => state.archive.archives;\nexport const selectStatus = (state) => state.archive.status;\nexport const selectPendingAlertId = (state) => state.archive.pending;\nexport const selectAlertOnStatusById = (id) => (state) => {\n    let index;\n    for (let i in state.archive.archives) {\n        if (state.archive.archives[i].id === id) {\n            index = i\n            cl('match at index:' + index);\n            break;\n        }\n    }\n    return state.archive.archives[index].selectAlertOnStatusById;\n}\nexport default archiveSlice.reducer;","import Container from '@material-ui/core/Container';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Cookies from 'js-cookie';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { getFriendlyTime, replaceFirebaseInvalidCharInKey } from '../../helper/util';\n// import { useSpring } from 'react-spring';\n// import diskimg from '../../resources/disk.svg';\nimport emptyimg from '../../resources/undraw_empty_street_sfxm 1.svg';\nimport { messaging } from '../../services/firebase';\nimport { db } from '../../services/firebase.js';\nimport { showCustomMsg } from '../submissionbar/submissionbarSlice';\nimport { registerMessageTokenAsync, selectArchives, selectPendingAlertId, selectStatus, turnOffAlertAsync, turnOnAlertAsync } from './archiveSlice';\nimport { cl } from '../../helper/util';\n\nconst EACH_PAGE_COUNT = 5;\n\nconst useStyles = makeStyles((theme) => ({\n    centering: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: theme.spacing(4),\n    },\n    archivecontainer: {\n        marginTop: theme.spacing(8),\n    },\n    firstArchive: {\n        marginTop: theme.spacing(4),\n    },\n    hovertext: {\n        display: 'none',\n    },\n    hovereffect: {\n        // width: \"max-content\",\n        overflowY: \"hidden\",\n        height: \"100%\",\n        // maxHeight: \"100%\",\n        // maxWidth: \"100%\",\n        // position: 'relative',\n        // display: 'inherit',\n        position: 'relative',\n        '&:before': {\n            // background: 'linear-gradient(to top, #80B7A233, #80B7A2ff)',\n            background: '#00000044',\n            // height: '0%',\n            height: '100%',\n            // transition: 'height 0.5s ease-out',\n            transition: 'opacity0.5s ease-out',\n            position: 'absolute',\n            content: \"''\",\n            top: '0',\n            left: '0',\n            width: '100%',\n            opacity: '0%',\n        },\n\n        '&:hover:before': {\n            height: '100%',\n            // background: 'linear-gradient(to bottom, rgba(255,0,0,0) 0%,rgba(255,0,0,0.65) 100%)',\n            // background: '#4B6A5E88',\n            opacity: '100%',\n\n        },\n        '&:hover $hovertext': {\n            position: 'absolute',\n            // margin: 'auto',\n            // display: 'grid',\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            marginTop: 'auto',\n            marginBottom: 'auto',\n            // placeItems: 'center',\n            display: 'grid',\n            placeItems: 'center',\n        }\n    },\n    gridcontainer: {\n        backgroundColor: theme.palette.background.paper,\n        display: \"grid\",\n        gridTemplateColumns: \"2fr 3fr 4fr\",\n        maxWidth: \"100%\",\n        marginTop: theme.spacing(3),\n    },\n    imgofpage: {\n        width: \"max-content\",\n        overflowY: \"hidden\",\n        height: \"100%\",\n        maxHeight: \"100%\",\n        maxWidth: \"100%\",\n        verticalAlign: \"top\",\n        objectFit: \"cover\",\n        // objectFit: \"contain\",\n        // objectFit: \"scale-down\",\n        // https://www.w3schools.com/css/css3_object-fit.asp\n        objectPosition: \"0% 0%\",\n    },\n    archiveTitle: {\n        // fontFamily: \"'Train One', cursive\",\n    },\n    paper: {\n        height: \"100%\",\n    },\n    fillheight: {\n        // height: \"100%\",\n        height: \"200px\",\n    },\n    imgwrapper: {\n        marginTop: '64px',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        maxWidth: '80%',\n    },\n}));\n\nfunction SingleArchive(props) {\n    cl('props withing single archive');\n    cl(props);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    // const [isAlertOn, setAlert] = React.useState(props.alerton);\n    // const isAlertOn = useSelector(selectAlertOnStatusById(props.id));\n    const isAlertOn = props.alerton;\n\n    // i use selector in each archive, may not be efficient\n    const pendingObject = useSelector(selectPendingAlertId);\n    const isAlertPending = pendingObject.hasOwnProperty(props.id);\n    // const humanizedNextAlertDate = \n\n    // check whether it is pending\n    let labelText = isAlertOn ? (\n        isAlertPending ? \"Turning off alert...\"\n            // : \"Next alert at \" + humanizedNextAlertDate\n            : \"Next alert at \" + getFriendlyTime(props.nextalertdate)\n    )\n        : (isAlertPending ? \"Turning on alert...\"\n            : \"Turn on alert\");\n\n    const handleChange = async () => {\n        // check notificaiton permission\n        let registration = window.registration;\n        // Request permission and get token.....\n        Notification.requestPermission().then(function () {\n            cl('Have permission ');\n            return messaging.getToken({\n                serviceWorkerRegistration: registration,\n                vapidKey: \"BJy2tod0IHuw43QulYTMh8fkz6MXsrst_avO9feOrpZVdnStqiK4oVYWZ0cCueVf_OqWUcmuIxi-a8TZN6O21hU\"\n            });\n        }).then((currentToken) => {\n            if (currentToken) {\n                // setMsgToken(currentToken);\n                cl(\"token\");\n                cl(`currentToken: ${currentToken}`);\n                // const cookies = new Cookies();\n                // cookies.set('msgtoken', currentToken, { path: '/', maxAge: 2 * 365 * 24 * 60 * 60 });\n                // cl(cookies.get('token'));\n                // localStorage.setItem('msgtoken', currentToken);\n                // setOpen(true);\n                // setPermissionLoading(false);\n\n                // maybe have to store it locally or something, if during different session it differs, check this later\n                dispatch(registerMessageTokenAsync(currentToken));\n                // sub to \n                if (!isAlertOn) {\n                    // turning off submit a request\n                    dispatch(turnOnAlertAsync(props.id));\n                } else {\n                    //turn on\n\n                    dispatch(turnOffAlertAsync(props.id));\n                }\n\n\n            } else {\n                cl('No registration token available. Request permission to generate one.');\n                dispatch(showCustomMsg('Have you enabled notification?'));\n                // setSnackbarMsg('Please enable push notification and try again');\n                // setSnackbarOpen(true);\n                // setPermissionLoading(false);\n            }\n        }).catch((err) => {\n            cl('An error occurred while retrieving token. ', err);\n            // send a notificaiton\n            dispatch(showCustomMsg('You need to  enable notification for the alerts to work'));\n\n            // setSnackbarMsg('Please enable push notification and try again');\n            // setSnackbarOpen(true);\n            // setPermissionLoading(false);\n        });\n\n        // setAlert(!isAlertOn);\n    };\n\n    return (\n        <div className={props.idx === 0 ? classes.firstArchive : classes.archivecontainer} >\n\n\n            <Typography variant=\"h5\" gutterBottom>\n                <Link href={props.url} target=\"_blank\" rel=\"noopener noreferrer nofollow\" >\n                    <span>{props.title}</span>\n                </Link>\n            </Typography>\n            <div className={classes.gridcontainer}>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img0B} target=\"_blank\" rel=\"noopener noreferrer nofollow\" >\n                            <div className={classes.hovereffect}>\n                                <img alt=\"\" className={classes.imgofpage} src={props.img0} />\n                                <div className={classes.hovertext}>\n                                    <Typography variant='h4'\n                                        align='center'\n                                        style={{\n                                            // color: '#4B6A5E',\n                                            color: 'white',\n                                        }}\n                                    >\n                                        Phone view\n                                    </Typography>\n                                </div>\n                            </div>\n                        </a>\n                    </Paper>\n                </Container>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img1B} target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n                            <div className={classes.hovereffect}>\n                                <img alt=\"\" className={classes.imgofpage} src={props.img1} />\n                                <div className={classes.hovertext}>\n                                    <Typography\n                                        variant='h4'\n                                        align='center'\n                                        style={{\n                                            color: 'white',\n                                        }}\n                                    >\n                                        Tablet view\n                                    </Typography>\n                                </div>\n                            </div>\n                        </a>\n                    </Paper>\n                </Container>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img2B} target=\"_blank\" rel=\"noopener noreferrer nofollow\">\n                            <div className={classes.hovereffect}>\n                                <img alt=\"\" className={classes.imgofpage} src={props.img2} />\n                                <div className={classes.hovertext}>\n                                    <Typography\n                                        variant='h4'\n                                        align='center'\n                                        style={{\n                                            color: 'white',\n                                        }}\n                                    >\n                                        Desktop view\n                                    </Typography>\n                                </div>\n                            </div>\n                        </a>\n                    </Paper>\n                </Container>\n            </div>\n            <Container style={{ paddingTop: \"16px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                <Link>\n\n                </Link>\n                <FormControlLabel\n                    control={<Switch color=\"primary\" checked={isAlertOn} disabled={isAlertPending} onChange={handleChange} name=\"alert\" />}\n                    // labelPlacement=\"bottom\"\n                    labelPlacement=\"start\"\n                    label={labelText}\n                />\n            </Container>\n        </div >\n    );\n}\n\nexport default function Archive() {\n    const dispatch = useDispatch();\n    // select the archives\n    let archives = useSelector(selectArchives, shallowEqual);\n    let status = useSelector(selectStatus);\n    cl('reverse');\n    // window.aaa = archives;\n    // let reverseArchives = [...archives].reverse(); // this does not update the statesomehow\n    // i move the sorting to server side\n    let reverseArchives = [...archives]// this does not update the statesomehow\n    // let reverseArchives = [];\n    let [page, setPage] = useState(1);\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        cl('running archive mounting stuff');\n        //dispatch\n\n        // dispatch(fetchArchivesAsync()); // why is it mounted even when it is not visible yet\n        // this would be dispatched by the queue_change saga\n        // Initialize Firebase\n        //TODO: error checking, and make this more secure in the future\n        let email = Cookies.get('email');\n        var queueRef = db.ref('queue/' + replaceFirebaseInvalidCharInKey(email)); // add the email hereTODO:\n        queueRef.on('value', (snapshot) => {\n            const data = snapshot.val();\n            cl(\"queue changes\");\n            cl(data);\n\n            // updateStarCount(postElement, data);\n            // dispatch(updateUrls(data));\n            dispatch({\n                type: 'QUEUE_CHANGE',\n                payload: data,\n            });\n        });\n\n    }, [dispatch]);\n\n    function handlePageChange(e, v) {\n        cl(v);\n        setPage(v);\n    }\n\n    // const diskanimation = useSpring({\n    //     loop: true,\n    //     to: [\n    //         { opacity: 1, color: '#ffaaee' },\n    //         { opacity: 0, color: 'rgb(14,26,19)' },\n    //     ],\n    //     from: {\n    //         opacity: 0, color: 'red',\n    //     },\n    //     config: {\n    //         duration: 3000,\n    //     }\n\n    // })\n\n    return status !== \"loading\" && (\n        <div style={{\n        }}>\n\n            <div style={{\n                position: \"relative\",\n                marginTop: '72px',\n            }}>\n                {/* <animated.div\n                    style={diskanimation}\n                >\n                    <img src={diskimg} style={{\n                        position: \"absolute\",\n                        right: \"80vw\",\n                        width: \"32px\",\n                        height: \"32px\",\n                        transform: \"rotate(45deg)\",\n\n                    }} />\n                </animated.div> */}\n                <Typography variant=\"h4\" className={classes.archiveTitle} gutterBottom>\n                    Your Personal Archive\n                </Typography>\n            </div>\n            {reverseArchives.filter(\n                (x, idx) => idx >= (page - 1) * EACH_PAGE_COUNT\n                    && idx < page * EACH_PAGE_COUNT).map(\n                        (a, idx) => (<SingleArchive idx={idx} key={a.id} {...a} />)\n                    )}\n            {reverseArchives.length === 0 &&\n                <div>\n                    {/* <Lottie\n                        animationData={animationData}\n                        style={{\n                            height: \"200px\",\n                            width: \"200px\",\n                        }}\n                    /> */}\n                    <div className={classes.imgwrapper}>\n                        <img alt='empty state' src={emptyimg} style={{\n                            width: '100%',\n                        }} />\n                        <Typography\n                            style={{\n                                marginTop: '32px',\n                                maxWidth: '50ch',\n                                marginLeft: 'auto',\n                                marginRight: 'auto',\n                            }}\n                            variant=\"body1\"\n                        >\n                            Wow. It looks empty here. Add a new page to your personal archive using the form above.\n                        </Typography>\n                    </div>\n                </div>}\n            <div className={classes.centering}>\n                <Pagination\n                    page={page}\n                    color=\"primary\"\n                    onChange={handlePageChange}\n                    count={Math.ceil(reverseArchives.length / 5)}\n                />\n            </div>\n        </div>\n    );\n}","import Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport validUrl from 'valid-url';\n// import styles from './SubmissionBar.module.css';\nimport { showInvalidURLMsg, submitURLAsync } from './submissionbarSlice';\nimport { cl } from '../../helper/util';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: theme.spacing(2),\n        // height: \"500px\",\n    },\n    borderRadiusOverwrite: {\n        borderRadius: '10px',\n    },\n    savebutton: {\n        // minWidth: \"150px\",\n        marginTop: '16px',\n        padding: '1em 2em',\n    },\n    input: {\n        width: \"100%\",\n    },\n    root: {\n\n    },\n}));\n\n\nexport default function SubmissionBar() {\n    // const [submissiontext, setSubmissionText] = useState('');\n    // we use uncontrolled ref\n    // need media query later for the submission button below if size is too small\n    const dispatch = useDispatch();;\n\n    let textRef = React.createRef();\n    let submitURL = (e) => {\n        e.preventDefault();\n        let url = textRef.current.value;\n        cl(url);\n        if (validUrl.isUri(url)) {\n            cl('Looks like an URI');\n            dispatch(submitURLAsync(url));\n            textRef.current.value = '';\n        } else {\n            cl('Not a URI');\n            dispatch(showInvalidURLMsg());\n        }\n\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.container}>\n            <form\n                // className={classes.root}\n                onSubmit={submitURL}\n                noValidate\n                autoComplete=\"off\"\n            // style={{ height: \"600px\" }}\n            >\n                <TextField\n                    inputRef={textRef}\n                    className={classes.input}\n                    variant=\"outlined\"\n                    label=\"Enter url of page to save\"\n                    classes={{\n                        root: classes.borderRadiusOverwrite,\n                    }}\n                    InputProps={{\n                        classes: {\n                            root: classes.borderRadiusOverwrite,\n                        }\n                    }}\n                />\n                <Button\n                    className={classes.savebutton}\n                    // startIcon={<SaveIcon />}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={submitURL}\n                >Save</Button>\n            </form>\n        </div>\n    )\n}","import { Typography } from \"@material-ui/core\";\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link'; // i think maybe use the link from router instead\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Archive from \"../archive/Archive\";\nimport { resetJustLoggedIn, selectJustLoggedIn } from '../login/LoginSlice';\nimport SubmissionBar from \"../submissionbar/SubmissionBar\";\nimport { closeSB, selectSBMsg, selectSBOpen, selectSBType } from '../submissionbar/submissionbarSlice';\nimport { cl } from '../../helper/util';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    dashboardPadding: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        padding: \"24px\",\n        maxWidth: \"1280px\",\n        paddingBottom: \"128px\",\n        [theme.breakpoints.up('sm')]: {\n            padding: '48px',\n            paddingBottom: '128px',\n        }\n    },\n    topSection: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        maxWidth: '340px',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: '0px',\n        }\n\n    },\n}));\nexport default function Dashboard() {\n    function handleClick(event) {\n        event.preventDefault();\n        console.info('You clicked a breadcrumb.');\n    }\n    const isSBOpen = useSelector(selectSBOpen);\n    const SBMsg = useSelector(selectSBMsg);\n    const SBMsgType = useSelector(selectSBType);\n    const dispatch = useDispatch();\n\n    let isJustLoggedIn = useSelector(selectJustLoggedIn);\n    useEffect(() => {\n        dispatch(resetJustLoggedIn());\n        cl('dashboard login resetting');\n    }, [isJustLoggedIn, dispatch]);\n    useEffect(() => {\n        cl('dashboard login mounted');\n    }, []);\n\n    const classes = useStyles();\n\n    const handleClose = (event, reason) => {\n\n        if (reason === 'clickaway') {\n            return;\n        }\n        cl('trying to close');\n        // setOpen(false);\n        // cl('type of dispatch: ' + typeof dispatch);\n        // cl('type of closeSB: ' + typeof closeSB);\n        // cl('closeSB: ' + closeSB);\n        dispatch(closeSB());\n    };\n\n    return (\n        <div className={classes.dashboardPadding} >\n            <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/\" onClick={handleClick}>\n                    <RouterLink to=\"/\">\n                        Home\n                    </RouterLink>\n                </Link>\n                <Link\n                    color=\"inherit\"\n                    href=\"/getting-started/installation/\"\n                    aria-current=\"page\"\n                    onClick={handleClick}>\n                    Dashboard\n                </Link>\n            </Breadcrumbs>\n            <div className={classes.topSection} >\n                <Typography\n                    variant=\"body1\"\n                    style={{\n                        marginTop: '32px',\n                    }}\n                >You can have your own personal archive of websites by using the form below.\n                </Typography>\n                <Typography\n                    style={{\n                        marginTop: '48px',\n                    }}\n                    variant=\"body1\"\n                >Enter the url of any website and we will save a copy of it for you.\n                </Typography>\n                <SubmissionBar />\n            </div>\n            <Archive />\n            <Snackbar open={isSBOpen} autoHideDuration={1200} onClose={handleClose}>\n                <Alert onClose={handleClose} severity={SBMsgType}>\n                    {SBMsg}\n                </Alert>\n            </Snackbar>\n            {/* <ProgressDialog /> */}\n\n        </div>\n    );\n}","import { createSlice } from '@reduxjs/toolkit';\nimport { resendVerifyAsync } from '../login/LoginSlice';\n\nconst initialState = {\n    isShown: false,\n    alertType: 'info',\n    msg: 'some s',\n};\n\nexport const snackbarSlice = createSlice({\n    name: 'snackbar',\n    initialState,\n    reducers: {\n        showInfoMsg: (state, action) => {\n            state.alertType = 'info';\n            state.msg = action.payload;\n            state.isShown = true;\n        },\n        dismissMsg: (state, action) => {\n            state.isShown = false;\n        },\n    },\n    extraReducers: (builder) => {\n        builder.addCase(resendVerifyAsync.fulfilled, (state, action) => {\n            state.isShown = true;\n            state.alertType = 'success';\n            state.msg = 'Email sent. Please check your email';\n        })\n            .addCase(resendVerifyAsync.rejected, (state, action) => {\n                state.isShown = true;\n                state.alertType = 'error';\n                state.msg = 'Error resending email, try again a few minutes later...'; //\n            })\n            ;\n    }\n});\n\n\n\nexport const selectSnackbarIsShown = (state) => state.snackbar.isShown;\nexport const selectSnackbarAlertType = (state) => state.snackbar.alertType;\nexport const selectSnackbarMsg = (state) => state.snackbar.msg;\n\nexport const { showInfoMsg, dismissMsg } = snackbarSlice.actions;\nexport default snackbarSlice.reducer;","import Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { dismissMsg, selectSnackbarAlertType, selectSnackbarIsShown, selectSnackbarMsg } from './GlobalSnackbarSlice';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function GlobalSnackbar() {\n\n    const alertType = useSelector(selectSnackbarAlertType);\n    const isShown = useSelector(selectSnackbarIsShown);\n    const msg = useSelector(selectSnackbarMsg);\n    const dispatch = useDispatch();\n\n    const handleClose = (event, reason) => {\n        // if (reason === 'clickaway') {\n        //     return;\n        // }\n\n        dispatch(dismissMsg());\n    };\n    return (\n        <Snackbar open={isShown} autoHideDuration={6000} onClose={handleClose}>\n            {/* // <Snackbar open={isShown} > */}\n            <Alert severity={alertType}>{msg}</Alert>\n        </Snackbar>\n    );\n}","export default __webpack_public_path__ + \"static/media/iconoir_emoji-sad.f99263db.svg\";","\nimport { Box, Button, Dialog, IconButton, InputAdornment, makeStyles, Slide, Typography } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { useFormik } from 'formik';\nimport Lottie from 'lottie-react';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as yup from 'yup';\nimport sadface from '../../resources/iconoir_emoji-sad.svg';\nimport loadingAnimation from \"../../resources/lf30_editor_uekpjvgl.json\";\nimport { showInfoMsg } from '../globalsnackbar/GlobalSnackbarSlice';\nimport { forgetpw, loginAsync, relogin, resendVerifyAsync, selectJustLoggedIn, selectLoginScreen, selectResendPending } from './LoginSlice';\n\nconst useStyles = makeStyles((theme) => ({\n    changeLoginDialogAlign: {\n        // justifyContent: 'flex-end',\n        // alignItems: 'flex-start',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n        // borderRadius: '40px',\n        '& .MuiPaper-rounded': {\n            borderRadius: '20px',\n        },\n\n        [theme.breakpoints.up('md')]: {\n            justifyContent: 'flex-end',\n            alignItems: 'flex-start',\n\n        }\n    },\n    inputInternalFieldSetHover: {\n        '&:hover .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'white',\n\n        },\n        '&.MuiOutlinedInput-notchedOutline': {\n            borderColor: 'white',\n\n        },\n        '&.Mui-error .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'orange',\n        }\n    },\n    fieldsetBorder: {\n        border: 'solid 1px white',\n    },\n    roundedBorder: {\n        borderRadius: '50px',\n\n    },\n    forgetpasswordbtn: {\n        color: '#fff',\n        marginTop: '16px',\n        fontSize: theme.typography.subtitle1.fontSize,\n    },\n    white: {\n        color: '#fff',\n    },\n    logoutwrapper: {\n        padding: '48px',\n        background: '#4B6A5E',\n        margin: 'auto',\n    },\n\n}));\nconst validationSchema = yup.object({\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .required('Password is required'),\n});\nconst forgetPWValidationSchema = yup.object({\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n});\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nfunction Login(props) {\n    const classes = useStyles();\n    const { onClose, selectedValue, open } = props;\n    // let [loginScreen, setLoginScreen] = useState('home');\n    // home, forget, invalid, logging in, \n    let loginScreen = useSelector(selectLoginScreen);\n    let isJustLoggedIn = useSelector(selectJustLoggedIn);\n    let resendPending = useSelector(selectResendPending);\n\n    let dispatch = useDispatch();\n\n    const handleClose = () => {\n        // setLoginScreen('home'); // reset to login screen when closing dialog\n        dispatch(relogin());\n        onClose(selectedValue);\n    };\n\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            // email: 'malay@gmail.com',\n            // password: '11111111',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            // alert(JSON.stringify(values, null, 2));\n            //dispatch some action\n            dispatch(loginAsync({ email: values.email, pw: values.password }));\n        },\n    });\n\n    const forgetPWFormik = useFormik({\n        initialValues: {\n            email: 'foobar@example.com',\n        },\n        validationSchema: forgetPWValidationSchema,\n        onSubmit: (values) => {\n            dispatch(showInfoMsg('Not implemented yet'))\n        },\n    });\n\n\n    // let isAtLogin = loginScreen === 'home';\n    return (\n        <Dialog\n            TransitionComponent={Transition}\n            onClose={handleClose}\n            aria-labelledby=\"simple-dialog-title\"\n            classes={{\n                scrollPaper: classes.changeLoginDialogAlign,\n                root: classes.roundedBorder\n            }}\n            open={open}\n        // open={true}\n        >\n            {/* start of login first screen */}\n            {loginScreen === 'home' &&\n                < div\n                    style={{\n                        background: \"#4B6A5E\",\n                        display: \"flex\",\n                        flexDirection: 'column',\n                        padding: '48px 24px',\n                    }}\n                >\n                    <Typography variant='h4' align='center' style={{ color: '#fff' }}>Welcome</Typography>\n                    <Typography variant='h4' align='center' style={{ color: '#fff' }} >to</Typography>\n                    <Typography variant='h4' align='center' style={{ color: '#fff' }} >Pagesaver</Typography>\n\n                    <form onSubmit={formik.handleSubmit} style={{ display: 'flex', marginTop: '24px', flexDirection: 'column', }}>\n                        <TextField\n                            // fullWidth\n                            id=\"email\"\n                            name=\"email\"\n                            label=\"Email\"\n                            value={formik.values.email}\n                            onChange={formik.handleChange}\n                            error={formik.touched.email && Boolean(formik.errors.email)}\n                            helperText={formik.touched.email && formik.errors.email}\n                            variant='outlined'\n                            FormHelperTextProps={{\n                                style: { color: 'orange', }\n                            }}\n                            InputLabelProps={{\n                                style: { color: '#fff', }\n                            }}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <MailOutlineIcon />\n                                    </InputAdornment>\n                                ),\n                                style: {\n                                    color: '#fff',\n                                },\n                                classes: {\n                                    root: classes.inputInternalFieldSetHover,\n                                    notchedOutline: classes.fieldsetBorder,\n                                }\n                            }}\n                        />\n                        <TextField\n                            // fullWidth\n                            id=\"password\"\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n                            // color='#ffffff'\n                            style={{ marginTop: \"16px\" }}\n                            variant='outlined'\n                            InputLabelProps={{\n                                style: { color: '#fff', }\n                            }}\n                            FormHelperTextProps={{\n                                style: { color: 'orange', }\n                            }}\n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                        <VpnKeyIcon />\n                                    </InputAdornment>\n                                ),\n                                style: {\n                                    color: '#fff',\n                                },\n                                classes: {\n                                    root: classes.inputInternalFieldSetHover,\n                                    notchedOutline: classes.fieldsetBorder\n                                }\n                            }}\n                        />\n\n                        <Button type=\"submit\" variant='outlined' style={{ marginTop: \"24px\", color: '#fff', borderRadius: '60px', border: '1px solid #fff' }} >Sign in</Button>\n                    </form>\n\n                    <Button\n                        className={classes.forgetpasswordbtn}\n                        onClick={() => dispatch(forgetpw())}\n                    >Forget password</Button>\n                </div>\n            }\n            {/* end of login first screen */}\n            {loginScreen === 'verifyemailpls' &&\n                (< div\n                    style={{\n                        background: \"#4B6A5E\",\n                        display: \"flex\",\n                        flexDirection: 'column',\n                        padding: '48px 24px',\n                    }}\n                >\n                    <Typography variant='h4' align='center' style={{ color: '#fff' }}>Verify your email</Typography>\n                    <Typography variant='body1' align='center' style={{ color: '#fff' }}>\n                        Please check your email for the verification first.\n                    </Typography>\n\n                    <Button\n                        variant='outlined'\n                        style={{ marginTop: \"48px\", color: '#fff', borderRadius: '60px', border: '1px solid #fff' }}\n                        onClick={\n                            () => {\n                                dispatch(relogin())\n                            }\n                        }\n                    >\n                        ok\n                    </Button>\n                    <Button\n                        style={{ marginTop: \"8px\", color: '#fff' }}\n                        disabled={resendPending}\n                        onClick={() => dispatch(resendVerifyAsync(formik.values.email))}\n                    >\n                        {resendPending ? \" Resending...\" : \"Resend email\"}\n\n                    </Button>\n                </div>)}\n            {loginScreen === 'forget' &&\n                (<div style={{ position: 'relative' }}>\n                    <div\n                        style={{\n                            padding: '24px',\n                            background: '#4B6A5E',\n                            paddingBottom: '128px',\n                            maxWidth: '350px',\n                        }}\n                        className={classes.tophalf}\n                    >\n                        <IconButton\n                            color=\"secondary\"\n                            aria-label=\"back to login\"\n                            classes={{\n                                root: classes.white,\n                            }}\n                            onClick={() => dispatch(relogin())}\n                        >\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <Typography\n                            align='center'\n                            variant='h4'\n                            style={{\n                                color: '#fff'\n                            }}\n                        >Forget Your Password?</Typography>\n                        <Typography\n                            align='center'\n                            variant='h5'\n                            style={{\n                                color: '#fff'\n                            }}\n                        >Enter your email to reset your password</Typography>\n                    </div>\n                    <div\n                        style={{\n                            padding: '24px',\n                            background: '#fff',\n                            paddingTop: '128px',\n                            paddingBottom: '24px',\n\n                        }}\n                        className={classes.bottomhalf}\n                    >\n                        <Typography\n                            align='center'\n                        >Didn’t receive a mail?</Typography>\n                        <Typography\n                            align='center'\n                        >Resend email</Typography>\n                    </div>\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            position: 'absolute',\n                            top: '0px',\n                            left: '0px',\n                            pointerEvents: 'none',\n                        }}\n\n                    >\n                        <Box\n                            boxShadow={3}\n                            bgcolor=\"background.paper\"\n                            m={1}\n                            p={3}\n                            style={{\n                                width: '80%',\n                                borderRadius: '20px',\n                            }}>\n                            <form onSubmit={forgetPWFormik.handleSubmit}>\n                                <TextField\n                                    fullWidth\n                                    id=\"email\"\n                                    name=\"email\"\n                                    label=\"Email\"\n                                    value={forgetPWFormik.values.email}\n                                    onChange={forgetPWFormik.handleChange}\n                                    inputProps={{\n                                        style: {\n                                            pointerEvents: 'initial',\n                                        }\n                                    }}\n                                    error={forgetPWFormik.touched.email && Boolean(forgetPWFormik.errors.email)}\n                                    helperText={forgetPWFormik.touched.email && forgetPWFormik.errors.email}\n                                />\n                                <Button\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    style={{ marginTop: '16px', pointerEvents: 'initial', }}\n                                    fullWidth\n                                    onClick={() => dispatch(showInfoMsg('Not implemented yet'))}\n                                    type=\"submit\">\n                                    reset\n                                </Button>\n                            </form>\n                        </Box>\n                    </div>\n                </div >)}\n            {/* end of forget screen */}\n            {loginScreen === 'logging in' && (\n                <div style={{\n                    padding: '48px',\n                    background: '#4B6A5E',\n                }}>\n                    <Typography\n                        variant='h4'\n                        style={{\n                            color: '#fff'\n                        }}\n                    >Logging in …</Typography>\n                    <div style={{ marginTop: '24px' }}>\n                        <Lottie animationData={loadingAnimation} />;\n                    </div>\n                </div>\n            )}\n            {loginScreen === 'logging out' && (\n                <div className={classes.logoutwrapper} >\n                    <Typography\n                        variant='h4'\n                        style={{\n                            color: '#fff'\n                        }}\n                    >Logging out …</Typography>\n                    <div style={{ marginTop: '24px' }}>\n                        <Lottie animationData={loadingAnimation} />;\n                    </div>\n                </div>\n            )}\n            {loginScreen === 'invalid' && (\n                <div style={{\n                    padding: '48px',\n                    background: '#4B6A5E',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}>\n                    <Typography\n                        variant='h4'\n                        align='center'\n                        style={{\n                            color: '#fff'\n                        }}\n                    >Invalid Credentials</Typography>\n                    <Typography\n                        variant='h5'\n                        align='center'\n                        style={{\n                            color: '#fff',\n                            maxWidth: '20ch',\n                            marginTop: '16px',\n                        }}\n                    >Please check your credentials and try again</Typography>\n                    <img alt='' src={sadface} />\n                    <Button\n                        variant='outlined'\n                        style={{\n                            borderColor: 'rgba(255,255,255,0.2)',\n                            color: '#fff',\n                            borderRadius: '20px',\n                            marginTop: '16px',\n                        }}\n                        onClick={\n                            () => dispatch(relogin())\n                        }\n                    >Try again</Button>\n                </div>\n            )}\n            {isJustLoggedIn ?\n                <Redirect\n                    to={{\n                        pathname: \"/dashboard\",\n                        // state: { from: location }\n                    }}\n                /> : null}\n        </Dialog >\n    );\n}\nexport default Login;","export default __webpack_public_path__ + \"static/media/Group 2.d01def24.svg\";","\nimport Button from '@material-ui/core/Button';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport withWidth from '@material-ui/core/withWidth';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Cookies from 'js-cookie';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n    Link,\n    useLocation\n} from \"react-router-dom\";\nimport logo from '../../resources/Group 2.svg';\nimport { hide, loadUserFromCookie, logoutAsync } from '../login/LoginSlice';\nimport { cl } from '../../helper/util';\n\nconst useStyles = makeStyles((theme) => ({\n    header: {\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n        background: \"white\",\n        // position: \"fixed\",\n        zIndex: 1,\n        top: \"0px\",\n        display: \"flex\",\n        paddingTop: \"16px\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        [theme.breakpoints.up('sm')]: {\n            paddingLeft: \"32px\",\n            paddingRight: \"32px\",\n            paddingTop: \"16px\",\n        },\n        [theme.breakpoints.up('lg')]: {\n            paddingLeft: \"128px\",\n            paddingRight: \"128px\",\n            paddingTop: \"32px\",\n        },\n    },\n    logo: {\n        width: \"40px\",\n        height: \"40px\",\n        [theme.breakpoints.up('lg')]: {\n            width: \"48px\",\n            height: \"48px\",\n\n        },\n    },\n    makeItSquare: {\n        alignSelf: 'center',\n    }\n}));\n\nfunction NavBar({ isLoggedOn, userEmail, width, handleClickOpen }) {\n    // depending on the login state\n    const classes = useStyles();\n    const theme = useTheme();\n    window.aa = theme; //type aa to see the theme\n\n    let location = useLocation();\n    let isAtSignUpPage = location.pathname === \"/signup\" || location.pathname === '/verify';\n    cl('location');\n    cl(location);\n    let dispatch = useDispatch();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    useEffect(() => {\n        if (Cookies.get('email')) {\n            dispatch(loadUserFromCookie({\n                email: Cookies.get('email'), // as long asi dont setthis cookie the user will not be logged in\n            }));\n        }\n    }, [dispatch]);\n\n    const handleLogout = async (event) => {\n        cl('running logout');\n        handleClose(); // close the old logout bubble menu\n        handleClickOpen(event); //i think this for log out animatino\n        await dispatch(logoutAsync());\n        await dispatch(hide());\n    }\n\n\n    return (\n        <header className={classes.header} >\n            <div style={{\n                display: \"flex\",\n                alignItems: \"center\",\n            }}>\n                <img alt='logo' src={logo} className={classes.logo} />\n                <Link to=\"/\">\n                    <h5 style={{ marginLeft: \"8px\" }}>Page saver</h5>\n                </Link>\n            </div>\n\n            <Hidden xsDown>\n                {!isLoggedOn ? !isAtSignUpPage && (\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Button onClick={handleClickOpen} >Login</Button>\n                        <Button><Link to=\"/signup\">Signup</Link></Button>\n                    </div>)\n                    : (\n                        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                            <Typography variant=\"h5\" >\n                                {userEmail}\n                            </Typography>\n                            <Button\n                                style={{ marginLeft: \"32px\" }}\n                                onClick={handleLogout}\n                            >Log Out</Button>\n                        </div>\n\n                    )\n                }\n            </Hidden>\n\n            <Hidden smUp>\n                {isLoggedOn && (\n                    <>\n                        <IconButton\n                            aria-label=\"expand-more\"\n                            onClick={handleClick}\n                            size='medium'\n                            classes={{\n                                root: classes.makeItSquare,\n                            }}\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"simple-menu\"\n                            anchorEl={anchorEl}\n                            // keepMounted\n                            open={anchorEl !== null}\n                            onClose={handleClose}\n                        >\n                            <MenuItem\n                                onClick={handleLogout}\n                            >Logout</MenuItem>\n                        </Menu>\n                    </>\n                )}\n            </Hidden>\n            {/* Current width: {width} */}\n        </header>\n    )\n}\n\nexport default withWidth()(NavBar);","import { createSlice } from '@reduxjs/toolkit';\nimport { cl } from '../../helper/util';\n// import { fetchArchivesAsync } from '../archive/archiveSlice';\n// import { useDispatch } from 'react-redux';\n\nconst initialState = {\n    urlsInProgress: {\n    },\n    showProgressDialog: true,\n    // need to monitor downloading,completed\n    // removing completed and refresh page?, need use some animation\n    // research on the animation in react\n    // basicallly just need to detect 2 things\n    // 1) adding of new url\n    // 2) deleting of url(aka completion) and play the animation as required\n}\n\nexport const progressdialogSlice = createSlice({\n    name: 'progressdialog',\n    initialState,\n    reducers: {\n        closeDialog: (state, action) => {\n            state.showProgressDialog = false;\n        },\n        updateUrls: (state, action) => {\n            // action.payload = action.payload || {};\n\n            cl('received update url actions');\n            cl(action.payload);\n            // compare state with action payloadd for old and new\n            // i have to keep track/statee of the progress too\n            // dispatch new action for certain?\n            let newState = { ...state }; //copy old state, is this immutable, or shallow copy only?\n            newState.showProgressDialog = true;\n            for (const [id, link] of Object.entries(action.payload || {})) {\n                cl(\"Checking from action payload: \" + link);\n                if (typeof state.urlsInProgress[id] === 'undefined') {// use property define or something?\n                    // new\n                    //dispatch added action?\n                    //need to play some animation?\n                    cl('added new:' + link);\n                    newState.urlsInProgress = {\n                        ...newState.urlsInProgress,\n                        [id]: {\n                            link: link,\n                            status: \"downloading\",\n                        }\n                    }\n                }\n            }\n            //chaining it like this is a problem since the action performed above affects the bottom too\n            for (const [id, { status, link }] of Object.entries(state.urlsInProgress)) {\n                cl(\"Checking from state: \" + status + \" \" + link);\n                if (!action.payload || typeof action.payload[id] === 'undefined') {\n                    // completed items \n                    cl('completed:' + link);\n                    newState.urlsInProgress = {\n                        ...newState.urlsInProgress,\n                        [id]: {\n                            ...newState.urlsInProgress[id],\n                            status: \"completed\",\n                        },\n                        // Object.prototype.hasOwnProperty.call\n                    }\n                }\n            }\n            return newState;\n        }\n    }\n})\nexport const { updateUrls, closeDialog } = progressdialogSlice.actions;\nexport const selectURLInProgress = (state) => state.progressdialog.urlsInProgress;\nexport const selectProgressDialogIsShowing = (state) => state.progressdialog.showProgressDialog;\nexport default progressdialogSlice.reducer;","import { Typography } from '@material-ui/core';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\n// import Paper from '@material-ui/core/Paper';\n// import { shadows } from '@material-ui/system';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\n// import { borders } from '@material-ui/system';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// import { useSpring, animated } from 'react-spring';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport DescriptionRoundedIcon from '@material-ui/icons/DescriptionRounded';\n// import Hidden from '@material-ui/core/Hidden';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport React, { useEffect } from 'react';\nimport { Checkmark } from 'react-checkmark';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ellipsis } from '../../helper/util';\nimport { closeDialog, selectProgressDialogIsShowing, selectURLInProgress } from './progressdialogSlice';\nimport { cl } from '../../helper/util';\n\nconst ELLIPSIS_LIMIT = 30;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: \"90vw\",\n        position: \"fixed\",\n        bottom: \"0px\",\n        right: \"0px\",\n        margin: \"16px\",\n        paddingBottom: '0px',\n        // background: \"pink\",\n        // borderRadius: \"50px\",\n    },\n    header: {\n        display: \"flex\",\n        background: \"white\",\n        borderRadius: \"10px 10px 0px 0px\",\n        alignItems: \"center\",\n        // border: \"2px solid red\",\n    },\n    headericon: {\n\n    },\n    acsummary: {\n        padding: \"0px\",\n    },\n    acsummarycontent: {\n        padding: \"0px\",\n        margin: \"0px\",\n        '&$expanded': {\n            margin: \"0px\",\n            padding: \"0px\",\n        },\n    },\n    lastchild: {\n        '&:last-child': {\n            paddingBottom: '8px',\n        },\n    },\n    checkmark: {\n        // display: \"flex\",\n        // justifyContent: \"flex-end\",\n        marginLeft: \"auto\",\n    },\n    urlcontainer: {\n        display: \"flex\",\n        padding: theme.spacing(1) + \"px \" + theme.spacing(1) + \"px\",\n        width: 'inherit',\n\n        alignItems: \"center\",\n    },\n    urlcontainercompleted: {\n        display: \"flex\",\n        padding: theme.spacing(1) + \"px \" + theme.spacing(3) + \"px\",\n        color: theme.palette.primary.dark,\n        // background: theme.palette.primary.light,\n        alignItems: \"center\",\n\n    },\n    overrideaccordionshadowandmargin: {\n        boxShadow: \"none\",\n        border: \"none\",\n        margin: '0',\n        '&$expanded': {\n            margin: \"0\",\n        },\n    },\n    expanded: {\n        // this is required to be blank\n    },\n    urls: {\n        marginLeft: theme.spacing(2),\n        wordBreak: \"break-word\",\n        whiteSpace: \"normal\",\n        textOverflow: \"ellipsis\",\n\n    },\n    processingQueue: {\n        [theme.breakpoints.down('sm')]: {\n            fontSize: theme.typography.body1.fontSize,\n        },\n    },\n    '@keyframes rotation': {\n        'from': {\n            transform: \"rotate(0deg)\",\n        },\n        'to': {\n            transform: \"rotate(359deg)\",\n        }\n    },\n    // downloadprogressicon: {\n    //     margin: \"8px\",\n    //     // animation: \"$rotation 2s linear infinite\",\n    // },\n    downloadProgressIcon: {\n        margin: \"8px\",\n        animation: '$rotation 2s linear infinite',\n    },\n    downloadProgressIconStop: {\n        margin: \"8px\",\n        animation: 'none',\n    },\n\n}));\nexport default function ProgressDialog(props) {\n    const existingURLs = useSelector(selectURLInProgress);\n    const isProgressDialogVisible = useSelector(selectProgressDialogIsShowing);\n\n    const dispatch = useDispatch();\n\n    const classes = useStyles();\n    // const { anchorEl } = props;\n    useEffect(() => {\n        cl('progressdialog mounted stuff');\n    }, [dispatch]);\n\n    const [expanded, setExpanded] = React.useState(false);\n\n    const theme = useTheme();\n\n    const handleChange = () => {\n        setExpanded(!expanded);\n    };\n    cl('existingurls');\n    window.exu = existingURLs;\n    cl(existingURLs);\n\n    // const loopingStyle = useSpring({\n    //     loop: true,\n    //     from: { rotateZ: 0 },\n    //     to: { rotateZ: 360 },\n    // })\n    return (\n        <Slide direction=\"up\" in={Object.values(existingURLs).length > 0 && isProgressDialogVisible} mountOnEnter unmountOnExit>\n            <Box\n                borderRadius=\"20px\"\n                boxShadow={3}\n                // width=\"300px\"\n                // height=\"300px\"\n                m={0}\n                style={{ paddingRight: \"8px\", paddingLeft: \"8px\", paddingTop: \"8px\", paddingBottom: \"8px\", }}\n                // m and p values are important\n                bgcolor=\"background.paper\" className={classes.root}>\n                <Accordion\n                    expanded={!expanded}\n                    onChange={handleChange}\n                    classes={{\n                        root: classes.overrideaccordionshadowandmargin,\n                        expanded: classes.expanded,\n                    }}\n                >\n                    <AccordionSummary\n                        expandIcon={<ExpandMoreIcon />}\n                        aria-controls=\"panel1a-content\"\n                        id=\"panel1a-header\"\n                        p={0}\n                        m={0}\n                        style={{\n                            paddingRight: \"40px\",\n                            // borderBottom: \"solid rgba(0, 0, 0, 0.27) 1px\",\n                            // boxShadow: \"rgb(0 0 0 / 20%) 0px 3px 1px -2px, rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px\",\n                        }}\n                        classes={{\n                            root: classes.acsummary,\n                            content: classes.acsummarycontent,\n                            expanded: classes.expanded,\n                        }}\n                    >\n                        <div className={classes.header}>\n                            <div className={\n                                (Object.values(existingURLs).filter(a => a.status === 'downloading').length === 0)\n                                    ? classes.downloadProgressIconStop\n                                    : classes.downloadProgressIcon\n                            } >\n                                <AutorenewIcon color=\"primary\" fontSize=\"large\" />\n                            </div>\n                            <div>\n                                <Typography variant=\"h6\" gutterBottom={false} className={classes.processingQueue}>\n                                    Processing\n                                </Typography>\n                                {!expanded && (\n                                    <Typography variant=\"caption\">\n                                        {Object.values(existingURLs).filter(a => a.status === 'downloading').length} page saving in progress...\n                                    </Typography>\n                                )}\n                            </div>\n                        </div>\n                        <IconButton\n                            style={{ position: \"absolute\", right: \"0px\", top: \"8px\" }}\n                            aria-label=\"close\"\n                            onClick={() => dispatch(closeDialog())}\n                        // color=\"primary\"\n                        >\n                            <CloseIcon fontSize=\"small\"></CloseIcon>\n                        </IconButton>\n                    </AccordionSummary>\n                    <AccordionDetails style={{ margin: 0, padding: 0 }}>\n                        <div className={classes.body}>\n                            {Object.entries(existingURLs).map(([id, url]) => {\n                                if (url.status === 'downloading') {\n                                    return (\n                                        <div key={id} className={classes.lastchild}>\n                                            <div className={classes.urlcontainer}>\n                                                <DescriptionOutlinedIcon fontSize=\"small\" color=\"disabled\" />\n                                                <Typography variant=\"body2\" className={classes.urls}>\n                                                    Saving {ellipsis(url.link, ELLIPSIS_LIMIT)}\n                                                </Typography>\n                                            </div>\n                                            <Container>\n                                                <LinearProgress color=\"primary\" />\n                                            </Container>\n\n                                        </div>);\n\n                                } else {\n                                    return (\n                                        <div key={id} className={classes.urlcontainercompleted}>\n                                            <DescriptionRoundedIcon fontSize=\"small\" />\n                                            <Typography className={classes.urls} >\n                                                {ellipsis(url.link, ELLIPSIS_LIMIT)}\n                                                {/* {url.link} */}\n                                            </Typography>\n                                            <div className={classes.checkmark}>\n                                                <Checkmark size='medium' color={theme.palette.primary.main} />\n                                            </div>\n                                        </div>);\n                                };\n                            })\n                            }\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            </Box >\n        </Slide>\n    )\n}","export default __webpack_public_path__ + \"static/media/undraw_quick_chat_re_bit5 1.8be29f04.svg\";","import { Button, Hidden, TextField, Typography } from \"@material-ui/core\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport 'firebase/auth';\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    // BrowserRouter as Router,\n    // Switch,\n    // Route,\n    // Link,\n    Redirect\n} from \"react-router-dom\";\nimport * as yup from 'yup';\nimport signuppic from '../../resources/undraw_quick_chat_re_bit5 1.svg';\nimport { resetExistingAlert, selectSignupStatus, signupAsync } from \"./SignupSlice\";\nimport { cl } from '../../helper/util';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    page: {\n        paddingTop: \"128px\",\n        minHeight: \"100vh\",\n\n    },\n    entry: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        paddingLeft: \"24px\",\n        paddingRight: \"24px\",\n        maxWidth: \"512px\",\n        [theme.breakpoints.up('xs')]: {\n            flex: '1 1 50%',\n        },\n    },\n    entrywrapper: {\n        marginTop: \"64px\",\n        [theme.breakpoints.up('xs')]: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n    },\n    inputBox: {\n        borderRadius: \"10px\",\n        padding: \"2em 1em\",\n    },\n    signuppicWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flex: '1 1 20%',\n        [theme.breakpoints.up('sm')]: {\n            flex: '0 1 50%',\n        },\n        [theme.breakpoints.up('md')]: {\n            flex: '0 1 auto',\n        },\n    },\n    signuppic: {\n        // marginLeft: \"40px\",\n        width: \"min(512px,90%)\",\n    },\n    btn: {\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 'initial',\n        }\n    }\n\n}));\n\nconst validationSchema = yup.object({\n    email: yup\n        .string('Enter your email')\n        .email('Enter a valid email')\n        .required('Email is required'),\n    password: yup\n        .string('Enter your password')\n        .min(8, 'Password should be of minimum 8 characters length')\n        .required('Password is required'),\n    confirmpassword: yup\n        .string('Reenter your password')\n        .required('Reenter your password')\n        .oneOf([yup.ref('password')], 'Password did not match'),\n});\n\n\n\nfunction Signup() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    // i think something to do with props dependence maybe use useeffect?\n    // i need to pass it in or use effect or something\n    // i think i am using redux the wrong way since the state will not change, if i use selector\n    let openAlreadySignup = useSelector(selectSignupStatus) === 'existing';\n    let signupPending = useSelector(selectSignupStatus) === 'pending';\n    let signupError = useSelector(selectSignupStatus) === 'error';\n    let signupDone = useSelector(selectSignupStatus) === 'done';\n\n    // let history = useHistory();\n    // let location = useLocation();\n    //or do i use the redirect compoonent from router\n    // https://reactrouter.com/web/api/Redirect\n\n\n    const handleClose = () => {\n        dispatch(resetExistingAlert());\n        cl('handle close is called');\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            confirmpassword: '',\n            // email: 'sonohex@gmail.com',\n            // password: 'foobarbar',\n            // confirmpassword: 'foobarbar',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            // my server\n            dispatch(signupAsync(\n                { email: values.email, pw: values.password }\n            ));\n\n            //using firebase\n            // firebaseSignup(values.email, values.password);\n        },\n    });\n\n\n    return (\n        <div\n            className={classes.page}\n        >\n            <div className={classes.entrywrapper}>\n\n                <div className={classes.entry}>\n                    <Typography variant=\"h5\">\n                        Sign up for page saver.<br />\n                        It’s free\n                    </Typography>\n                    <form onSubmit={(e) => { e.preventDefault(); formik.handleSubmit(e) }} style={{ marginTop: \"24px\" }}>\n                        <TextField\n                            fullWidth\n                            id=\"email\"\n                            name=\"email\"\n                            label=\"Email\"\n                            value={formik.values.email}\n                            disabled={signupPending}\n                            onChange={formik.handleChange}\n                            error={formik.touched.email && Boolean(formik.errors.email)}\n                            helperText={formik.touched.email && formik.errors.email}\n                        />\n                        <TextField\n                            fullWidth\n                            id=\"password\"\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            disabled={signupPending}\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n                        />\n                        <TextField\n                            fullWidth\n                            id=\"confirmpassword\"\n                            name=\"confirmpassword\"\n                            label=\"Confirm Password\"\n                            type=\"password\"\n                            disabled={signupPending}\n                            value={formik.values.confirmpassword}\n                            onChange={formik.handleChange}\n                            error={formik.touched.confirmpassword && Boolean(formik.errors.confirmpassword)}\n                            helperText={formik.touched.confirmpassword && formik.errors.confirmpassword}\n                        />\n                        <Button disabled={signupPending} color=\"primary\" className={classes.btn} style={{ marginTop: \"24px\" }} variant=\"contained\" type=\"submit\">\n                            {signupPending ? \"Please Wait...\" : \"Sign up\"}\n                        </Button>\n                    </form>\n\n                </div>\n                <Hidden xsDown>\n                    <div className={classes.signuppicWrapper}>\n                        <img alt='' src={signuppic} className={classes.signuppic}></img>\n                    </div>\n                </Hidden>\n            </div>\n\n            <Snackbar open={openAlreadySignup} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"error\">\n                    A user with this email has already signed up.\n                </Alert>\n            </Snackbar>\n            <Snackbar open={signupError} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"warning\">\n                    Please try again later. Server might be experiencing high load.\n                </Alert>\n            </Snackbar>\n            {signupDone ? <Redirect\n                to={{\n                    pathname: \"/verify\",\n                    // state: { from: location }\n                }}\n            /> : null}\n        </div>\n    );\n}\n\n\nexport default Signup;","import { Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Cookies from 'js-cookie';\nimport Lottie from 'lottie-react';\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    // BrowserRouter as Router,\n    HashRouter as Router, Redirect, Route, Switch\n} from \"react-router-dom\";\nimport './App.css';\nimport FAQ from './component/FAQ';\nimport Footer from './component/Footer';\nimport HomePage from './component/HomePage';\nimport NoMatch from './component/NoMatch';\nimport VerifyEmail from './component/VerifyEmail';\nimport Dashboard from './features/dashboard/Dashboard';\nimport GlobalSnackbar from './features/globalsnackbar/Globalsnackbar';\nimport Login from './features/login/Login';\nimport { hide, selectIsLoggedIn, selectIsLoginShown, selectUsername, show } from './features/login/LoginSlice';\nimport NavBar from './features/navbar/NavBar';\nimport ProgressDialog from './features/progressdialog/ProgressDialog'; // \nimport Signup from './features/signup/Signup';\nimport bootingAnimation from \"./resources/39021-copying-data-web-developer-typing-on-computer.json\";\nimport { db } from './services/firebase';\nimport { cl } from './helper/util';\n\n/** For more details on\n * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\n * refer to: https://usehooks.com/useAuth/\n */\n// const authContext = createContext();\n\n// function ProvideAuth({ children }) {\n//     const auth = useProvideAuth();\n//     return (\n//         <authContext.Provider value={auth}>\n//             {children}\n//         </authContext.Provider>\n//     );\n// }\n\n// function useAuth() {\n//     return useContext(authContext);\n// }\n\n// function useProvideAuth() {\n//     const [user, setUser] = useState(null);\n//     // read from selector later\n\n//     const signin = cb => {\n//         // return fakeAuth.signin(() => {\n//         //     setUser(\"user\");\n//         //     cb();\n//         // });\n//     };\n\n//     const signout = cb => {\n//         // return fakeAuth.signout(() => {\n//         //   setUser(null);\n//         //   cb();\n//         // });\n//     };\n\n//     return {\n//         user,\n//         signin,\n//         signout\n//     };\n// }\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }) {\n    // let auth = useAuth();\n    // let isLoggedIn = useSelector(selectIsLoggedIn);\n    //this approach not okay because the state is removed on refresh. \n    //Important to keep this in mind when choosing whether to keep in state or localstorage and cookie\n    // should read from cookie instead\n    let isLoggedIn = !!(Cookies.get('email'));\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isLoggedIn ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            // pathname: \"/login\",\n                            // pathname: \"/pagesavepublicsite/signup\",\n                            pathname: \"/\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\n\nfunction SimpleDialog(props) {\n    // const classes = useStyles();\n    const { open } = props;\n\n\n    return (\n        <Dialog aria-labelledby=\"Server currently offline\" p={5} open={open}>\n            <Box p={6}>\n                <DialogTitle id=\"simple-dialog-title\">\n                    <Typography variant='h3' align='center'>Server is currently offline</Typography></DialogTitle>\n                <Typography variant='body1' align='center'>Please wait while we boot up the server...</Typography>\n                <div style={{ marginTop: '24px' }}>\n                    <Lottie animationData={bootingAnimation} />;\n                </div>\n            </Box>\n        </Dialog>\n    );\n}\n\nfunction App() {\n    let dispatch = useDispatch();\n    let isLoginShown = useSelector(selectIsLoginShown);\n    // let isLogoutShown = true;\n\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n                main: \"#333333\",\n            }\n        },\n        typography: {\n            // fontFamily: 'Raleway, Arial',\n            fontFamily: ['Lato', 'sans-serif'],\n            h1: {\n                fontSize: \"48.83px\",\n                lineHeight: \"53.96px\",\n                fontWeight: \"400\",\n            },\n\n            h2: {\n                fontSize: \"39.06px\",\n                lineHeight: \"38.67px\",\n                fontWeight: \"400\",\n            },\n\n            h3: {\n                fontSize: \"31.25px\",\n                lineHeight: \"34.53px\",\n                fontWeight: \"400\",\n            },\n\n            h4: {\n                fontSize: \"25px\",\n                lineHeight: \"31.37px\",\n                fontWeight: \"400\",\n            },\n\n            h5: {\n                fontSize: \"20px\",\n                lineHeight: \"32.9px\",\n                fontWeight: \"400\",\n            },\n\n            body1: {\n                fontSize: \"16px\",\n                lineHeight: \"23.2px\",\n                fontWeight: \"400\",\n            },\n\n            caption: {\n                fontSize: \"12.8px\",\n                lineHeight: \"17.54px\",\n                fontWeight: \"400\",\n            },\n\n            subtitle1: { // my equivalent of minicaption in my design\n                fontSize: \"10.24px\",\n                lineHeight: \"15.82px\",\n                fontWeight: \"400\",\n            },\n            // overrides: {\n            //     MuiCssBaseline: {\n            //         '@global': {\n            //             '@font-face': [raleway],\n            //         },\n            //     },\n            // },\n        },\n    });\n    // let baseliner = new Baseliner(8);\n    //user selector to fetch login status\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    const username = useSelector(selectUsername);\n    // \n    const [status, setStatus] = useState(\"online\");\n\n    useEffect(() => {\n        var ref = db.ref(\"status\");\n        ref.on('value', (snapshot) => {\n            cl('status: ' + snapshot.val());\n            setStatus(snapshot.val());\n        }, (errorObject) => {\n            cl('The read failed: ' + errorObject.name);\n        });\n    }, []);\n\n\n\n    const handleClickOpen = () => {\n        dispatch(show());\n    };\n\n    const handleClose = (value) => {\n        dispatch(hide());\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            {/* <Router basename=\"/pagesavepublicsite\"> */}\n            <Router basename=\"/\">\n                <CssBaseline />\n                {/* <ColumnGrid offset=\"320px\" columns={12} gutter=\"40px\" /> */}\n                {/* <GridBoxes size={8} /> */}\n                <div style={{\n                    position: \"relative\",\n                    minHeight: '100vh',\n                }}>\n                    <NavBar handleClickOpen={handleClickOpen} isLoggedOn={isLoggedIn} userEmail={username} />\n                    <Login open={isLoginShown} onClose={handleClose} />\n                    <Switch>\n                        <Route path=\"/signup\">\n                            <Signup />\n                        </Route>\n                        <Route path=\"/verify\">\n                            <VerifyEmail />\n                        </Route>\n                        <Route path=\"/faq\">\n                            <FAQ />\n                        </Route>\n                        <Route exact path=\"/\">\n                            <HomePage isLoggedOn={isLoggedIn} handleClickOpen={handleClickOpen} />\n                        </Route>\n                        <PrivateRoute exact path=\"/dashboard\">\n                            <Dashboard />\n                        </PrivateRoute>\n                        <Route path=\"*\">\n                            <NoMatch />\n                        </Route>\n                        {/* for future jump to specific pagesave https://reactrouter.com/web/guides/quick-start/2nd-example-nested-routing */}\n                    </Switch>\n                    <Footer />\n                </div>\n            </Router>\n            <ProgressDialog />\n            <SimpleDialog open={status === 'offline'} />\n            <GlobalSnackbar />\n        </ThemeProvider >\n    );\n}\n//TODO: refactor all the other internal snackbar to use the other snackbar,\n\n// function App() {\n//   const isSBOpen = useSelector(selectSBOpen);\n//   const SBMsg = useSelector(selectSBMsg);\n//   const SBMsgType = useSelector(selectSBType);\n//   const dispatch = useDispatch();\n\n//   const handleClose = (event, reason) => {\n\n//     if (reason === 'clickaway') {\n//       return;\n//     }\n//     cl('trying to close');\n//     // setOpen(false);\n//     // cl('type of dispatch: ' + typeof dispatch);\n//     // cl('type of closeSB: ' + typeof closeSB);\n//     // cl('closeSB: ' + closeSB);\n//     dispatch(closeSB());\n//   };\n\n//   return (\n//     <>\n//       <CssBaseline />\n//       <Hero />\n//       <div style={{ paddingTop: \"100px\" }}></div>\n//       <Archive />\n//       <Snackbar open={isSBOpen} autoHideDuration={1200} onClose={handleClose}>\n//         <Alert onClose={handleClose} severity={SBMsgType}>\n//           {SBMsg}\n//         </Alert>\n//       </Snackbar>\n//       <ProgressDialog />\n//       <Footer />\n//     </>\n//   );\n// }\n\n\nexport default App;\n","import { put, takeLatest, all, select } from 'redux-saga/effects';\nimport { updateUrls } from './features/progressdialog/progressdialogSlice';\nimport { fetchArchivesAsync } from './features/archive/archiveSlice';\nimport { cl } from './helper/util';\n\nfunction* queueChangesAsync(action) {\n    let state = yield select();\n    cl('Progress dialog tracking queue changes');\n    cl('queue changes async curState');\n    cl(state);\n    cl('action:');\n    cl(action);\n    yield put(updateUrls(action.payload));\n    yield put(fetchArchivesAsync());\n}\nfunction* watchQueueChangesAsync() {\n    yield takeLatest('QUEUE_CHANGE', queueChangesAsync);\n}\nexport default function* rootSaga() {\n    yield all([\n        watchQueueChangesAsync(),\n    ]);\n}","import { configureStore } from '@reduxjs/toolkit';\nimport submissionBarReducer from '../features/submissionbar/submissionbarSlice';\nimport loginReducer from '../features/login/LoginSlice';\nimport archiveReducer from '../features/archive/archiveSlice';\nimport signupReducer from '../features/signup/SignupSlice';\nimport snackbarReducer from '../features/globalsnackbar/GlobalSnackbarSlice';\nimport progressdialogReducer from '../features/progressdialog/progressdialogSlice';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport { logoutAsync } from '../features/login/LoginSlice';\nimport { combineReducers } from 'redux';\nimport { cl } from '../helper/util';\n\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst combinedReducer = combineReducers({\n  // counter: counterReducer,\n  submissionbar: submissionBarReducer,\n  archive: archiveReducer,\n  progressdialog: progressdialogReducer,\n  login: loginReducer,\n  signup: signupReducer,\n  snackbar: snackbarReducer,\n  // navbar: navbarReducer,\n});\n\nconst rootReducer = (state, action) => {\n  cl(logoutAsync.fulfilled + \"\");\n  cl(logoutAsync.fulfilled.toString());\n  cl('compare to:' + action.type);\n  if (action.type === logoutAsync.fulfilled.type) { // check for action type\n    //reset the whole state when logout\n    state = undefined;\n  }\n  return combinedReducer(state, action);\n};\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    [...getDefaultMiddleware(), sagaMiddleware],\n\n\n});\n\nsagaMiddleware.run(rootSaga)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './app/store';\nimport './index.css';\nimport { cl } from './helper/util';\n// import * as serviceWorker from './serviceWorker';\n//no longer using this \n\n// function onRenderCallback(\n//   id, // the \"id\" prop of the Profiler tree that has just committed\n//   phase, // either \"mount\" (if the tree just mounted) or \"update\" (if it re-rendered)\n//   actualDuration, // time spent rendering the committed update\n//   baseDuration, // estimated time to render the entire subtree without memoization\n//   startTime, // when React began rendering this update\n//   commitTime, // when React committed this update\n//   interactions // the Set of interactions belonging to this update\n// ) {\n//   // Aggregate or log render timings...\n//   cl(id, phase, actualDuration, baseDuration, startTime, commitTime, interactions);\n// }\n(async function () {\n  try {\n    // this will say it is insecure\n    // window.registration = await navigator.serviceWorker.register('./pagesavepublicsite/firebase-messaging-sw.js');\n    // so i had to use this\n    // window.registration = await navigator.serviceWorker.register('./firebase-messaging-sw.js');\n    // have to write full path it seems\n    //TODO: have to edit this later for production site\n\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      cl('serviceworker installing dev')\n      // window.registration = await navigator.serviceWorker.register('https://localhost:3000/pagesavepublicsite/firebase-messaging-sw.js');\n      const swUrl = `${process.env.PUBLIC_URL}/firebase-messaging-sw.js`;\n      window.registration = await navigator.serviceWorker.register(swUrl);\n      // dev code\n      cl('success serviceworker');\n    } else {\n      // production code\n      cl('serviceworker installing production version')\n      // window.registration = await navigator.serviceWorker.register('https://mightbehuman-creator.github.io/pagesavepublicsite/firebase-messaging-sw.js');\n      const swUrl = `${process.env.PUBLIC_URL}/firebase-messaging-sw.js`;\n      // window.registration = await navigator.serviceWorker.register('./pagesavepublicsite/firebase-messaging-sw.js');\n      window.registration = await navigator.serviceWorker.register(swUrl);\n      cl('success serviceworker');\n    }\n    cl('ServiceWorker registration successful with scope: ', window.registration.scope);\n  } catch (err) {\n    cl('ServiceWorker registration failed: ', err);\n  }\n}());\n\nReactDOM.render(\n  // <React.StrictMode>\n  // <Profiler id=\"Navigation\" onRender={onRenderCallback}>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  // </Profiler>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n// i not using this \n"],"sourceRoot":""}