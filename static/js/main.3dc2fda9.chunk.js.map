{"version":3,"sources":["features/submissionbar/SubmissionBar.module.css","constants.js","features/archive/archiveAPI.js","features/archive/archiveSlice.js","features/archive/Archive.js","features/submissionbar/submissionbarAPI.js","features/submissionbar/submissionbarSlice.js","features/submissionbar/SubmissionBar.js","component/Hero.js","component/Footer.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","productionURL","fetchArchives","endpoint","Promise","resolve","reject","axios","get","then","response","console","log","catch","error","fetchArchivesAsync","createAsyncThunk","a","fetchArchivesAPI","data","archiveSlice","createSlice","name","initialState","archives","status","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","selectArchives","archive","selectStatus","useStyles","makeStyles","theme","centering","display","justifyContent","alignItems","marginTop","spacing","archivecontainer","firstArchive","gridcontainer","backgroundColor","palette","background","paper","gridTemplateColumns","maxWidth","imgofpage","width","overflowY","height","maxHeight","verticalAlign","objectFit","objectPosition","archiveTitle","fontFamily","fillheight","SingleArchive","props","classes","className","idx","Typography","variant","gutterBottom","title","Container","Paper","elevation","href","img0","target","src","img1","img2","Archive","dispatch","useDispatch","useSelector","reverseArchives","reverse","useState","page","setPage","useEffect","filter","x","map","id","Pagination","onChange","e","v","count","Math","ceil","length","color","submitURL","url","post","submitURLAsync","selectSBOpen","submissionbar","snackbarOpen","submissionbarSlice","closeSB","actions","container","savebutton","minWidth","alignSelf","breakpoints","up","flexDirection","minwidth","marginLeft","input","root","margin","SubmissionBar","textRef","React","createRef","noValidate","autoComplete","TextField","inputRef","label","Button","startIcon","onClick","current","value","heroBackground","textAlign","paddingTop","boxSizing","Hero","footercontainer","minHeight","primary","dark","borderTop","footertext","contrastText","footerMarginTop","Alert","App","isSBOpen","handleClose","event","reason","CssBaseline","Snackbar","open","autoHideDuration","onClose","severity","Footer","fetchCount","amount","setTimeout","incrementAsync","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","submissionBarReducer","archiveReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3dc2fda9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SubmissionBar_container__20zvx\",\"inputbar\":\"SubmissionBar_inputbar__eWceA\"};","export const productionURL = \"https://pagesave.herokuapp.com\";\nexport const localURL = 'http://localhost:5000';","import axios from 'axios';\nimport { localURL, productionURL } from '../../constants.js'\nexport function fetchArchives() {\n    let endpoint = '';\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n        endpoint = localURL + '/pagesave';\n        // dev code\n    } else {\n        // production code\n        endpoint = productionURL + '/pagesave';\n    }\n    return new Promise((resolve, reject) => {\n        axios.get(endpoint, {\n        })\n            .then(function (response) {\n                console.log(response);\n                resolve(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n                reject(error);\n            });\n\n    });\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchArchives as fetchArchivesAPI } from './archiveAPI';\n\nconst initialState = {\n    archives: [],\n    status: 'idle',\n};\n\nexport const fetchArchivesAsync = createAsyncThunk(\n    'archive/fetchArchives',\n    async () => {\n        const response = await fetchArchivesAPI();\n        return response.data;\n    }\n);\n\nexport const archiveSlice = createSlice({\n    name: 'archive',\n    initialState,\n    reducers: {\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(fetchArchivesAsync.pending, (state) => {\n                state.status = 'loading';\n            })\n            .addCase(fetchArchivesAsync.fulfilled, (state, action) => {\n                state.status = 'idle';\n                state.archives = action.payload;\n            })\n    }\n});\n\n\nexport const selectArchives = (state) => state.archive.archives;\nexport const selectStatus = (state) => state.archive.status;\nexport default archiveSlice.reducer;","import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchArchivesAsync, selectArchives, selectStatus } from './archiveSlice';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Pagination from '@material-ui/lab/Pagination';\n\n\nconst EACH_PAGE_COUNT = 5;\n\nconst useStyles = makeStyles((theme) => ({\n    centering: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: theme.spacing(4),\n    },\n    archivecontainer: {\n        marginTop: theme.spacing(8),\n    },\n    firstArchive: {\n        marginTop: theme.spacing(4),\n    },\n    gridcontainer: {\n        backgroundColor: theme.palette.background.paper,\n        display: \"grid\",\n        gridTemplateColumns: \"2fr 3fr 4fr\",\n        maxWidth: \"100%\",\n        marginTop: theme.spacing(3),\n    },\n    imgofpage: {\n        width: \"max-content\",\n        overflowY: \"hidden\",\n        height: \"100%\",\n        maxHeight: \"100%\",\n        maxWidth: \"100%\",\n        verticalAlign: \"top\",\n        objectFit: \"cover\",\n        // objectFit: \"contain\",\n        // objectFit: \"scale-down\",\n        // https://www.w3schools.com/css/css3_object-fit.asp\n        objectPosition: \"0% 0%\",\n    },\n    archiveTitle: {\n        fontFamily: \"'Train One', cursive\",\n    },\n    paper: {\n        height: \"100%\",\n    },\n    fillheight: {\n        // height: \"100%\",\n        height: \"200px\",\n    }\n}));\n\nfunction SingleArchive(props) {\n    console.log(props);\n    const classes = useStyles();\n\n    return (\n        <div className={props.idx == 0 ? classes.firstArchive : classes.archivecontainer} >\n            <Typography variant=\"h5\" gutterBottom>\n                {props.title}\n            </Typography>\n            <div className={classes.gridcontainer}>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img0} target=\"_blank\">\n                            <img className={classes.imgofpage} src={props.img0} />\n                        </a>\n                    </Paper>\n                </Container>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img1} target=\"_blank\">\n                            <img className={classes.imgofpage} src={props.img1} />\n                        </a>\n                    </Paper>\n                </Container>\n                <Container className={classes.fillheight}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <a href={props.img2} target=\"_blank\">\n                            <img className={classes.imgofpage} src={props.img2} />\n                        </a>\n                    </Paper>\n                </Container>\n            </div>\n\n        </div >\n    );\n}\n\nexport default function Archive() {\n    const dispatch = useDispatch();\n    // select the archives\n    let archives = useSelector(selectArchives);\n    let status = useSelector(selectStatus);\n    console.log('reverse');\n    // window.aaa = archives;\n    let reverseArchives = [...archives].reverse();\n    let [page, setPage] = useState(1);\n\n    const classes = useStyles();\n    useEffect(() => {\n        console.log('running archive mounting stuff');\n        //dispatch\n        dispatch(fetchArchivesAsync());\n    }, []);\n\n    function handlePageChange(e, v) {\n        console.log(v);\n        setPage(v);\n    }\n\n    return status !== \"loading\" && (\n        <Container maxWidth=\"md\">\n            <Typography variant=\"h3\" className={classes.archiveTitle} gutterBottom>\n                ARCHIVES\n            </Typography>\n            {reverseArchives.filter(\n                (x, idx) => idx >= (page - 1) * EACH_PAGE_COUNT\n                    && idx < page * EACH_PAGE_COUNT).map(\n                        (a, idx) => (<SingleArchive idx={idx} key={a.id} {...a} />)\n                    )}\n            <div className={classes.centering}>\n                <Pagination page={page} onChange={handlePageChange} count={Math.ceil(reverseArchives.length / 5)} color=\"secondary\" />\n            </div>\n        </Container>\n    );\n}","import axios from 'axios';\nimport { localURL, productionURL } from '../../constants.js'\nexport function submitURL(url) {\n    let endpoint = '';\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n        endpoint = localURL + '/pagesave';\n        // dev code\n    } else {\n        // production code\n        endpoint = productionURL + '/pagesave';\n    }\n    return new Promise((resolve, reject) => {\n        axios.post(endpoint, {\n            url: url,\n        })\n            .then(function (response) {\n                console.log(response);\n                resolve(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n                reject(error);\n            });\n\n    });\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { submitURL } from './submissionbarAPI.js';\n\nconst initialState = {\n    status: 'idle',\n    snackbarOpen: false,\n}\n\nexport const submitURLAsync = createAsyncThunk(\n    'submissionbar/submitURL',\n    async (url) => {\n        console.log(`trying to submit async ${url}`);\n        const response = await submitURL(url);\n        return response.data;\n    }\n)\n\n\nexport const selectSBOpen = (state) => state.submissionbar.snackbarOpen;\n\nexport const submissionbarSlice = createSlice({\n    name: 'submissionbar',\n    initialState,\n    reducers: {\n        closeSB: (state) => {\n            state.snackbarOpen = false;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(submitURLAsync.pending, (state) => {\n                state.status = 'submitting';\n            })\n            .addCase(submitURLAsync.fulfilled, (state, action) => {\n                state.status = 'idle';\n                // state.value += action.payload;\n                state.snackbarOpen = true;\n                // clear the \n            });\n\n    },\n});\n\nexport const { closeSB } = submissionbarSlice.actions;\n\nexport default submissionbarSlice.reducer;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport styles from './SubmissionBar.module.css';\nimport { submitURLAsync } from './submissionbarSlice';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: theme.spacing(8),\n    },\n    savebutton: {\n        minWidth: \"150px\",\n        alignSelf: \"flex-end\",\n        height: \"56px\",\n        [theme.breakpoints.up('md')]: {\n            flexDirection: \"row\",\n            minwidth: \"0px\",\n            marginLeft: \"32px\",\n        },\n    },\n    input: {\n        width: \"80%\",\n    },\n    root: {\n        margin: \"auto\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        '& > *': {\n            margin: theme.spacing(2),\n        },\n        flexDirection: \"column\",\n        [theme.breakpoints.up('sm')]: {\n            flexDirection: \"row\",\n            maxWidth: \"500px\",\n        },\n    },\n}));\n\n\nexport default function SubmissionBar() {\n    // const [submissiontext, setSubmissionText] = useState('');\n    // we use uncontrolled ref\n    // need media query later for the submission button below if size is too small\n    const dispatch = useDispatch();;\n\n    let textRef = React.createRef();\n    let submitURL = () => {\n        let url = textRef.current.value;\n        console.log(url);\n        dispatch(submitURLAsync(url));\n        textRef.current.value = '';\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.container}>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField\n                    inputRef={textRef}\n                    className={classes.input}\n                    label=\"Enter url of page to save\"\n                />\n                <Button\n                    className={classes.savebutton}\n                    startIcon={<SaveIcon />}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={submitURL}\n                >Save</Button>\n            </form>\n        </div>\n    )\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SubmissionBar from '../features/submissionbar/SubmissionBar';\nconst useStyles = makeStyles({\n    title: {\n        fontFamily: \"'Train One', cursive\",\n        // color: \"white\",\n    },\n    heroBackground: {\n        width: \"100%\",\n        margin: 0,\n        textAlign: \"center\",\n        height: \"500px\",\n        paddingTop: \"120px\",\n        boxSizing: \"border-box\",\n        height: \"100vh\",\n        // background: \"gray url(https://www.toptal.com/designers/subtlepatterns/patterns/moroccan-flower-dark.png) repeat 0 0\",\n        // animation: \"slide 20s linear infinite\",\n    }\n});\n\nexport default function Hero() {\n    const classes = useStyles();\n    return (\n        <div className={classes.heroBackground}>\n            <Typography className={classes.title} variant=\"h2\" gutterBottom>\n                Page Saver\n            </Typography>\n            <div></div>\n            <SubmissionBar />\n        </div >\n    );\n}","import Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    footercontainer: {\n        minHeight: \"100px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        background: theme.palette.primary.dark,\n        borderTop: \"1px solid black\",\n    },\n    footertext: {\n        margin: \"auto\",\n        textAlign: \"center\",\n        color: theme.palette.primary.contrastText,\n    },\n    footerMarginTop: {\n        marginTop: theme.spacing(4),\n    }\n}));\nexport default function () {\n    const classes = useStyles();\n    return (\n        <footer className={classes.footerMarginTop}>\n            <div className={classes.footercontainer}>\n                <Typography className={classes.footertext} variant=\"subtitle\" >\n                    mightbehuman@protonmail.com\n            </Typography>\n            </div>\n        </footer >\n    );\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './App.css';\nimport Archive from './features/archive/Archive';\nimport Hero from './component/Hero.js';\nimport Footer from './component/Footer.js';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { selectSBOpen, closeSB } from './features/submissionbar/submissionbarSlice';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\n\nfunction App() {\n  const isSBOpen = useSelector(selectSBOpen);\n  const dispatch = useDispatch();\n\n  const handleClose = (event, reason) => {\n\n    if (reason === 'clickaway') {\n      return;\n    }\n    console.log('trying to close');\n    // setOpen(false);\n    // console.log('type of dispatch: ' + typeof dispatch);\n    // console.log('type of closeSB: ' + typeof closeSB);\n    // console.log('closeSB: ' + closeSB);\n    dispatch(closeSB());\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <Hero />\n      <Archive />\n      <Snackbar open={isSBOpen} autoHideDuration={1200} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          URL saved!\n        </Alert>\n      </Snackbar>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport submissionBarReducer from '../features/submissionbar/submissionbarSlice';\nimport archiveReducer from '../features/archive/archiveSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    submissionbar: submissionBarReducer,\n    archive: archiveReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}